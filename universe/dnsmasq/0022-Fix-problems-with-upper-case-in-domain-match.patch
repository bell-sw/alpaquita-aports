Patch-Source: https://thekelleys.org.uk/gitweb/?p=dnsmasq.git;a=commitdiff;h=e3093b532c34a8d95c8c751bdd9cabf552f5bf05 (modified)
--
From e3093b532c34a8d95c8c751bdd9cabf552f5bf05 Mon Sep 17 00:00:00 2001
From: Simon Kelley <simon@thekelleys.org.uk>
Date: Sun, 28 Nov 2021 18:39:42 +0000
Subject: [PATCH 1/1] Fix problems with upper-case in domain-match.

The domain-match rewrite didn't take into account
that domain names are case-insensitive, so things like

--address=/Example.com/.....

didn't work correctly.
---
 src/dnsmasq.h      |  1 +
 src/domain-match.c |  2 +-
 src/forward.c      |  2 +-
 src/util.c         | 16 ++++++++++++----
 4 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/src/dnsmasq.h b/src/dnsmasq.h
index bf7685d..05c1743 100644
--- a/src/dnsmasq.h
+++ b/src/dnsmasq.h
@@ -1366,6 +1366,7 @@ void safe_pipe(int *fd, int read_noblock);
 void *whine_malloc(size_t size);
 int sa_len(union mysockaddr *addr);
 int sockaddr_isequal(const union mysockaddr *s1, const union mysockaddr *s2);
+int hostname_order(const char *a, const char *b);
 int hostname_isequal(const char *a, const char *b);
 int hostname_issubdomain(char *a, char *b);
 time_t dnsmasq_time(void);
diff --git a/src/domain-match.c b/src/domain-match.c
index 6f59566..b457f5b 100644
--- a/src/domain-match.c
+++ b/src/domain-match.c
@@ -495,7 +495,7 @@ static int order(char *qdomain, size_t qlen, struct server *serv)
   if (qlen > dlen)
     return -1;
 
-  return strcmp(qdomain, serv->domain);
+  return hostname_order(qdomain, serv->domain);
 }
 
 static int order_servers(struct server *s1, struct server *s2)
diff --git a/src/util.c b/src/util.c
index 7bef630..f2adac1 100644
--- a/src/util.c
+++ b/src/util.c
@@ -352,7 +352,7 @@ int sa_len(union mysockaddr *addr)
 }
 
 /* don't use strcasecmp and friends here - they may be messed up by LOCALE */
-int hostname_isequal(const char *a, const char *b)
+int hostname_order(const char *a, const char *b)
 {
   unsigned int c1, c2;
   
@@ -365,11 +365,19 @@ int hostname_isequal(const char *a, const char *b)
     if (c2 >= 'A' && c2 <= 'Z')
       c2 += 'a' - 'A';
     
-    if (c1 != c2)
-      return 0;
+    if (c1 < c2)
+      return -1;
+    else if (c1 > c2)
+      return 1;
+    
   } while (c1);
   
-  return 1;
+  return 0;
+}
+
+int hostname_isequal(const char *a, const char *b)
+{
+  return hostname_order(a, b) == 0;
 }
 
 /* is b equal to or a subdomain of a return 2 for equal, 1 for subdomain */
-- 
2.20.1

