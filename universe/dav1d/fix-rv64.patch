Patch-Source: https://code.videolan.org/videolan/dav1d/-/merge_requests/1629
From 6c51565174f08baf7441e22ea9f84a25c716c5da Mon Sep 17 00:00:00 2001
From: "Nathan E. Egge" <unlord@xiph.org>
Date: Sat, 16 Mar 2024 10:12:09 -0400
Subject: [PATCH] riscv: Check for standards compliant RVV 1.0+

---
 src/meson.build |  1 +
 src/riscv/cpu.S | 38 ++++++++++++++++++++++++++++++++++++++
 src/riscv/cpu.c |  4 +++-
 3 files changed, 42 insertions(+), 1 deletion(-)
 create mode 100644 src/riscv/cpu.S

diff --git a/src/meson.build b/src/meson.build
index dc4be5fd..f3d7bcaf 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -256,6 +256,7 @@ if is_asm_enabled
     elif host_machine.cpu_family().startswith('riscv')
         libdav1d_sources += files(
             'riscv/cpu.c',
+            'riscv/cpu.S',
         )
         if host_machine.cpu_family() == 'riscv64'
             libdav1d_sources += files(
diff --git a/src/riscv/cpu.S b/src/riscv/cpu.S
new file mode 100644
index 00000000..ca103a9a
--- /dev/null
+++ b/src/riscv/cpu.S
@@ -0,0 +1,38 @@
+/******************************************************************************
+ * Copyright © 2018, VideoLAN and dav1d authors
+ * Copyright © 2024, Nathan Egge
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice, this
+ *    list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ *    this list of conditions and the following disclaimer in the documentation
+ *    and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *****************************************************************************/
+
+#include "src/riscv/asm.S"
+
+function has_compliant_rvv, export=1, ext=v
+  vsetvli zero, zero, e8, m1, ta, ma
+  csrr a1, vtype
+  li a0, 0
+  blt a1, x0, no_rvv10
+  li a0, 1
+no_rvv10:
+  ret
+endfunc
diff --git a/src/riscv/cpu.c b/src/riscv/cpu.c
index 16377109..30e13543 100644
--- a/src/riscv/cpu.c
+++ b/src/riscv/cpu.c
@@ -38,11 +38,13 @@
 
 #endif
 
+int dav1d_has_compliant_rvv(void);
+
 COLD unsigned dav1d_get_cpu_flags_riscv(void) {
     unsigned flags = 0;
 #if defined(HAVE_GETAUXVAL)
     unsigned long hw_cap = getauxval(AT_HWCAP);
-    flags |= (hw_cap & HWCAP_RVV) ? DAV1D_RISCV_CPU_FLAG_V : 0;
+    flags |= (hw_cap & HWCAP_RVV) && dav1d_has_compliant_rvv() ? DAV1D_RISCV_CPU_FLAG_V : 0;
 #endif
 
     return flags;
-- 
GitLab

