From dc46a9c324ae94d89da41ea9a3f97503115df88e Mon Sep 17 00:00:00 2001
From: Wang Jing <wangjing@loongson.cn>
Date: Tue, 8 Jun 2021 19:44:49 +0800
Subject: [PATCH] Add LoongArch support

This commit completes LoongArch support.

LoongArch supports byte and short atomic operations,
and defines UATOMIC_HAS_ATOMIC_BYTE and UATOMIC_HAS_ATOMIC_SHORT.

Signed-off-by: Wang Jing <wangjing@loongson.cn>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Change-Id: I335e654939bfc90994275f2a4fad550c95f3eba4
---
 README.md                        |  1 +
 include/Makefile.am              |  2 ++
 include/urcu/arch.h              |  6 ++++
 include/urcu/arch/loongarch.h    | 49 ++++++++++++++++++++++++++++++++
 include/urcu/uatomic.h           |  2 ++
 include/urcu/uatomic/loongarch.h | 44 ++++++++++++++++++++++++++++
 6 files changed, 104 insertions(+)
 create mode 100644 include/urcu/arch/loongarch.h
 create mode 100644 include/urcu/uatomic/loongarch.h

diff --git a/README.md b/README.md
index 1f7aaaf..cadf4d1 100644
--- a/README.md
+++ b/README.md
@@ -57,6 +57,7 @@ Currently, the following architectures are supported:
   - hppa/PA-RISC
   - m68k
   - RISC-V
+  - LoongArch
 
 Tested on:
 
diff --git a/include/Makefile.am b/include/Makefile.am
index c1adfd1..4c32a4c 100644
--- a/include/Makefile.am
+++ b/include/Makefile.am
@@ -12,6 +12,7 @@ nobase_include_HEADERS = \
 	urcu/arch.h \
 	urcu/arch/hppa.h \
 	urcu/arch/ia64.h \
+	urcu/arch/loongarch.h \
 	urcu/arch/m68k.h \
 	urcu/arch/mips.h \
 	urcu/arch/nios2.h \
@@ -72,6 +73,7 @@ nobase_include_HEADERS = \
 	urcu/uatomic.h \
 	urcu/uatomic/hppa.h \
 	urcu/uatomic/ia64.h \
+	urcu/uatomic/loongarch.h \
 	urcu/uatomic/m68k.h \
 	urcu/uatomic/mips.h \
 	urcu/uatomic/nios2.h \
diff --git a/include/urcu/arch.h b/include/urcu/arch.h
index 717d79c..5147d30 100644
--- a/include/urcu/arch.h
+++ b/include/urcu/arch.h
@@ -33,6 +33,7 @@
  * URCU_ARCH_HPPA : All HP PA-RISC variants
  * URCU_ARCH_M68K : All Motorola 68000 variants
  * URCU_ARCH_RISCV : All RISC-V variants
+ * URCU_ARCH_LOONGARCH : All LoongArch variants
  */
 
 #if (defined(__INTEL_OFFLOAD) || defined(__TARGET_ARCH_MIC) || defined(__MIC__))
@@ -151,6 +152,11 @@
 #define URCU_ARCH_RISCV 1
 #include <urcu/arch/riscv.h>
 
+#elif defined(__loongarch__)
+
+#define URCU_ARCH_LOONGARCH 1
+#include <urcu/arch/loongarch.h>
+
 #else
 #error "Cannot build: unrecognized architecture, see <urcu/arch.h>."
 #endif
diff --git a/include/urcu/arch/loongarch.h b/include/urcu/arch/loongarch.h
new file mode 100644
index 0000000..a6d9fee
--- /dev/null
+++ b/include/urcu/arch/loongarch.h
@@ -0,0 +1,49 @@
+#ifndef _URCU_ARCH_LOONGARCH_H
+#define _URCU_ARCH_LOONGARCH_H
+
+/*
+ * arch/loongarch.h: trivial definitions for the LoongArch architecture.
+ *
+ * Copyright (c) 2021 Wang Jing <wangjing@loongson.cn>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#include <urcu/compiler.h>
+#include <urcu/config.h>
+#include <urcu/syscall-compat.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include <stdlib.h>
+#include <sys/time.h>
+
+/*
+ * On Linux, define the membarrier system call number if not yet available in
+ * the system headers.
+ */
+#if (defined(__linux__) && !defined(__NR_membarrier))
+#define __NR_membarrier		283
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#include <urcu/arch/generic.h>
+
+#endif /* _URCU_ARCH_LOONGARCH_H */
diff --git a/include/urcu/uatomic.h b/include/urcu/uatomic.h
index eeced1e..561c829 100644
--- a/include/urcu/uatomic.h
+++ b/include/urcu/uatomic.h
@@ -93,6 +93,8 @@ static inline int cmm_to_c11(int mo)
 #include <urcu/uatomic/m68k.h>
 #elif defined(URCU_ARCH_RISCV)
 #include <urcu/uatomic/riscv.h>
+#elif defined(URCU_ARCH_LOONGARCH)
+#include <urcu/uatomic/loongarch.h>
 #else
 #error "Cannot build: unrecognized architecture, see <urcu/arch.h>."
 #endif
diff --git a/include/urcu/uatomic/loongarch.h b/include/urcu/uatomic/loongarch.h
new file mode 100644
index 0000000..f41302a
--- /dev/null
+++ b/include/urcu/uatomic/loongarch.h
@@ -0,0 +1,44 @@
+#ifndef _URCU_UATOMIC_ARCH_LOONGARCH_H
+#define _URCU_UATOMIC_ARCH_LOONGARCH_H
+
+/*
+ * Atomic exchange operations for the LoongArch architecture. Let GCC do it.
+ *
+ * Copyright (c) 2021 Wang Jing <wangjing@loongson.cn>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to
+ * deal in the Software without restriction, including without limitation the
+ * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+ * sell copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+ * IN THE SOFTWARE.
+ */
+
+#include <urcu/compiler.h>
+#include <urcu/system.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#define UATOMIC_HAS_ATOMIC_BYTE
+#define UATOMIC_HAS_ATOMIC_SHORT
+
+#ifdef __cplusplus
+}
+#endif
+
+#include <urcu/uatomic/generic.h>
+
+#endif /* _URCU_UATOMIC_ARCH_LOONGARCH_H */
-- 
2.43.0

