--- a/lib/Driver/ToolChains/Linux.h
+++ b/lib/Driver/ToolChains/Linux.h
@@ -11,6 +11,7 @@
 
 #include "Gnu.h"
 #include "clang/Driver/ToolChain.h"
+#include "clang/Basic/LangOptions.h"
 
 namespace clang {
 namespace driver {
@@ -60,6 +61,15 @@
   llvm::DenormalMode getDefaultDenormalModeForType(
       const llvm::opt::ArgList &DriverArgs, const JobAction &JA,
       const llvm::fltSemantics *FPType = nullptr) const override;
+
+  LangOptions::StackProtectorMode
+  GetDefaultStackProtectorLevel(bool KernelOrKext) const override {
+    StringRef VendorName = Linux::getTriple().getVendorName();
+    if (VendorName.compare("alpaquita") == 0)
+      return LangOptions::SSPStrong;
+
+    return LangOptions::SSPOff;
+  }
 
 protected:
   Tool *buildAssembler() const override;
--- a/test/Driver/fsanitize.c
+++ b/test/Driver/fsanitize.c
@@ -666,12 +666,12 @@
 // RUN: %clang -fno-sanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=NOSP
 // NOSP-NOT: "-fsanitize=safe-stack"
 
-// RUN: %clang -target x86_64-linux-gnu -fsanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=NO-SP
+// RUN: %clang -target x86_64-linux-gnu -fsanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=SP
 // RUN: %clang -target x86_64-linux-gnu -fsanitize=address,safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=SP-ASAN
 // RUN: %clang -target x86_64-linux-gnu -fstack-protector -fsanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=SP
 // RUN: %clang -target x86_64-linux-gnu -fsanitize=safe-stack -fstack-protector-all -### %s 2>&1 | FileCheck %s -check-prefix=SP
-// RUN: %clang -target arm-linux-androideabi -fsanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=NO-SP
-// RUN: %clang -target aarch64-linux-android -fsanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=NO-SP
+// RUN: %clang -target arm-linux-androideabi -fsanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=SP
+// RUN: %clang -target aarch64-linux-android -fsanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=SP
 // RUN: %clang -target i386-contiki-unknown -fsanitize=safe-stack -### %s 2>&1 | FileCheck %s -check-prefix=NO-SP
 // NO-SP-NOT: stack-protector
 // NO-SP: "-fsanitize=safe-stack"
--- a/test/Driver/stack-protector.c
+++ b/test/Driver/stack-protector.c
@@ -33,6 +33,22 @@
 // SSP-PS4-BUF: "-stack-protector" "2"
 // SSP-PS4-BUF: "-stack-protector-buffer-size" "16"
 
+// Test default stack protector values for Alpaquita
+
+// RUN: %clang -target x86_64-alpaquita-linux-musl -### %s 2>&1 | FileCheck %s -check-prefix=ALPAQUITA
+// ALPAQUITA: "-stack-protector" "2"
+
+// RUN: %clang -target x86_64-alpaquita-linux-musl -fstack-protector -### %s 2>&1 | FileCheck %s -check-prefix=ALPAQUITA_SPS
+// ALPAQUITA_SPS: "-stack-protector" "2"
+
+// RUN: %clang -target x86_64-alpaquita-linux-musl -fstack-protector-all -### %s 2>&1 | FileCheck %s -check-prefix=ALPAQUITA_ALL
+// ALPAQUITA_ALL: "-stack-protector" "3"
+// ALPAQUITA_ALL-NOT: "-stack-protector-buffer-size"
+
+// RUN: %clang -target x86_64-alpaquita-linux-musl -fno-stack-protector -### %s 2>&1 | FileCheck %s -check-prefix=ALPAQUITA_NOSSP
+// ALPAQUITA_NOSSP-NOT: "-stack-protector"
+// ALPAQUITA_NOSSP-NOT: "-stack-protector-buffer-size"
+
 // Test default stack protector values for Darwin platforms
 
 // RUN: %clang -target armv7k-apple-watchos2.0 -### %s 2>&1 | FileCheck %s -check-prefix=SSP_WATCHOS
--- a/lib/Driver/ToolChains/Gnu.cpp
+++ b/lib/Driver/ToolChains/Gnu.cpp
@@ -563,6 +563,10 @@
   // The profile runtime also needs access to system libraries.
   getToolChain().addProfileRTLibs(Args, CmdArgs);
 
+  if (!Args.hasArg(options::OPT_nostdlib, options::OPT_nostartfiles, options::OPT_nodefaultlibs)) {
+    CmdArgs.push_back("-lssp_nonshared");
+  }
+
   if (D.CCCIsCXX() &&
       !Args.hasArg(options::OPT_nostdlib, options::OPT_nodefaultlibs,
                    options::OPT_r)) {
