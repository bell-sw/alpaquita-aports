pkgname=clang
# Note: Update together with llvm.
pkgver=13.0.1
pkgrel=3
_llvmver=${pkgver%%.*}
pkgdesc="A C language family front-end for LLVM"
arch="all"
url="https://llvm.org/"
license="Apache-2.0"
options="!check" # fail to build
makedepends="
	cmake
	libxml2-dev
	libxml2-utils
	llvm$_llvmver-dev
	llvm$_llvmver-static
	llvm$_llvmver-test-utils
	samurai
	python3
	py3-sphinx
	"
checkdepends="diffutils bash gtest-dev"
depends_dev="$pkgname=$pkgver-r$pkgrel $pkgname-extra-tools=$pkgver-r$pkgrel"
subpackages="$pkgname-static $pkgname-doc $pkgname-libs
	$pkgname-analyzer::noarch
	$pkgname-dev
	$pkgname-extra-tools:extra
	py3-$pkgname:python:noarch
	"
source="https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/clang-$pkgver.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/clang-tools-extra-$pkgver.src.tar.xz
	10-add-musl-triples.patch
	30-Enable-stack-protector-by-default-for-Alpine-Linux.patch
	"
builddir="$srcdir/clang-$pkgver.src"

prepare() {
	mv "$srcdir/clang-tools-extra-$pkgver.src" "$builddir/tools/extra"
	# Substitute python hashbangs with python3.
	# Some scripts do not have a *.py postfix, thus iterate over all files.
	grep -l -R "^#!/usr/bin/env python$" . | while read -r f; do
		sed -i "$f" -e 's|^#!/usr/bin/env python$|&3|'
	done
	default_prepare
}

build() {
	mkdir -p "$builddir"/build
	cd "$builddir"/build

	python_version=$(python3 -V | sed 's/.*\([0-9]\{1,\}\.[0-9]\{1,\}\)\..*/\1/')

	# NOTE: DO NOT change CMAKE_BUILD_TYPE! Buildmodes like None will enable
	# debug assertions for LLVM!
	cmake .. -G Ninja -Wno-dev \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_C_FLAGS_RELEASE_INIT="$CFLAGS -O2" \
		-DCMAKE_CXX_FLAGS_RELEASE_INIT="$CXXFLAGS" \
		-DCMAKE_EXE_LINKER_FLAGS_RELEASE_INIT="$LDFLAGS -Wl,-z,stack-size=2097152" \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_VERBOSE_MAKEFILE=OFF \
		-DCLANG_VENDOR=Alpaquita \
		-DLLVM_EXTERNAL_LIT=/usr/bin/lit \
		-DCLANG_BUILD_EXAMPLES=OFF \
		-DCLANG_INCLUDE_DOCS=ON \
		-DCLANG_PYTHON_BINDINGS_VERSIONS="$python_version" \
		-DLLVM_BUILD_DOCS=ON \
		-DLLVM_ENABLE_SPHINX=ON \
		-DSPHINX_WARNINGS_AS_ERRORS=OFF \
		-DCLANG_INCLUDE_TESTS=ON \
		-DCLANG_PLUGIN_SUPPORT=ON \
		-DLIBCLANG_BUILD_STATIC=ON \
		-DLLVM_ENABLE_EH=ON \
		-DLLVM_ENABLE_RTTI=ON

	ninja clang-tblgen
	ninja
}

check() {
	ninja -C build check-all
}

package() {
	DESTDIR="$pkgdir" ninja -C build install
	install -m 644 build/lib/libclang.a "$pkgdir"/usr/lib
}

static() {
	pkgdesc="Static libraries for clang"

	mkdir -p "$subpkgdir"/usr/lib
	mv "$pkgdir"/usr/lib/*.a "$subpkgdir"/usr/lib/
}

dev() {
	default_dev

	# move back usr/lib/clang/x.y.z/include with files such as altivec.h, msa.h etc
	# these are needed to build programs *with* clang, not *against* it.
	mv "$subpkgdir"/usr/lib/clang "$pkgdir"/usr/lib/
}

analyzer() {
	pkgdesc="Clang source code analysis framework"
	depends="$pkgname=$pkgver-r$pkgrel perl python3"

	cd "$pkgdir"

	install -dm0755 \
		"$subpkgdir"/usr/bin \
		"$subpkgdir"/usr/lib \
		"$subpkgdir"/usr/libexec \
		"$subpkgdir"/usr/share

	mv usr/bin/scan-* "$subpkgdir"/usr/bin/
	mv usr/bin/analyze-build "$subpkgdir"/usr/bin/
	mv usr/bin/intercept-build "$subpkgdir"/usr/bin/
	mv usr/libexec/*-analyzer "$subpkgdir"/usr/libexec/
	mv usr/libexec/analyze-* "$subpkgdir"/usr/libexec/
	mv usr/libexec/intercept-* "$subpkgdir"/usr/libexec/
	mv usr/share/scan-* "$subpkgdir"/usr/share/
	mv usr/lib/libear "$subpkgdir"/usr/lib
}

extra() {
	pkgdesc="Extra tools built using Clangâ€™s tooling APIs"

	cd "$pkgdir"

	install -dm0755 \
		"$subpkgdir"/usr/bin \
		"$subpkgdir"/usr/share/clang \
		"$subpkgdir"/usr/share/emacs/site-lisp

	# FIXME: Make sure this is the right list of binaries for -extra-tools
	mv usr/bin/clang-apply-replacements \
		usr/bin/clang-change-namespace \
		usr/bin/clang-check \
		usr/bin/clang-doc \
		usr/bin/clang-extdef-mapping \
		usr/bin/clang-format \
		usr/bin/clang-include-fixer \
		usr/bin/clang-move \
		usr/bin/clang-offload-bundler \
		usr/bin/clang-offload-wrapper \
		usr/bin/clang-query \
		usr/bin/clang-refactor \
		usr/bin/clang-rename \
		usr/bin/clang-reorder-fields \
		usr/bin/clang-repl \
		usr/bin/clang-scan-deps \
		usr/bin/clang-tidy \
		usr/bin/clangd* \
		usr/bin/c-index-test \
		usr/bin/diagtool \
		usr/bin/find-all-symbols \
		usr/bin/git-clang-format \
		usr/bin/hmaptool \
		usr/bin/modularize \
		usr/bin/pp-trace \
		usr/bin/run-clang-tidy \
		"$subpkgdir"/usr/bin
	mv usr/share/clang/clang-include-fixer* \
		usr/share/clang/clang-format*.py \
		usr/share/clang/*clang-tidy* \
		usr/share/clang/run-find-all-symbols.py \
		"$subpkgdir"/usr/share/clang
	mv usr/share/clang/clang-*.el \
		"$subpkgdir"/usr/share/emacs/site-lisp
}

python() {
	pkgdesc="Clang Python Bindings"
	depends="$pkgname-libs=$pkgver-r$pkgrel python3"

	local sitedir=$(python3 -c "import site; print(site.getsitepackages()[0])")

	amove usr/lib/python*

	# actually a python module..
	mv "$pkgdir"/usr/lib/libscanbuild "$subpkgdir"/"$sitedir"
}

sha512sums="
10abb601ce33ec0ec1e966221d958dd6206cfd5b178f8af0850408ed6adf2a9e193afb87a6449d65bb636e70a4debc3818035ab7bfcddf35a54a603851779d57  clang-13.0.1.src.tar.xz
a7875a2556a0e51a2620b89d060087a6d2dc3c09c11aec18f6953abbce1ece4eafe1caeafa8f0dfe92f0b721d505abbbedb42236c2db9c5f17f0df078ed81d1d  clang-tools-extra-13.0.1.src.tar.xz
4d372fb7d88e584bb23aefd0cb2a72106c030b068654e57fb4f8d108e3a9af261c0c82a39ec308ab902820b00acdf6c2abc9f379344b2c4df1c29e34e140a0c7  10-add-musl-triples.patch
264dc8fd9f5d8675427ec984e1e381ff6a235f70006e8385430efc92d528914cb39a81eac79a75713ea8d7abfb83529e5935cb7fa275db469cc490c5fe5c7876  30-Enable-stack-protector-by-default-for-Alpine-Linux.patch
"
