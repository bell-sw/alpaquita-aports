Patch-Source: https://github.com/php/php-src/commit/334419e1575b96c1800c666679286576659bf1ac
From 334419e1575b96c1800c666679286576659bf1ac Mon Sep 17 00:00:00 2001
From: David Carlier <devnexen@gmail.com>
Date: Wed, 13 Mar 2024 18:50:17 +0000
Subject: [PATCH] zend test fix copy_file_range for musl.

normally should no longer need off64_t with glibc anyway.
---
 ext/zend_test/test.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/ext/zend_test/test.c b/ext/zend_test/test.c
index ed1f3ef547466..8c32238ce36f9 100644
--- a/ext/zend_test/test.c
+++ b/ext/zend_test/test.c
@@ -1128,9 +1128,9 @@ PHP_ZEND_TEST_API void bug_gh9090_void_int_char_var(int i, char *fmt, ...) {
 /**
  * This function allows us to simulate early return of copy_file_range by setting the limit_copy_file_range ini setting.
  */
-PHP_ZEND_TEST_API ssize_t copy_file_range(int fd_in, off64_t *off_in, int fd_out, off64_t *off_out, size_t len, unsigned int flags)
+PHP_ZEND_TEST_API ssize_t copy_file_range(int fd_in, off_t *off_in, int fd_out, off_t *off_out, size_t len, unsigned int flags)
 {
-	ssize_t (*original_copy_file_range)(int, off64_t *, int, off64_t *, size_t, unsigned int) = dlsym(RTLD_NEXT, "copy_file_range");
+	ssize_t (*original_copy_file_range)(int, off_t *, int, off_t *, size_t, unsigned int) = dlsym(RTLD_NEXT, "copy_file_range");
 	if (ZT_G(limit_copy_file_range) >= Z_L(0)) {
 		len = ZT_G(limit_copy_file_range);
 	}
