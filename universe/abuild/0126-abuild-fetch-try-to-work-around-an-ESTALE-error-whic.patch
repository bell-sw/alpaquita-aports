From c3ddb86f5cc0b1adf3960268378be138d29c1c81 Mon Sep 17 00:00:00 2001
From: Dmitry Klochkov <dmitry.klochkov@bell-sw.com>
Date: Tue, 21 May 2024 03:36:07 +0300
Subject: [PATCH] abuild-fetch: try to work around an ESTALE error which occurs
 on NFS

This is because of the following race condition:

  A                               B
                                |
  lockfd = open(lockfile, ...)  |
                                | unlink(lockfile)
  lockf(lockfd, F_LOCK, 0)      |

According to [1], to recover from an ESTALE error, an application must
close the file or directory where the error occurred, and reopen it so
the NFS client can resolve the pathname again and retrieve the new file
handle.

[1] https://nfs.sourceforge.net/#faq_a10
---
 abuild-fetch.c | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

diff --git a/abuild-fetch.c b/abuild-fetch.c
index 442f644..bdfb6db 100644
--- a/abuild-fetch.c
+++ b/abuild-fetch.c
@@ -81,11 +81,22 @@ int fork_exec(char *argv[], int showerr)
 
 static int acquire_lock(const char *lockfile)
 {
-	int lockfd = open(lockfile, O_WRONLY|O_CREAT, 0660);
-	if (lockfd < 0)
-		err(1, "%s", lockfile);
+	int lockfd, i, r;
 
-	if (lockf(lockfd, F_LOCK, 0) == -1)
+	/* try to work around an ESTALE error which occurs on NFS */
+	for (i = 0; i < 10; i++, sleep(1)) {
+		lockfd = open(lockfile, O_WRONLY|O_CREAT, 0660);
+		if (lockfd < 0)
+			err(1, "%s", lockfile);
+
+		r = lockf(lockfd, F_LOCK, 0);
+		if (r == 0 || errno != ESTALE)
+			break;
+
+		close(lockfd);
+	}
+
+	if (r != 0)
 		err(1, "failed to acquire lock: %s", lockfile);
 
 	return lockfd;
-- 
2.43.0

