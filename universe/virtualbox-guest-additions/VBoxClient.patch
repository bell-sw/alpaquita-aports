--- VirtualBox-7.0.0.orig/src/VBox/Additions/x11/VBoxClient/Makefile.kmk
+++ VirtualBox-7.0.0/src/VBox/Additions/x11/VBoxClient/Makefile.kmk
@@ -108,14 +108,6 @@
  endif
 endif
 
-# This forces the memcpy references in the static libraries to go to
-# __wrap_memcpy, which we can wrap around memcpy@GLIBC_2.2.5.  I do not know
-# how else to do that without recompiling or implementing our own memcpy.
-ifeq ($(KBUILD_TARGET),linux)
- VBoxClient_LDFLAGS.amd64 += \
-	-Wl,--wrap=memcpy
-endif
-
 ifdef VBOX_WITH_GUEST_PROPS
  VBoxClient_DEFS    += VBOX_WITH_GUEST_PROPS
  VBoxClient_SOURCES += \
--- VirtualBox-7.0.0.orig/src/VBox/Additions/x11/VBoxClient/chk_stubs.c
+++ VirtualBox-7.0.0/src/VBox/Additions/x11/VBoxClient/chk_stubs.c
@@ -53,17 +53,3 @@
     fprintf(stderr, "Stack check failed!\n");
     _exit(1);
 }
-
-#ifdef __x86_64
-/* Furthermore, wrap references to memcpy to force them to go to the right
- * version.  We are forced to do it this way because the shared libraries
- * supc++ and gcc_eh contain references which we cannot change. */
-
-extern void *__wrap_memcpy(void *dest, const void *src, size_t n);
-
-asm (".symver memcpy, memcpy@GLIBC_2.2.5");
-void *__wrap_memcpy(void *dest, const void *src, size_t n)
-{
-    return memcpy(dest, src, n);
-}
-#endif
