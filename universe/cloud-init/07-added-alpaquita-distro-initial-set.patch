From 76dce66934941e77876f129e09f91d73b78237cf Mon Sep 17 00:00:00 2001
From: Denis Kononenko <denis.kononenko@bell-sw.com>
Date: Wed, 13 Apr 2022 15:19:32 +0000
Subject: [PATCH] Added alpaquita distro (initial set).

---
 cloudinit/config/cc_ca_certs.py    |   4 +-
 cloudinit/config/cc_ntp.py         |  19 +++-
 cloudinit/config/cc_resolv_conf.py |   4 +-
 cloudinit/distros/__init__.py      |   2 +-
 cloudinit/distros/alpaquita.py     | 175 +++++++++++++++++++++++++++++
 cloudinit/util.py                  |   2 +-
 config/cloud.cfg.tmpl              |  14 +--
 tools/render-cloudcfg              |   2 +-
 8 files changed, 204 insertions(+), 18 deletions(-)
 create mode 100644 cloudinit/distros/alpaquita.py

diff --git a/cloudinit/config/cc_ca_certs.py b/cloudinit/config/cc_ca_certs.py
index bd7bead9..36bc4653 100644
--- a/cloudinit/config/cc_ca_certs.py
+++ b/cloudinit/config/cc_ca_certs.py
@@ -25,7 +25,7 @@ can be removed from the system with the configuration option
 
 **Module frequency:** per instance
 
-**Supported distros:** alpine, debian, ubuntu, rhel
+**Supported distros:** alpine, alpaquita, debian, ubuntu, rhel
 
 **Config keys**::
 
@@ -62,7 +62,7 @@ DISTRO_OVERRIDES = {
 }
 
 
-distros = ['alpine', 'debian', 'ubuntu', 'rhel']
+distros = ['alpine', 'alpaquita', 'debian', 'ubuntu', 'rhel']
 
 
 def _distro_ca_certs_configs(distro_name):
diff --git a/cloudinit/config/cc_ntp.py b/cloudinit/config/cc_ntp.py
index c3aee798..b4660f4a 100644
--- a/cloudinit/config/cc_ntp.py
+++ b/cloudinit/config/cc_ntp.py
@@ -24,7 +24,7 @@ LOG = logging.getLogger(__name__)
 frequency = PER_INSTANCE
 NTP_CONF = '/etc/ntp.conf'
 NR_POOL_SERVERS = 4
-distros = ['almalinux', 'alpine', 'centos', 'cloudlinux', 'debian',
+distros = ['almalinux', 'alpaquita', 'alpine', 'centos', 'cloudlinux', 'debian',
            'eurolinux', 'fedora', 'openEuler', 'opensuse', 'photon',
            'rhel', 'rocky', 'sles', 'ubuntu', 'virtuozzo']
 
@@ -76,6 +76,17 @@ DISTRO_CLIENT_CONFIG = {
             'service_name': 'ntpd',
         },
     },
+    'alpaquita': {
+        'chrony': {
+            'confpath': '/etc/chrony/chrony.conf',
+            'service_name': 'chronyd',
+        },
+        'ntp': {
+            'confpath': '/etc/ntp.conf',
+            'packages': [],
+            'service_name': 'ntpd',
+        }
+    },
     'debian': {
         'chrony': {
             'confpath': '/etc/chrony/chrony.conf',
@@ -406,7 +417,7 @@ def generate_server_names(distro):
         # For legal reasons x.pool.sles.ntp.org does not exist,
         # use the opensuse pool
         pool_distro = 'opensuse'
-    elif distro == 'alpine' or distro == 'eurolinux':
+    elif distro in ['alpaquita', 'alpine', 'eurolinux']:
         # Alpine-specific pool (i.e. x.alpine.pool.ntp.org) does not exist
         # so use general x.pool.ntp.org instead. The same applies to EuroLinux
         pool_distro = ''
@@ -443,8 +454,8 @@ def write_ntp_config_template(distro_name, service_name=None, servers=None,
     if not pools:
         pools = []
 
-    if (len(servers) == 0 and distro_name == 'alpine' and
-            service_name == 'ntpd'):
+    if (len(servers) == 0 and distro_name in ['alpaquita', 'alpine']
+            and service_name == 'ntpd'):
         # Alpine's Busybox ntpd only understands "servers" configuration
         # and not "pool" configuration.
         servers = generate_server_names(distro_name)
diff --git a/cloudinit/config/cc_resolv_conf.py b/cloudinit/config/cc_resolv_conf.py
index 648935e4..bf00e5e9 100644
--- a/cloudinit/config/cc_resolv_conf.py
+++ b/cloudinit/config/cc_resolv_conf.py
@@ -30,7 +30,7 @@ are configured correctly.
 
 **Module frequency:** per instance
 
-**Supported distros:** alpine, fedora, photon, rhel, sles
+**Supported distros:** alpine, alpaquita, fedora, photon, rhel, sles
 
 **Config keys**::
 
@@ -55,7 +55,7 @@ LOG = logging.getLogger(__name__)
 
 frequency = PER_INSTANCE
 
-distros = ['alpine', 'fedora', 'opensuse', 'photon', 'rhel', 'sles']
+distros = ['alpine', 'alpaquita', 'fedora', 'opensuse', 'photon', 'rhel', 'sles']
 
 RESOLVE_CONFIG_TEMPLATE_MAP = {
     '/etc/resolv.conf': 'resolv.conf',
diff --git a/cloudinit/distros/__init__.py b/cloudinit/distros/__init__.py
index d29b581b..16e498f6 100755
--- a/cloudinit/distros/__init__.py
+++ b/cloudinit/distros/__init__.py
@@ -44,7 +44,7 @@ from .networking import LinuxNetworking
 ALL_DISTROS = 'all'
 
 OSFAMILIES = {
-    'alpine': ['alpine'],
+    'alpine': ['alpine', 'alpaquita'],
     'arch': ['arch'],
     'debian': ['debian', 'ubuntu'],
     'freebsd': ['freebsd'],
diff --git a/cloudinit/distros/alpaquita.py b/cloudinit/distros/alpaquita.py
new file mode 100644
index 00000000..34669994
--- /dev/null
+++ b/cloudinit/distros/alpaquita.py
@@ -0,0 +1,179 @@
+# Copyright (C) 2016 Matt Dainty
+# Copyright (C) 2020 Dermot Bradley
+#
+# Author: Matt Dainty <matt@bodgit-n-scarper.com>
+# Author: Dermot Bradley <dermot_bradley@yahoo.com>
+#
+# This file is part of cloud-init. See LICENSE file for license information.
+
+from cloudinit import distros
+from cloudinit import helpers
+from cloudinit import subp
+from cloudinit import util
+
+from cloudinit.distros.parsers.hostname import HostnameConf
+
+from cloudinit.settings import PER_INSTANCE
+
+NETWORK_FILE_HEADER = """\
+# This file is generated from information provided by the datasource. Changes
+# to it will not persist across an instance reboot. To disable cloud-init's
+# network configuration capabilities, write a file
+# /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:
+# network: {config: disabled}
+
+"""
+
+
+class Distro(distros.Distro):
+    init_cmd = ['rc-service']  # init scripts
+    locale_conf_fn = "/etc/profile.d/locale.sh"
+    network_conf_fn = "/etc/network/interfaces"
+    renderer_configs = {
+        "eni": {"eni_path": network_conf_fn,
+                "eni_header": NETWORK_FILE_HEADER}
+    }
+
+    def __init__(self, name, cfg, paths):
+        distros.Distro.__init__(self, name, cfg, paths)
+        # This will be used to restrict certain
+        # calls from repeatly happening (when they
+        # should only happen say once per instance...)
+        self._runner = helpers.Runners(paths)
+        self.default_locale = 'C.UTF-8'
+        self.osfamily = 'alpine'
+        cfg['ssh_svcname'] = 'sshd'
+
+    def get_locale(self):
+        """The default locale for Alpaquita Linux is different than
+           cloud-init's DataSource default.
+        """
+        return self.default_locale
+
+    def apply_locale(self, locale, out_fn=None):
+        # Alpaquita musl has limited locale support
+        # TODO: think of Alpaquita glibc
+
+        if not locale:
+            locale = self.default_locale
+        if not out_fn:
+            out_fn = self.locale_conf_fn
+
+        lines = [
+            "#",
+            "# This file is created by cloud-init once per new instance boot",
+            "#",
+            "export CHARSET=UTF-8",
+            "export LANG=%s" % locale,
+            "export LC_COLLATE=C",
+            "",
+        ]
+        util.write_file(out_fn, "\n".join(lines), 0o644)
+
+    def install_packages(self, pkglist):
+        self.update_package_sources()
+        self.package_command('add', pkgs=pkglist)
+
+    def _write_hostname(self, hostname, filename):
+        conf = None
+        try:
+            # Try to update the previous one
+            # so lets see if we can read it first.
+            conf = self._read_hostname_conf(filename)
+        except IOError:
+            pass
+        if not conf:
+            conf = HostnameConf('')
+        conf.set_hostname(hostname)
+        util.write_file(filename, str(conf), 0o644)
+
+    def _read_system_hostname(self):
+        sys_hostname = self._read_hostname(self.hostname_conf_fn)
+        return (self.hostname_conf_fn, sys_hostname)
+
+    def _read_hostname_conf(self, filename):
+        conf = HostnameConf(util.load_file(filename))
+        conf.parse()
+        return conf
+
+    def _read_hostname(self, filename, default=None):
+        hostname = None
+        try:
+            conf = self._read_hostname_conf(filename)
+            hostname = conf.hostname
+        except IOError:
+            pass
+        if not hostname:
+            return default
+        return hostname
+
+    def _get_localhost_ip(self):
+        return "127.0.1.1"
+
+    def set_timezone(self, tz):
+        distros.set_etc_timezone(tz=tz, tz_file=self._find_tz_file(tz))
+
+    def package_command(self, command, args=None, pkgs=None):
+        if pkgs is None:
+            pkgs = []
+
+        cmd = ['apk']
+        # Redirect output
+        cmd.append("--quiet")
+
+        if args and isinstance(args, str):
+            cmd.append(args)
+        elif args and isinstance(args, list):
+            cmd.extend(args)
+
+        if command:
+            cmd.append(command)
+
+        if command == 'upgrade':
+            cmd.extend(["--update-cache", "--available"])
+
+        pkglist = util.expand_package_list('%s-%s', pkgs)
+        cmd.extend(pkglist)
+
+        # Allow the output of this to flow outwards (ie not be captured)
+        subp.subp(cmd, capture=False)
+
+    def update_package_sources(self):
+        self._runner.run("update-sources", self.package_command,
+                         ["update"], freq=PER_INSTANCE)
+
+    @property
+    def preferred_ntp_clients(self):
+        """Allow distro to determine the preferred ntp client list"""
+        if not self._preferred_ntp_clients:
+            self._preferred_ntp_clients = ['chrony', 'ntp']
+
+        return self._preferred_ntp_clients
+
+    def shutdown_command(self, mode='poweroff', delay='now', message=None):
+        # called from cc_power_state_change.load_power_state
+        # Alpaquita has halt/poweroff/reboot, with the following specifics:
+        # - we use them rather than the generic "shutdown"
+        # - delay is given with "-d [integer]"
+        # - the integer is in seconds, cannot be "now", and takes no "+"
+        # - no message is supported (argument ignored, here)
+
+        command = [mode, "-d"]
+
+        # Convert delay from minutes to seconds, as Alpaquita's
+        # halt/poweroff/reboot commands take seconds rather than minutes.
+        if delay == "now":
+            # Alpaquita's commands do not understand "now".
+            command += ['0']
+        else:
+            try:
+                command.append(str(int(delay) * 60))
+            except ValueError as e:
+                raise TypeError(
+                    "power_state[delay] must be 'now' or '+m' (minutes)."
+                    " found '%s'." % (delay,)
+                ) from e
+
+        return command
+
+# vi: ts=4 expandtab
diff --git a/cloudinit/util.py b/cloudinit/util.py
index 575a1fef..700bd4e5 100644
--- a/cloudinit/util.py
+++ b/cloudinit/util.py
@@ -548,7 +548,7 @@ def system_info():
     if system == "linux":
         linux_dist = info['dist'][0].lower()
         if linux_dist in (
-                'almalinux', 'alpine', 'arch', 'centos', 'cloudlinux',
+                'almalinux', 'alpaquita', 'alpine', 'arch', 'centos', 'cloudlinux',
                 'debian', 'eurolinux', 'fedora', 'openEuler', 'photon',
                 'rhel', 'rocky', 'suse', 'virtuozzo'):
             var = linux_dist
diff --git a/config/cloud.cfg.tmpl b/config/cloud.cfg.tmpl
index 538346ae..b198f886 100644
--- a/config/cloud.cfg.tmpl
+++ b/config/cloud.cfg.tmpl
@@ -32,7 +32,7 @@ disable_root: false
 disable_root: true
 {% endif %}
 
-{% if variant in ["almalinux", "alpine", "amazon", "centos", "cloudlinux", "eurolinux",
+{% if variant in ["almalinux", "alpaquita", "alpine", "amazon", "centos", "cloudlinux", "eurolinux",
                   "fedora", "openEuler", "rhel", "rocky", "virtuozzo"] %}
 mount_default_fields: [~, ~, 'auto', 'defaults,nofail', '0', '2']
 {% if variant == "amazon" %}
@@ -85,7 +85,7 @@ cloud_init_modules:
  - set_hostname
  - update_hostname
  - update_etc_hosts
-{% if variant in ["alpine", "photon"] %}
+{% if variant in ["alpine", "alpaquita", "photon"] %}
  - resolv_conf
 {% endif %}
 {% if not variant.endswith("bsd") %}
@@ -129,7 +129,7 @@ cloud_config_modules:
 {% if variant in ["suse"] %}
  - zypper-add-repo
 {% endif %}
-{% if variant in ["alpine"] %}
+{% if variant in ["alpine", "alpaquita"] %}
  - apk-configure
 {% endif %}
 {% if variant not in ["freebsd", "netbsd"] %}
@@ -179,7 +179,7 @@ cloud_final_modules:
 # (not accessible to handlers/transforms)
 system_info:
    # This will affect which distro class gets used
-{% if variant in ["almalinux", "alpine", "amazon", "arch", "centos", "cloudlinux", "debian",
+{% if variant in ["almalinux", "alpaquita", "alpine", "amazon", "arch", "centos", "cloudlinux", "debian",
                   "eurolinux", "fedora", "freebsd", "netbsd", "openbsd", "openEuler",
                   "photon", "rhel", "rocky", "suse", "ubuntu", "virtuozzo"] %}
    distro: {{ variant }}
@@ -234,7 +234,7 @@ system_info:
          primary: http://ports.ubuntu.com/ubuntu-ports
          security: http://ports.ubuntu.com/ubuntu-ports
    ssh_svcname: ssh
-{% elif variant in ["almalinux", "alpine", "amazon", "arch", "centos", "cloudlinux", "eurolinux",
+{% elif variant in ["almalinux", "alpaquita", "alpine", "amazon", "arch", "centos", "cloudlinux", "eurolinux",
                     "fedora", "openEuler", "rhel", "rocky", "suse", "virtuozzo"] %}
    # Default user name + that default users groups (if added/used)
    default_user:
@@ -252,7 +252,7 @@ system_info:
 {% endif %}
 {% if variant == "suse" %}
      groups: [cdrom, users]
-{% elif variant == "alpine" %}
+{% elif variant in ["alpine", "alpaquita"] %}
      groups: [adm, sudo, wheel]
 {% elif variant == "arch" %}
      groups: [wheel, users]
@@ -260,7 +260,7 @@ system_info:
      groups: [wheel, adm, systemd-journal]
 {% endif %}
      sudo: ["ALL=(ALL) NOPASSWD:ALL"]
-{% if variant == "alpine" %}
+{% if variant in ["alpine", "alpaquita"] %}
      shell: /bin/ash
 {% else %}
      shell: /bin/bash
diff --git a/tools/render-cloudcfg b/tools/render-cloudcfg
index 186d61b7..d5fd0bb7 100755
--- a/tools/render-cloudcfg
+++ b/tools/render-cloudcfg
@@ -4,7 +4,7 @@ import argparse
 import os
 import sys
 
-VARIANTS = ["almalinux", "alpine", "amazon", "arch", "centos", "cloudlinux", "debian",
+VARIANTS = ["almalinux", "alpaquita", "alpine", "amazon", "arch", "centos", "cloudlinux", "debian",
             "eurolinux", "fedora", "freebsd", "netbsd", "openbsd", "openEuler", "photon",
             "rhel", "suse","rocky", "ubuntu", "unknown", "virtuozzo"]
 
-- 
2.34.1

