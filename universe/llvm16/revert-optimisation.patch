this is part of https://github.com/llvm/llvm-project/commit/01859da84bad95fd51d6a03b08b60c660e642a4f
and seems to break firefox https://github.com/llvm/llvm-project/issues/58776
--
diff --git a/llvm/lib/Analysis/BasicAliasAnalysis.cpp b/llvm/lib/Analysis/BasicAliasAnalysis.cpp
index dc728c1cb..d476965b7 100644
--- a/llvm/lib/Analysis/BasicAliasAnalysis.cpp
+++ b/llvm/lib/Analysis/BasicAliasAnalysis.cpp
@@ -704,12 +704,12 @@ ModRefInfo BasicAAResult::getModRefInfoMask(const MemoryLocation &Loc,
     //
     // An argument that is marked readonly and noalias is known to be
     // invariant while that function is executing.
-    if (const Argument *Arg = dyn_cast<Argument>(V)) {
-      if (Arg->hasNoAliasAttr() && Arg->onlyReadsMemory()) {
-        Result |= ModRefInfo::Ref;
-        continue;
-      }
-    }
+    // if (const Argument *Arg = dyn_cast<Argument>(V)) {
+    //   if (Arg->hasNoAliasAttr() && Arg->onlyReadsMemory()) {
+    //     Result |= ModRefInfo::Ref;
+    //     continue;
+    //   }
+    // }
 
     // A global constant can't be mutated.
     if (const GlobalVariable *GV = dyn_cast<GlobalVariable>(V)) {
