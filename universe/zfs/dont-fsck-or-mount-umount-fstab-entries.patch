--- a/etc/init.d/zfs-mount.in
+++ b/etc/init.d/zfs-mount.in
@@ -70,50 +70,6 @@ do_mount()
 	zfs_action "Mounting ZFS filesystem(s)" \
 	    "$ZFS" mount -a$verbose$overlay "$MOUNT_EXTRA_OPTIONS"
 
-	# Require each volume/filesystem to have 'noauto' and no fsck
-	# option. This shouldn't really be necessary, as long as one
-	# can get zfs-import to run sufficiently early on in the boot
-	# process - before local mounts. This is just here in case/if
-	# this isn't possible.
-	check_boolean "$VERBOSE_MOUNT" && \
-	    zfs_log_begin_msg "Mounting volumes and filesystems registered in fstab"
-
-	read_mtab  "^/dev/(zd|zvol)"
-	read_fstab "^/dev/(zd|zvol)"
-	i=0; var="FSTAB_0"
-	while [ -n "$(eval echo "\$$var")" ]
-	do
-		mntpt=$(eval echo "\$$var")
-		dev=$(eval echo "\$FSTAB_dev_$i")
-		if ! in_mtab "$mntpt" && ! is_mounted "$mntpt" && [ -e "$dev" ]
-		then
-			check_boolean "$VERBOSE_MOUNT" && \
-				zfs_log_progress_msg "$mntpt "
-			fsck "$dev" && mount "$mntpt"
-		fi
-
-		i=$((i + 1))
-		var=$(eval echo "FSTAB_$i")
-	done
-
-	read_mtab  "[[:space:]]zfs[[:space:]]"
-	read_fstab "[[:space:]]zfs[[:space:]]"
-	i=0; var=$(eval echo "FSTAB_$i")
-	while [ -n "$(eval echo "\$$var")" ]
-	do
-		mntpt=$(eval echo "\$$var")
-		if ! in_mtab "$mntpt" && ! is_mounted "$mntpt"
-		then
-			check_boolean "$VERBOSE_MOUNT" && \
-				zfs_log_progress_msg "$mntpt "
-			mount "$mntpt"
-		fi
-
-		i=$((i + 1))
-		var=$(eval echo "FSTAB_$i")
-	done
-	check_boolean "$VERBOSE_MOUNT" && zfs_log_end_msg 0
-
 	return 0
 }
 
@@ -128,44 +84,6 @@ do_unmount()
 	# this isn't possible.
 	zfs_action "Unmounting ZFS filesystems" "$ZFS" unmount -a
 
-	check_boolean "$VERBOSE_MOUNT" && \
-	    zfs_log_begin_msg "Unmounting volumes and filesystems registered in fstab"
-
-	read_mtab  "^/dev/(zd|zvol)"
-	read_fstab "^/dev/(zd|zvol)"
-	i=0; var="FSTAB_0"
-	while [ -n "$(eval echo "\$$var")" ]
-	do
-		mntpt=$(eval echo "\$$var")
-		dev=$(eval echo "\$FSTAB_dev_$i")
-		if in_mtab "$mntpt"
-		then
-			check_boolean "$VERBOSE_MOUNT" && \
-				zfs_log_progress_msg "$mntpt "
-			umount "$mntpt"
-		fi
-
-		i=$((i + 1))
-		var=$(eval echo "FSTAB_$i")
-	done
-
-	read_mtab  "[[:space:]]zfs[[:space:]]"
-	read_fstab "[[:space:]]zfs[[:space:]]"
-	i=0; var="FSTAB_0"
-	while [ -n "$(eval echo "\$$var")" ]
-	do
-		mntpt=$(eval echo "\$$var")
-		if in_mtab "$mntpt"; then
-			check_boolean "$VERBOSE_MOUNT" && \
-			    zfs_log_progress_msg "$mntpt "
-			umount "$mntpt"
-		fi
-
-		i=$((i + 1))
-		var=$(eval echo "FSTAB_$i")
-	done
-	check_boolean "$VERBOSE_MOUNT" && zfs_log_end_msg 0
-
 	return 0
 }
 
