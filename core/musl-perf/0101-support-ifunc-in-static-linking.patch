From 3644e99c28bdf8d8c91123b9943807cf77e94d35 Mon Sep 17 00:00:00 2001
From: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
Date: Fri, 17 Sep 2021 18:13:40 +0300
Subject: [PATCH] support ifunc in static linking

---
 src/env/__libc_start_main.c | 38 +++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

diff --git a/src/env/__libc_start_main.c b/src/env/__libc_start_main.c
index c5b277bd..fdcb1ed5 100644
--- a/src/env/__libc_start_main.c
+++ b/src/env/__libc_start_main.c
@@ -6,6 +6,9 @@
 #include "syscall.h"
 #include "atomic.h"
 #include "libc.h"
+#include "elf.h"
+#include "link.h"
+#include "reloc.h"
 
 static void dummy(void) {}
 weak_alias(dummy, _init);
@@ -17,6 +20,39 @@ weak_alias(dummy1, __init_ssp);
 
 #define AUX_CNT 38
 
+#if UINTPTR_MAX == 0xffffffff
+#define R_TYPE(x) ((x)&255)
+#else
+#define R_TYPE(x) ((x)&0x7fffffff)
+#endif
+
+static ElfW(Addr) resolve_ifunc_addr(const ElfW(Addr) addr)
+{
+	void *new_addr = ((void *(*)(void))addr)();
+
+	return (ElfW(Addr))new_addr;
+}
+
+static void process_iplt(const ElfW(Rela) *reloc)
+{
+	if (R_TYPE(reloc->r_info) != REL_IRELATIVE)
+		a_crash();
+
+	ElfW(Addr) * const reloc_addr = (void *)reloc->r_offset;
+
+	*reloc_addr = resolve_ifunc_addr(reloc->r_addend);
+}
+
+static void init_ifunc(void)
+{
+	extern weak hidden const ElfW(Rela) __rela_iplt_start[];
+	extern weak hidden const ElfW(Rela) __rela_iplt_end[];
+	const ElfW(Rela) *i = __rela_iplt_start;
+
+	for (; i < __rela_iplt_end; ++i)
+		process_iplt(i);
+}
+
 #ifdef __GNUC__
 __attribute__((__noinline__))
 #endif
@@ -89,6 +125,8 @@ int __libc_start_main(int (*main)(int,char **,char **), int argc, char **argv,
 static int libc_start_main_stage2(int (*main)(int,char **,char **), int argc, char **argv)
 {
 	char **envp = argv+argc+1;
+
+	init_ifunc();
 	__libc_start_init();
 
 	/* Pass control to the application */
-- 
2.25.1

