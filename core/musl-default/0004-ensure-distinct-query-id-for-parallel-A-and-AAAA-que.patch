From 6c858d6fd4df8b5498ef2cae66c8f3c3eff1587b Mon Sep 17 00:00:00 2001
From: Rich Felker <dalias@aerifal.cx>
Date: Fri, 3 Jun 2022 11:03:00 -0400
Subject: [PATCH] ensure distinct query id for parallel A and AAAA queries in resolver

assuming a reasonable realtime clock, res_mkquery is highly unlikely
to generate the same query id twice in a row, but it's possible with a
very low-resolution system clock or under extreme delay of forward
progress. when it happens, res_msend fails to wait for both answers,
and instead stops listening after getting two answers to the same
query (A or AAAA).

to avoid this, increment one byte of the second query's id if it
matches the first query's. don't bother checking if the second byte is
also equal, since it doesn't matter; we just need to ensure that at
least one byte is distinct.
---
 src/network/lookup_name.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/network/lookup_name.c b/src/network/lookup_name.c
index aa558c19..b5232ce8 100644
--- a/src/network/lookup_name.c
+++ b/src/network/lookup_name.c
@@ -155,6 +155,9 @@ static int name_from_dns(struct address buf[static MAXADDRS], char canon[static
 			if (qlens[nq] == -1)
 				return EAI_NONAME;
 			qbuf[nq][3] = 0; /* don't need AD flag */
+			/* Ensure query IDs are distinct. */
+			if (nq && qbuf[nq][0] == qbuf[0][0])
+				qbuf[nq][0]++;
 			nq++;
 		}
 	}
-- 
2.25.1

