From 424605f90a88bf582a916a2e876c44ba5011477b Mon Sep 17 00:00:00 2001
From: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
Date: Mon, 31 May 2021 18:28:31 +0300
Subject: [PATCH] modutils: detect compressed modules earlier

This avoids two functions failures and kernel errors in logs for
compressed modules (xz or gz):

dmesg:
[    0.255371] Module has invalid ELF structures

With lockdown enabled:
[    0.264921] Lockdown: modprobe: unsigned module loading is restricted; see man kernel_lockdown.7
---
 modutils/modutils.c | 20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

diff --git a/modutils/modutils.c b/modutils/modutils.c
index f7ad5e805..c8d427374 100644
--- a/modutils/modutils.c
+++ b/modutils/modutils.c
@@ -186,6 +186,11 @@ void* FAST_FUNC try_to_mmap_module(const char *filename, size_t *image_size_p)
 }
 #endif
 
+static bool is_compressed_module(const char *filename)
+{
+	return !is_suffixed_with(filename, ".ko");
+}
+
 /* Return:
  * 0 on success,
  * -errno on open/read error,
@@ -193,6 +198,7 @@ void* FAST_FUNC try_to_mmap_module(const char *filename, size_t *image_size_p)
  */
 int FAST_FUNC bb_init_module(const char *filename, const char *options)
 {
+	bool compressed = is_compressed_module(filename);
 	size_t image_size;
 	char *image;
 	int rc;
@@ -214,7 +220,7 @@ int FAST_FUNC bb_init_module(const char *filename, const char *options)
 	 * back to normal module loading to support compressed modules.
 	 */
 # ifdef __NR_finit_module
-	{
+	if (!compressed) {
 		int fd = open(filename, O_RDONLY | O_CLOEXEC);
 		if (fd >= 0) {
 			rc = finit_module(fd, options, 0) != 0;
@@ -227,10 +233,14 @@ int FAST_FUNC bb_init_module(const char *filename, const char *options)
 
 	image_size = INT_MAX - 4095;
 	mmaped = 0;
-	image = try_to_mmap_module(filename, &image_size);
-	if (image) {
-		mmaped = 1;
-	} else {
+
+	if (!compressed) {
+		image = try_to_mmap_module(filename, &image_size);
+		if (image)
+			mmaped = 1;
+	}
+
+	if (!mmaped) {
 		errno = ENOMEM; /* may be changed by e.g. open errors below */
 		image = xmalloc_open_zipped_read_close(filename, &image_size);
 		if (!image)
-- 
2.25.1

