
# Description: busybox unifies numerous UNIX utilities into one executable.
# These utilities are similar to GNU ones, but optimized for size.

pkgname=busybox
pkgver=1.36.0
pkgrel=5
pkgdesc="Modular toolbox of common UNIX utilities"
url="https://busybox.net/"
arch="all"
license="GPL-2.0-only"
depends="glibc:glibc-utils"
makedepends_build="perl"
makedepends_host="linux-headers openssl-dev>3"
# Only build with utmps support if we are not bootstraping.
# skalibs-static is needed for utmps-static
[ -z "$BOOTSTRAP" ] && makedepends_host="$makedepends_host utmps-dev utmps-static skalibs-static"
makedepends="$makedepends_build $makedepends_host"
checkdepends="zip"
install="$pkgname.post-install $pkgname.post-upgrade
	$pkgname-extras.post-install $pkgname-extras.pre-deinstall"
subpackages="
	$pkgname-static
	$pkgname-doc
	$pkgname-suid
	ssl_client
	$pkgname-ifupdown
	$pkgname-binsh
	$pkgname-openrc
	$pkgname-extras
	$pkgname-extras-openrc:extras_openrc
	"
options="suid net"
replaces="busybox-initscripts" # move of default.script
triggers="busybox.trigger=/usr/bin:/usr/sbin:/lib/modules/*"

_openrc_files="acpid.initd
	crond.confd crond.initd
	klogd.confd klogd.initd
	ntpd.confd ntpd.initd
	rdate.confd rdate.initd
	syslog.confd syslog.initd
	loadkmap.confd loadkmap.initd
	watchdog.confd watchdog.initd"
_extras_openrc_files="dnsd.initd httpd.initd inetd.initd udhcpd.initd"

source="https://busybox.net/downloads/busybox-$pkgver.tar.bz2
	0001-modutils-check-ELF-header-before-calling-finit_modul.patch
	0002-adduser-default-to-sbin-nologin-as-shell-for-system-.patch
	0003-ash-add-built-in-BB_ASH_VERSION-variable.patch
	0004-Avoid-redefined-warnings-when-buiding-with-utmps.patch
	0005-libbb-sockaddr2str-ensure-only-printable-characters-.patch
	0006-modinfo-add-k-option-for-kernel-version.patch
	0008-pgrep-add-support-for-matching-against-UID-and-RUID.patch
	0009-properly-fix-wget-https-support.patch
	0011-fsck-resolve-LABEL-.-UUID-.-spec-to-device.patch
	0012-nslookup-sanitize-all-printed-strings-with-printable.patch
	0013-ash-exec-busybox.static.patch
	0015-udhcpc-set-default-discover-retries-to-5.patch
	0016-ping-make-ping-work-without-root-privileges.patch
	0017-fbsplash-support-console-switching.patch
	0018-fbsplash-support-image-and-bar-alignment-and-positio.patch
	0019-depmod-support-generating-kmod-binary-index-files.patch
	0020-Add-flag-for-not-following-symlinks-when-recursing.patch
	0021-udhcpc-Don-t-background-if-n-is-given.patch
	0022-ed-don-t-use-memcpy-with-overlapping-memory-regions.patch
	0023-tests-fix-tarball-creation.patch
	0024-tests-musl-doesn-t-seem-to-recognize-UTC0-as-a-timez.patch
	0025-Hackfix-to-disable-HW-acceleration-for-MD5-SHA1-on-x.patch
	0026-lineedit-Handle-SIGWINCH-gracefully.patch
	0027-umount-Implement-O-option-to-unmount-by-mount-option.patch

	acpid.logrotate
	busyboxconfig
	busyboxconfig-extras
	bbsuid.c
	dad.if-up
	ssl_client.c
	default.script
	$_openrc_files
	$_extras_openrc_files

	0101-init-don-t-reset-init-s-tty-settings-for-every-runac.patch
	0102-busybox-libbb-install-to-usr-s-bin.patch
"

# secfixes:
#   1.35.0-r15:
#     - CVE-2022-30065
#   1.35.0-r7:
#     - ALPINE-13661
#     - CVE-2022-28391
#   1.34.0-r0:
#     - CVE-2021-42374
#     - CVE-2021-42375
#     - CVE-2021-42378
#     - CVE-2021-42379
#     - CVE-2021-42380
#     - CVE-2021-42381
#     - CVE-2021-42382
#     - CVE-2021-42383
#     - CVE-2021-42384
#     - CVE-2021-42385
#     - CVE-2021-42386
#   1.33.0-r5:
#     - CVE-2021-28831
#   1.30.1-r2:
#     - CVE-2019-5747
#   1.29.3-r10:
#     - CVE-2018-20679
#   1.28.3-r2:
#     - CVE-2018-1000500
#   1.27.2-r4:
#     - CVE-2017-16544
#     - CVE-2017-15873
#     - CVE-2017-15874
#   0:
#     - CVE-2021-42373
#     - CVE-2021-42376
#     - CVE-2021-42377

_staticdir="$srcdir"/build-static
_dyndir="$srcdir"/build-dynamic
_dyndir_extras="$srcdir"/build-dynamic-extras
_config="$srcdir"/busyboxconfig
_config_extras="$srcdir"/busyboxconfig-extras

prepare() {
	# remove SGID if set as it confuses the busybox testsuite
	chmod -R g-s "$builddir"
	default_prepare

	mkdir -p "$_staticdir" "$_dyndir" "$_dyndir_extras"
}

build() {
	local _extra_cflags= _extra_libs= _extra_libs_static=
	if [ -z "$BOOTSTRAP" ] ; then
		_extra_cflags="$(pkg-config --cflags --static utmps)"
		_extra_libs_static="$(pkg-config --libs --static utmps)"

		# In Alpine, utmps and skalibs static libraries are installed
		# to /usr/lib whereas their shared libraries are installed to
		# /lib.  Although, shared libraries have a higher priority when
		# linking, the linker searches the path /usr/lib first.  It
		# lets a dynamic busybox be linked with libutmps and libskarnet
		# statically.
		#
		# In Alpaquita, /lib is a symbolic link to /usr/lib.  That
		# means static and shared libraries are in the same directory.
		# So if we want to link a dynamic busybox statically with those
		# libraries, we have to clearly specify that.
		_extra_libs="-Wl,-Bstatic $_extra_libs_static -Wl,-Bdynamic"
	fi

	# build bbsuid
	msg "Building bbsuid"
	${CC:-${CROSS_COMPILE}gcc} $CPPFLAGS $CFLAGS \
		$LDFLAGS "$srcdir"/bbsuid.c -o "$_dyndir"/bbsuid

	msg "Building ssl_client"
	# shellcheck disable=SC2046  # Allow wordsplitting for pkg-config
	${CC:-${CROSS_COMPILE}gcc} $CPPFLAGS $CFLAGS $(pkg-config --cflags libcrypto libssl) \
		"$srcdir"/ssl_client.c -o "$_dyndir"/ssl_client $LDFLAGS $(pkg-config --libs libcrypto libssl)

	# build dynamic
	cd "$_dyndir"
	msg "Building dynamic busybox"
	echo "COPIED CONFIG to $(pwd)/.config"
	cp "$_config" .config
	[ "$CLIBC" = musl ] && sed -i \
		-e "s/CONFIG_EXTRA_COMPAT=y/CONFIG_EXTRA_COMPAT=n/" \
		.config
	make -C "$builddir" O="$PWD" silentoldconfig
	make CONFIG_EXTRA_CFLAGS="$_extra_cflags" CONFIG_EXTRA_LDLIBS="$_extra_libs"

	# build dynamic (extras)
	cd "$_dyndir_extras"
	msg "Building dynamic busybox-extras"
	cp "$_config_extras" .config
	[ "$CLIBC" = musl ] && sed -i \
		-e "s/CONFIG_EXTRA_COMPAT=y/CONFIG_EXTRA_COMPAT=n/" \
		.config
	make -C "$builddir" O="$PWD" silentoldconfig
	make CONFIG_EXTRA_CFLAGS="$_extra_cflags" CONFIG_EXTRA_LDLIBS="$_extra_libs"

	# build static
	cd "$_staticdir"
	msg "Building static busybox"
	# enable internal ssl_client for static build
	sed -e "s/.*CONFIG_PIE.*/\# CONFIG_PIE is not set/" \
		-e "s/.*CONFIG_STATIC\([A-Z_]*\).*/CONFIG_STATIC\1=y/" \
		-e "s/.*CONFIG_SSL_CLIENT.*/CONFIG_SSL_CLIENT=y/" \
		"$_config" > .config
	# musl does not support GNU regex
	[ "$CLIBC" = musl ] && sed -i \
		-e "s/CONFIG_EXTRA_COMPAT=y/CONFIG_EXTRA_COMPAT=n/" \
		.config
	make -C "$builddir" O="$PWD" silentoldconfig
	make CONFIG_EXTRA_CFLAGS="$_extra_cflags" CONFIG_EXTRA_LDLIBS="$_extra_libs_static"
	mv busybox busybox.static
}

check() {
	local _extra_cflags= _extra_libs= _extra_libs_static=
	if [ -z "$BOOTSTRAP" ] ; then
		_extra_cflags="$(pkg-config --cflags --static utmps)"
		_extra_libs_static="$(pkg-config --libs --static utmps)"
		_extra_libs="-Wl,-Bstatic $_extra_libs_static -Wl,-Bdynamic"
	fi

	# Set VERBOSE to see expected outcome of each test (runtest -v flag).
	# Set DEBUG to enable command trace (see testsuite/testing.sh).

	cd "$_dyndir"
	SKIP_KNOWN_BUGS=1 make -C "$builddir" O="$PWD" V=1 check CONFIG_EXTRA_CFLAGS="$_extra_cflags" CONFIG_EXTRA_LDLIBS="$_extra_libs"

	cd "$_dyndir_extras"
	SKIP_KNOWN_BUGS=1 make -C "$builddir" O="$PWD" V=1 check CONFIG_EXTRA_CFLAGS="$_extra_cflags" CONFIG_EXTRA_LDLIBS="$_extra_libs"
}

package() {
	local file
	mkdir -p "$pkgdir"/usr/sbin "$pkgdir"/usr/bin "$pkgdir"/tmp \
		"$pkgdir"/var/cache/misc \
		"$pkgdir"/usr/share/man/man1 \
		"$pkgdir"/etc/conf.d "$pkgdir"/etc/init.d
	chmod 1777 "$pkgdir"/tmp
	cd "$srcdir"
	for file in *.confd ; do
		install -D -m 0644 $file "$pkgdir"/etc/conf.d/${file%%\.confd}
	done
	for file in *.initd ; do
		install -D -m 0755 $file "$pkgdir"/etc/init.d/${file%%\.initd}
	done

	cd "$_dyndir"
	install -m755 busybox "$pkgdir"/usr/bin/busybox
	install -m 644 docs/busybox.1 "$pkgdir"/usr/share/man/man1/busybox.1

	#ifupdown needs those dirs to be present
	mkdir -p \
		"$pkgdir"/etc/network/if-down.d \
		"$pkgdir"/etc/network/if-post-down.d \
		"$pkgdir"/etc/network/if-post-up.d \
		"$pkgdir"/etc/network/if-pre-down.d \
		"$pkgdir"/etc/network/if-pre-up.d \
		"$pkgdir"/etc/network/if-up.d
	install -m775 "$srcdir"/dad.if-up "$pkgdir"/etc/network/if-up.d/dad

	install -Dm644 "$srcdir"/acpid.logrotate \
		"$pkgdir/etc/logrotate.d/acpid"

	mkdir -p "$pkgdir"/var/lib/udhcpd
	install -Dm644 "$builddir"/examples/udhcp/udhcpd.conf \
		"$pkgdir"/etc/udhcpd.conf
	cat >"$pkgdir"/etc/securetty <<EOF
console
tty1
tty2
tty3
tty4
tty5
tty6
tty7
tty8
tty9
tty10
tty11
hvc0
ttyS0
ttyS1
ttyAMA0
ttyAMA1
EOF

	# script for udhcpc
	install -Dm755 "$srcdir"/default.script \
		"$pkgdir"/usr/share/udhcpc/default.script

}

extras() {
	pkgdesc="Additional binaries of Busybox"
	depends="$pkgname"
	install -Dm755 "$_dyndir_extras"/busybox "$subpkgdir"/usr/bin/busybox-extras
}

suid() {
	pkgdesc="suid binaries of Busybox"
	depends="$pkgname"

	cd "$_dyndir"
	mkdir -p "$subpkgdir"/usr/bin
	install -m4111 bbsuid "$subpkgdir"/usr/bin/bbsuid
}

static() {
	pkgdesc="Statically linked Busybox"
	mkdir -p "$subpkgdir"/usr/bin
	install -m755 "$_staticdir"/busybox.static \
		"$subpkgdir"/usr/bin/busybox.static
}

ssl_client() {
	pkgdesc="EXternal ssl_client for busybox wget"
	local _sslver=$(pkg-config --modversion libssl)
	# automatically pull in if both busybox and libssl is installed
	install_if="$pkgname=$pkgver-r$pkgrel libssl${_sslver%%.*}"
	mkdir -p "$subpkgdir"/usr/bin
	install -m755 "$_dyndir"/ssl_client \
		"$subpkgdir"/usr/bin/ssl_client
}

ifupdown() {
	pkgdesc="placeholder package for busybox ifupdown"
	provides="ifupdown-any"
	provider_priority=200
	mkdir -p "$subpkgdir"
}

binsh() {
	pkgdesc="busybox ash /bin/sh"
	provides="/bin/sh"
	provider_priority=100

	mkdir -p "$subpkgdir"/usr/bin

	ln -s /usr/bin/busybox "$subpkgdir"/usr/bin/sh
}

_helper_openrc() {
	local file
	for file ; do
		if test ${file%%\.confd} != $file ; then
			amove "etc/conf.d/${file%%\.confd}"
		elif test ${file%%\.initd} != $file ; then
			amove "etc/init.d/${file%%\.initd}"
		fi
	done
}

openrc() {
	depends="openrc>=0.24.1-r6"
	replaces="openntpd busybox-initscripts acpid-openrc"
	_helper_openrc $_openrc_files
	# poweroff script for acpid
	mkdir -p "$subpkgdir"/etc/acpi/PWRF
	{ echo '#!/bin/sh' ; echo poweroff ; } > "$subpkgdir"/etc/acpi/PWRF/00000080
	chmod 0755 "$subpkgdir"/etc/acpi/PWRF/00000080
}

extras_openrc() {
	depends="openrc>=0.24.1-r6 busybox-extras"
	replaces="busybox-initscripts"
	_helper_openrc $_extras_openrc_files
}

sha512sums="
1c203b6408154c4a44b8b126b49f9a131614d8fe48656992fccf3c315d56f54335bb1f8e6a1d4202b59d01152fd886277f7f13935c058d9bf9e07f1ee783a2da  busybox-1.36.0.tar.bz2
17249174b24ba77b6138d640eee4eebcda567a86656623122d8b31044a762ea472096c406d70ba1a1f79450236fa259d4f46c363fa25db6cc4d44950e7a4b223  0001-modutils-check-ELF-header-before-calling-finit_modul.patch
7ebb1ab462083564d2ace3e5719464326b91a40cfcf6117de4b393d3f01ed7acd37a583725323dce4220e255ba742428e0160072a90e4d566b4d7053d1f4a37f  0002-adduser-default-to-sbin-nologin-as-shell-for-system-.patch
f7caad3ef18db7de6deff0fb7b7a7e82fff613d4245f334b56a11e982c40ebcfc6160c235e49d0b4fa7d39b58c0e4924e14473a3770a66d1ef7d4df379b6d858  0003-ash-add-built-in-BB_ASH_VERSION-variable.patch
383cbc2f2f644dc34678d145ea27696a7fa7f46b8952a3448de78d516cb0452872abbc37cb3dcf2b6725c6f7675b972554404b462dec377a8e61c3b73c1cd890  0004-Avoid-redefined-warnings-when-buiding-with-utmps.patch
ce30a642e6804827ef4f7e453d162747143a52dc905950998e996d84767d19548bbbd51bd25530575670c5942137f6926e3cb6f8668e7410569d695bb4165170  0005-libbb-sockaddr2str-ensure-only-printable-characters-.patch
fa0c2f58e5bb8f646bc8451ce00375d860ded228fb7ec4ed61e3920e41990822be1fcdd8cdf9c0342318ba263516a71a837549a9bf52875b1ba652fbc7c54f92  0006-modinfo-add-k-option-for-kernel-version.patch
24b57ec15205a006310096c63829c8e09820aa8a816a9652bbf9f90efc3e6d28893be1d917deac9793121cd9cca811773272776ead121cc30e9e77cbe904cbcd  0008-pgrep-add-support-for-matching-against-UID-and-RUID.patch
63dae6bf0adb2def1436bed2bcd6ea889bbf666799a8282345e6a4bbf2b567732456fdb20439df870ead5bf242ce2b403170075429b951c5fdf53c134c9e9ef3  0009-properly-fix-wget-https-support.patch
2ddf584e1e960a45675e08f6bd4e61a80251bed0fe76ad968b79f4a15d0da89039a3ca62ee6f9605c56ca7e86d8c5696e8ec235acb90bed0998073fef1a4b2dd  0011-fsck-resolve-LABEL-.-UUID-.-spec-to-device.patch
05b00a98c2d5a2cab89bb6b6b80a39cea5fc2f5ea27589d39232fb2f8b85e2fca78cef84f55de202702274c1c7f7802dd04497a212834ae931297767a9186dc9  0012-nslookup-sanitize-all-printed-strings-with-printable.patch
85d85dcf1fc9c54ed7cbb7ffac36971b6d0a1024e7b6df7fcdccb7e3832bf6b1fa0b0d2e2b7990d0154b752af35a9e8b9b815e244226a9d190c56bf09e9094eb  0013-ash-exec-busybox.static.patch
a4a440645f1e8be9b1a92d8611190425e339049cf3e21e837f41b348796b3bb81c4369846d837359e7fbc74a32c34cea7e6924d77ca0865550c84f47fd73a1de  0015-udhcpc-set-default-discover-retries-to-5.patch
c1c522487cde86f73efb4800f610d54674d3fa381a0266598cf6c1b002b2b18be9011014b26d5d5ab82c22f6a9eaa920f32cfbb956790880497ff4316c26a64d  0016-ping-make-ping-work-without-root-privileges.patch
a9f7dd37b2722265089b39d24d47e9c4911ff1e31f9dd1c3d5ba49bca7656f3fd2b42dcfd2f837ba5ae6b850dd1b02bb6af9a97a3980fe098daf1c20fb2a4630  0017-fbsplash-support-console-switching.patch
5653c818400c38966726adf1c99b603f6f760179a291c13b5320b79e0ef63d1ad9251b276d6eed68a6b8c95bfabd95eccce9d73edbc2ea888b994d6a02763050  0018-fbsplash-support-image-and-bar-alignment-and-positio.patch
ce4316e44148562addc1f5839166ca9314ee6f26dae218617c287791a8d9239e374f993688a9299e24c9a237e4c21e481a0b35baa4e8b123ce9e2b23d065001c  0019-depmod-support-generating-kmod-binary-index-files.patch
80c426dc2ea6cafa359a078a4a283735db0b3611a6c953ee7b7b2ec00c41a1263b61085c37447fcc50a01c229db93fa8fa675b8c995040eb31e9ed6f3723a0cf  0020-Add-flag-for-not-following-symlinks-when-recursing.patch
22c1d3233b210b8a334f31101eb6ff15d276eaef009758cff57a642b660ebe38114d7f3c8055113f12d6620acc8a8f0a2fe51dbede9100cd3d0eb5cdd2d01e39  0021-udhcpc-Don-t-background-if-n-is-given.patch
750f8be47ad34a0ee124f892c779bcfc8390315a43f4cde18c601eaed329ba9cefba792ee95a267854f81488bb21bf3a1bed8c75af2c8ef6460d479052bcf885  0022-ed-don-t-use-memcpy-with-overlapping-memory-regions.patch
923c29b050f456210fbb06d72c77f53eff2179757e8595a8e9cd1ad3f1d4d300c525bec88de3170fa16dbe6a0ea498cdf01ab5a20a289af913ca05b27abab27d  0023-tests-fix-tarball-creation.patch
192fe9b535b3ae4cfbd8455d642e9c73b134ddbdf9265b3ebd1a185122bbb1064cf2c1f01840a8cf35d0665969846ff7168c215fdce96b46b031d73c16f7622f  0024-tests-musl-doesn-t-seem-to-recognize-UTC0-as-a-timez.patch
0a0e4c425879d8250b4dee925dc9feb2595ed68b1fdb5c22e78f3452e46dc17c882ea47f119c2308915f4105b69e5c6f38156131bee1fe9ba0ff684bfd10a049  0025-Hackfix-to-disable-HW-acceleration-for-MD5-SHA1-on-x.patch
09358ed36d6c13a50119a9d96898fdc2d3e6ca089659780604425ae3d32960a17c3083de81a131b1cf9a9a2b449e40a8ed6af3a8b916247571ebc41765ab365b  0026-lineedit-Handle-SIGWINCH-gracefully.patch
e3670ab567818a42593698546dcdabaa447c10682261c128901b4390eb2bf2dbea9e84f8f2dcdd6d67c82bf93bb1eed14406e5a8dd723b4670d1995b6100651f  0027-umount-Implement-O-option-to-unmount-by-mount-option.patch
aa93095e20de88730f526c6f463cef711b290b9582cdbd8c1ba2bd290019150cbeaa7007c2e15f0362d5b9315dd63f60511878f0ea05e893f4fdfb4a54af3fb1  acpid.logrotate
6d0a1b9a53fe3269e607f995fac5b2fc65486f87f1b5ba4aeab56a1d12c25450b6d602268d44b738048b6dad30feb35cfb8451f7d91a7b49edee4029c3f7b783  busyboxconfig
3eb0528fa3e92180bd9c096946b0b9193bea3931aabc2897af4b4065c690436410e356e3c0af72666130fcd4498e99df2c46b72e4898ac3baff4ad81d12b43f4  busyboxconfig-extras
0becc2186d6c32fb0c401cf7bc0e46268b38ce8892db33be1daf40273024c1c02d518283f44086a313a2ccef34230a1d945ec148cc173f26e6aa9d88a7426e54  bbsuid.c
6321c1d96d8938a3b5eab21731de289ede136fff550f98127c509452bfb17769ccf94b118491f7b81d3c60e1bbb3e80bb07186e4ce07e29724a52f0daba9b218  dad.if-up
26eac967d6cfe13b7dc973112de145543ac0bdda9e9dd3a69bbd8c133ae6a20387abe9377917efb770b191130d3a6385ff5738abc84a8216d7b86ae88b159260  ssl_client.c
e56f9d74f7d471893ff9c3fde319b989e1854c9b12f06c1b6739694b07165ae256b5c555bc75c92986265df7f0a276001aba73853855c7a0fb3404a091a92c86  default.script
fb3d32dc8047357dc7b0b6881765f6322981a8251ff869ce9b189fa036c133f76028bef4b1ff35d777e4c48423f02e597fa868b3ba36eedeaeb88030da2da8f2  acpid.initd
34c6f3197064bb91619b899b28a201bd4d920b18bded3845440b2cb36dc6f16cabf447c96878349b16e46c30184cbe48bac00a01c5f7cf1be038c0b7136064c5  crond.confd
653e8fc27285b9cce6df4f0af6b8d89153515abc295228fcdd8e1ac7a3d7d4f80c5b0b13d774bbc96a8726c588170b9ff698671de5f8fe59eb1a68426041d088  crond.initd
f9bf43b72142bbb4c0665c1268a3d91586ef8a057dfe64c53b6923815d2db1f669b8080a38311ad89cda0b783a8628700fc5414d834a21d8e48515760bb910f7  klogd.confd
e7af506cfc5b997fa2e8412f78921b685a735b131cbc24e8cf3fc685b961545b4bcc4cb0649297ac09412b029635a09f6697d4c44fc78493ed437653b8d922bc  klogd.initd
b0ba67585f39d83320ed6de183d7463a0e163807b9f3dc6f0baa212236056f22aeb2c5399dfdcd54929eb5ae06a15714c2fed133b5888869ed9d9cf589cef843  ntpd.confd
9e8c4d7347dd99bb9c1f141be5cd368da664b5e3d782aa80cbfa751949fb253ebf4c8fa5e9d06fc7ece7e9ba47876ed8135f521ed6ff28e9c4c681f7912dc51b  ntpd.initd
3d6c4d358e226e0c0462f2003bcf0b6787f91a53f4d6b6db5bfe7748bb0dd392d7cc454058ea8a9b649e8dd2629963a5ad1257c36af04367caeb1923f954daf7  rdate.confd
804fdcfd7fd8001fb72836b92746fc3824df6c53423ac1635176c8b5b180547d0ef8049f33ceea65b8999f6654f7a542fedc6c420a04764f22bf14a41733678b  rdate.initd
bf8173ee33a5d2b61cbdbc1b070e599a17a21e5433a0d8aa9beef71e4ac831304076af8e7e58dc594cdee61562329793afdc57af91e5496bf5fffb9b734a3d9c  syslog.confd
acee505face1574029926d4f0c2f5f2e1d0be984123832ea42fd57d46e0946008f2c19df57f536d33398298b8f300f208f62e57c25d2b6bf4f475abb73cb1398  syslog.initd
acbba3385fb2c416362eb9176f24146b617a2e394ee0e00b9eff89350f82468a5ab8396f4f52b0aaf03d341ac6150c73182e808fa3f29a2dc71c69271cdfb811  loadkmap.confd
504394ef69d316fd7cef63a31c6d0e32b70f4cc060acf70fbe42c0e1eb5d04120c221ef1cace20cb3191be61e600000f7f3174807e5249d6a8ba4e639c40e3db  loadkmap.initd
359af0a4a1841dd6557eaf3e71d39f0d7a2687bad6a8fc6ef436eccf72a40f85c6400a3b7880c7f64d8e460b6af8a0ff3dd5ffc3a4b1aa8eb0d8f7eaf99ee3e4  watchdog.confd
fefa6e1743d70b4df5f018e8ca14e8f7fe432cfa30ff1e17c660d53c944f52d45afd0943e49a823a9d11198b3516ddc64e363706056b4138d773545d21a05671  watchdog.initd
7601da5ae914c994c5d6753915d3a7aa80d53d6dbf8891e86c333aaf513250f8a88c0c6a987732a49cda0713248b23539a8f00791461b3d3af29438add6168b5  dnsd.initd
886857a2508007843186e37c4e154814182eb041521729489b959e7c32264f93a4fafa6d8efdb6d88a2b987b846f1801bb66eb0923037c3ed44dac45f80c5243  httpd.initd
d59bf5b63f7ba1f71ec6b43b059eaacf1870e929b056536538f8ddfbeefd16f150781ac87000f9794c8b0348a8400b1628636a9c1266fce80028e5cb0297209a  inetd.initd
bef67b208b94c0deed9efbd8a23a786ceb9357da31a0068592e7380061251a6b503ee338ada4d4201d085db91e622596f9e909ecf5f3d1dbaca2e9ae24e18342  udhcpd.initd
28c659598ba17d9a26cb5e29279a3ac3796da6f8343f3ffe3082d1cf868086b24c14d39dbbcf5a728403faa009c078bec3702850415dbb5c04e666124327a821  0101-init-don-t-reset-init-s-tty-settings-for-every-runac.patch
539ae1292411e5f7976237954151a8eb7f401f1c6091febc7cb74a0ed721a10244ee0a66559d1f752dd62e1bed110c2b01899693534a60600b9564e5ff2984da  0102-busybox-libbb-install-to-usr-s-bin.patch
"
