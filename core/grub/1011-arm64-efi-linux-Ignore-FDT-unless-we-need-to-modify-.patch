From d48c710e4d52b58395b38fedc269aef03ffe387f Mon Sep 17 00:00:00 2001
From: Ard Biesheuvel <ardb@kernel.org>
Date: Tue, 18 Oct 2022 21:05:07 +0200
Subject: [PATCH] arm64/efi/linux: Ignore FDT unless we need to modify it

Now that we implemented support for the LoadFile2 protocol for initrd
loading, there is no longer a need to pass the initrd parameters via
the device tree. This means that when the LoadFile2 protocol is being
used, there is no reason to update the device tree in the first place,
and so we can ignore it entirely.

The only remaining reason to deal with the devicetree is if we are
using the "devicetree" command to load one from disk, so tweak the
logic in grub_fdt_install() to take that into account.

Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
Reviewed-by: Leif Lindholm <quic_llindhol@quicinc.com>
Reviewed-by: Daniel Kiper <daniel.kiper@oracle.com>
(cherry picked from commit 93afdf859743177369fe8669fff78da29e7d4e01)
---
 grub-core/loader/arm64/linux.c | 32 ++++++++++++++++----------------
 grub-core/loader/efi/fdt.c     |  7 +++++--
 2 files changed, 21 insertions(+), 18 deletions(-)

diff --git a/grub-core/loader/arm64/linux.c b/grub-core/loader/arm64/linux.c
index 1e2d218bc..95fc470dc 100644
--- a/grub-core/loader/arm64/linux.c
+++ b/grub-core/loader/arm64/linux.c
@@ -134,26 +134,26 @@ finalize_params_linux (void)
   grub_err_t err = GRUB_ERR_NONE;
   void *fdt;
 
-  fdt = grub_fdt_load (GRUB_EFI_LINUX_FDT_EXTRA_SPACE);
-  if (!fdt)
+  /* Set initrd info */
+  if (initrd_start && initrd_end > initrd_start)
     {
-      err = grub_error(GRUB_ERR_BAD_OS, "failed to load FDT");
-      goto failure;
-    }
+      fdt = grub_fdt_load (GRUB_EFI_LINUX_FDT_EXTRA_SPACE);
+      if (!fdt)
+        {
+          err = grub_error(GRUB_ERR_BAD_OS, "failed to load FDT");
+          goto failure;
+        }
 
-  node = grub_fdt_find_subnode (fdt, 0, "chosen");
-  if (node < 0)
-    node = grub_fdt_add_subnode (fdt, 0, "chosen");
+      node = grub_fdt_find_subnode (fdt, 0, "chosen");
+      if (node < 0)
+       node = grub_fdt_add_subnode (fdt, 0, "chosen");
 
-  if (node < 1)
-    {
-      err = grub_error(grub_errno, "failed to load chosen fdt node.");
-      goto failure;
-    }
+      if (node < 1)
+        {
+          err = grub_error(grub_errno, "failed to load chosen fdt node.");
+          goto failure;
+        }
 
-  /* Set initrd info */
-  if (initrd_start && initrd_end > initrd_start)
-    {
       grub_dprintf ("linux", "Initrd @ %p-%p\n",
 		    (void *) initrd_start, (void *) initrd_end);
 
diff --git a/grub-core/loader/efi/fdt.c b/grub-core/loader/efi/fdt.c
index c86f283d7..061f662fd 100644
--- a/grub-core/loader/efi/fdt.c
+++ b/grub-core/loader/efi/fdt.c
@@ -89,13 +89,16 @@ grub_fdt_install (void)
   grub_efi_guid_t fdt_guid = GRUB_EFI_DEVICE_TREE_GUID;
   grub_efi_status_t status;
 
+  if (fdt == NULL && loaded_fdt == NULL)
+    return GRUB_ERR_NONE;
+
   b = grub_efi_system_table->boot_services;
-  status = b->install_configuration_table (&fdt_guid, fdt);
+  status = b->install_configuration_table (&fdt_guid, fdt ? fdt : loaded_fdt);
   if (status != GRUB_EFI_SUCCESS)
     return grub_error (GRUB_ERR_IO, "failed to install FDT");
 
   grub_dprintf ("fdt", "Installed/updated FDT configuration table @ %p\n",
-		fdt);
+		fdt ? fdt : loaded_fdt);
   return GRUB_ERR_NONE;
 }
 
-- 
2.25.1

