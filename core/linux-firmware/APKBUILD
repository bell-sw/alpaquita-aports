pkgname=linux-firmware
pkgver=20230404
pkgrel=1
pkgdesc="firmware files for linux"
url="https://git.kernel.org/?p=linux/kernel/git/firmware/linux-firmware.git;a=summary"
arch="all"
license="custom"
makedepends="libarchive-tools"
provides="linux-firmware-any linux-firmware-extra-modules-any"
provider_priority=1
options="!strip !check !archcheck !spdx !annobin"

_rpi_bt=9556b08ace2a1735127894642cc8ea6529c04c90
_rpi_brcm=2b465a10b04555b7f45b3acb85959c594922a3ce

source="https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/snapshot/linux-firmware-$pkgver.tar.gz
	BCM43430A1.hcd.$_rpi_bt::https://github.com/RPi-Distro/bluez-firmware/raw/$_rpi_bt/broadcom/BCM43430A1.hcd
	BCM4345C0.hcd.$_rpi_bt::https://github.com/RPi-Distro/bluez-firmware/raw/$_rpi_bt/broadcom/BCM4345C0.hcd
	BCM43430B0.hcd.$_rpi_bt::https://github.com/RPi-Distro/bluez-firmware/raw/$_rpi_bt/broadcom/BCM43430B0.hcd
	BCM4345C5.hcd.$_rpi_bt::https://github.com/RPi-Distro/bluez-firmware/raw/$_rpi_bt/broadcom/BCM4345C5.hcd
	BCM43430A1.raspberrypi,model-zero-2-w.hcd.$_rpi_bt::https://github.com/RPi-Distro/bluez-firmware/raw/$_rpi_bt/synaptics/SYN43430A1.hcd
	BCM43430B0.raspberrypi,model-zero-2-w.hcd.$_rpi_bt::https://github.com/RPi-Distro/bluez-firmware/raw/$_rpi_bt/synaptics/SYN43430B0.hcd
	brcm-firmware-$_rpi_brcm.tar.gz::https://github.com/RPi-Distro/firmware-nonfree/archive/$_rpi_brcm.tar.gz
	"

# Put /lib/firmware/* folders in subpackages
_folders="3com acenic adaptec advansys amd amd-ucode amdgpu amphion ar3k ath10k
	ath11k ath6k ath9k_htc atmel atusb av7110 bnx2 bnx2x brcm cadence cavium cirrus
	cis cnm cpia2 cxgb3 cxgb4 cypress dabusb dpaa2 dsp56k e100 edgeport emi26 emi62
	ene-ub6250 ess go7007 i915 imx inside-secure intel isci kaweth keyspan
	keyspan_pda korg libertas liquidio matrox mediatek mellanox meson microchip
	moxa mrvl mwl8k mwlwifi myricom netronome nvidia nxp ositech qca qed
	qlogic r128 radeon rockchip rsi rtl8192e rtl_bt rtl_nic rtlwifi rtw88 rtw89
	sb16 slicoss sun sxg tehuti ti ti-connectivity ti-keystone tigon ttusb-budget
	ueagle-atm vicam vxge wfx yam yamaha"

# Firmware folders for linux extra-modules package
_firmware_modules="3com acenic adaptec advansys amd amd-ucode amdgpu ar3k ath10k ath11k
	ath6k ath9k_htc atmel atusb av7110 bnx2 bnx2x brcm cis cxgb3 cxgb4 e100
	edgeport emi26 emi62 i915 intel isci kaweth keyspan keyspan_pda matrox mellanox
	microchip moxa mrvl mwlwifi netronome nvidia ositech qlogic radeon rtl_bt
	rtl_nic rtlwifi rtw89 wfx tehuti ti-connectivity tigon ttusb-budget
	ueagle-atm vicam vxge"

case "$CARCH" in
	arm*|aarch64) _folders="$_folders qcom";;
esac

subpackages="$pkgname-other::noarch $pkgname-none::noarch $pkgname-extra-modules::noarch"
depends="linux-firmware-other=$pkgver-r$pkgrel"
for i in $_folders; do
	subpackages="$pkgname-$i:_folder:noarch $subpackages"
	depends="$pkgname-$i=$pkgver-r$pkgrel $depends"
done
subpackages="amd-ucode::noarch $subpackages"

package() {
	make DESTDIR="$pkgdir" FIRMWAREDIR="/lib/firmware" install

	# add original Pi Foundation firmware files
	# we can use either the -standard or -minimal 43455 file so use standard by default
	ln -s cyfmac43455-sdio-standard.bin "$srcdir"/firmware-nonfree-$_rpi_brcm/debian/config/brcm80211/cypress/cyfmac43455-sdio.bin
	install -Dm644 \
		"$srcdir"/firmware-nonfree-$_rpi_brcm/debian/config/brcm80211/brcm/brcmfmac*raspberrypi* \
		-t "$pkgdir"/lib/firmware/brcm

	local fw; for fw in $source; do
		local _f=${fw%::*}
		case $_f in
		*.hcd*)
			install -Dm 644 "$srcdir"/$_f \
				"$pkgdir"/lib/firmware/brcm/"${_f%.*}"
			;;
		esac
	done

	rm -f "$pkgdir/usr/lib/firmware/{Makefile,README,configure,GPL-3}"

	find "$pkgdir" \( -name '*.S' -or -name '*.asm' -or \
		-name '*.c' -or -name '*.h' -or -name '*.pl' -or \
		-name 'Makefile' \) -exec rm -- {} \;

	dangling=$(cd "$pkgdir" && find . -type l ! -exec test -e {} \; -print)
	if [ -n "$dangling" ]; then
		error "dangling symlinks:"
		echo "$dangling" >&2
		return 1
	fi
}

_folder() {
	local folder=${subpkgname##linux-firmware-}
	pkgdesc="firmware files for linux ($folder folder)"
	depends=""
	provides="linux-firmware-any linux-firmware-extra-modules-any"
	provider_priority=

	# Move /lib/firmware/$folder (case insensitive)
	mkdir -p "$subpkgdir/lib/firmware"
	mv "$(find "$pkgdir/lib/firmware" -iname "$folder" -type d)" \
		"$subpkgdir/lib/firmware"
}

other() {
	# Requires subfolders to be split in subpackages
	local leftover=""
	local i
	for i in "$pkgdir"/lib/firmware/*; do
		[ -d "$i" ] && leftover="$leftover $(basename $i)"
	done
	if [ "$leftover" != "" -a "$leftover" != " qcom" ]; then
		local fixed
		error "Not all subfolders have been moved to subpackages!"
		error "Fix this by adjusting _folders as follows:"
		fixed="$(echo $_folders$leftover | tr " " "\n" | tr '[:upper:]' '[:lower:]' | sort)"
		echo "_folders=\"$(printf "%s" "$fixed" | tr "\n" " ")\"" | fold -s
		return 1
	fi

	# Move /lib/firmware (which doesn't have subfolders now)
	pkgdesc="firmware files for linux (uncategorized)"
	depends=""
	provides="linux-firmware-any linux-firmware-extra-modules-any"
	provider_priority=
	mkdir -p "$subpkgdir"/
	mv "$pkgdir"/lib "$subpkgdir"/

	# Not used, qlcnic driver is not enabled
	rm -f "$subpkgdir"/lib/firmware/phanfw.bin
	rm -rf "$subpkgdir"/lib/firmware/qcom
}

none() {
	# dummy package with no firmware
	pkgdesc="Empty linux firwmare package for those who does not need any firmware"
	provider_priority=
	provides="linux-firmware-any linux-firmware-extra-modules-any"
	depends=
	mkdir -p "$subpkgdir"
}

ucode() {
	pkgdesc="Microcode update files for AMD CPUs"
	provider_priority=
	provides=
	depends=

	# build ported from Arch Linux's PKGBUILD
	mkdir -p "$subpkgdir"/boot
	mkdir -p "$builddir"/kernel/x86/microcode
	cat "$pkgdir"/lib/firmware/amd-ucode/microcode_amd*.bin > "$builddir"/kernel/x86/microcode/AuthenticAMD.bin
	[ -n "$SOURCE_DATE_EPOCH" ] && touch -d @$SOURCE_DATE_EPOCH "$builddir"/kernel/x86/microcode/AuthenticAMD.bin
	cd "$builddir" && echo kernel/x86/microcode/AuthenticAMD.bin |
	  bsdtar --uid 0 --gid 0 -cnf - -T - |
	  bsdtar --null -cf - --format=newc @- > "$subpkgdir"/boot/amd-ucode.img
}

modules()
{
	pkgdesc="firmware files for linux extra modules package"
	provider_priority=2
	provides="linux-firmware-extra-modules-any"

	depends="linux-firmware-other=$pkgver-r$pkgrel"
	for i in $_firmware_modules; do
		depends="$pkgname-$i=$pkgver-r$pkgrel $depends"
	done
	mkdir -p "$subpkgdir"
}

sha512sums="
c394d716c5b3a4b6445ab51f3a2c782f514da5fe6996724041d943516242eb51b72d7aee22e68c2c7ec95c085b4bf7b62b85c93e475c11752a9faa30a33284f1  linux-firmware-20230404.tar.gz
355c940b4fd597101c332207678fd28154d7e7a90cb374b1fdf230d2061bf979af0209c5a423fca8d23ddb3d95abec741e7dd651da7f0aaa97459ed4fe4d2355  BCM43430A1.hcd.9556b08ace2a1735127894642cc8ea6529c04c90
bd2120e93127f76263666aa1025d30f6536e0a0b5a51d00e004e4b33a4abfdbe2100bdb2bf45898ce1db5af48d82536e48ee342e192c86933523b0871eba963c  BCM4345C0.hcd.9556b08ace2a1735127894642cc8ea6529c04c90
c8b943bfeffa54ce1687ca69884e9d56efd28d5ea1dbef660915a80c3e036a8675e7d4299102c32006193e4895367654bb67e2d08e66d7803f396eee7e3dfbd6  BCM43430B0.hcd.9556b08ace2a1735127894642cc8ea6529c04c90
986a1cb3041064023043c73a18694418dae589f4795bbc889ce6ff0c64c7e30f7ba104070e6f1934e1c306a61fe99391e6f98ef481bf921f9a56fba16251e21e  BCM4345C5.hcd.9556b08ace2a1735127894642cc8ea6529c04c90
d82937a5a80433966230a13161f9c3cf9a099f4b47b10c04a4b6b8592cfef071781efcd1e406e714aff2273f18dddd776898c37507f3b0624523a9b8c85271ca  BCM43430A1.raspberrypi,model-zero-2-w.hcd.9556b08ace2a1735127894642cc8ea6529c04c90
c8b943bfeffa54ce1687ca69884e9d56efd28d5ea1dbef660915a80c3e036a8675e7d4299102c32006193e4895367654bb67e2d08e66d7803f396eee7e3dfbd6  BCM43430B0.raspberrypi,model-zero-2-w.hcd.9556b08ace2a1735127894642cc8ea6529c04c90
87e9212e07bd6be53e4b1ef72584c6801fafab7129890c7c3d9c652fb4aab285ec7e11ded9f872bfd39a3ddc740229e87274bdb27e65e4fc59664a5c55ab16b8  brcm-firmware-2b465a10b04555b7f45b3acb85959c594922a3ce.tar.gz
"
