# Description: $VENDOR_NAME $VENDOR_JAVA_NAME with CRaC provides an API
# for creating and restoring application snapshots.  This version of
# $VENDOR_NAME $VENDOR_JAVA_NAME is UNTESTED and presumed incompatible
# with the Java SE Specification.

_java_pkg_name=$(echo $VENDOR_JAVA_NAME | tr [:upper:] [:lower:])
_java_ver=17.0.13+13
_java_rel_date=2024-10-15
_java_name="$VENDOR_NAME $VENDOR_JAVA_NAME JDK 17 CRaC"

pkgname=${_java_pkg_name}17-crac
pkgver=${_java_ver/+/_p}
pkgrel=0
pkgdesc="$_java_name (Coordinated Restore at Checkpoint)"
url="$VENDOR_URL"
license="GPL-2.0 WITH Classpath-Exception-2.0"
arch="x86_64"
options="!strip ldpath-recursive !tracedeps !annobin"
annocheck_skip="libsyslookup.so"
depends="$pkgname-doc=$pkgver-r$pkgrel $pkgname-jdk=$pkgver-r$pkgrel"
makedepends="
	alsa-lib-dev
	automake
	autoconf
	bash
	ca-certificates
	coreutils
	cups-dev
	file
	findutils
	fontconfig-dev
	freetype-dev
	gawk
	gettext
	grep
	libx11-dev
	libxext-dev
	libxi-dev
	libxrandr-dev
	libxrender-dev
	libxt-dev
	libxtst-dev
	linux-headers
	sed
	zip
	zlib-dev
	openjdk17-bootstrap>=17.0.3
	"
subpackages="
	$pkgname-dbg:_dbg
	$pkgname-jmods:_jmods:noarch
	$pkgname-demos:_demos:noarch
	$pkgname-src:_src:noarch
	$pkgname-jre-doc:_jre_doc:noarch
	$pkgname-doc:_doc:noarch
	$pkgname-libs-static:_libs_static
	$pkgname-jre-cds:_jre_cds
	$pkgname-jre-no-deps:_jre_no_deps
	$pkgname-jre:_jre
	$pkgname-jdk-no-deps:_jdk_no_deps
	$pkgname-jdk:_jdk
	"

provides="
	openjdk17-crac=$pkgver-r$pkgrel
"

source="
	${VENDOR_URL/\/\//\/\/download.}java/$_java_ver/bellsoft-jdk$_java_ver-src-crac.tar.gz
	HelloJava.java
	readme.txt.template
	dynamically-increase-size-of-cpuset-mask.patch
	"

builddir="$srcdir/jdk-${_java_ver%+*}"
sonameprefix="$pkgname:"

_java_home=/usr/lib/jvm/"$pkgname"
ldpath="$_java_home/lib"

_jre_tools="
	java
	keytool
	rmiregistry
	"

prepare() {
	default_prepare

	update_config_sub
}

build() {

	if [ -z "$JOBS" ]; then
		export JOBS=$(printf '%s\n' "$MAKEFLAGS" | sed -n -e 's/.*-j\([0-9]\+\).*/\1/p')
	fi

	local _cflags="-fstack-protector-strong -D_FORTIFY_SOURCE=2"
	local _boot_jdk=$(echo /usr/lib/jvm/java-17-* | awk '{ print $1 }')

	[ "$CLIBC" = 'musl' ] && _cflags="$_cflags -D_LARGEFILE64_SOURCE"

	CFLAGS='' CXXFLAGS='' LDFLAGS=''
	bash ./configure \
		--build=$CBUILD \
		--host=$CHOST \
		--target=$CTARGET \
		--with-jvm-variants='server,client,minimal' \
		--with-jvm-features=shenandoahgc,zgc \
		--with-version-string=${_java_ver%+*} \
		--with-version-build=${_java_ver#*+} \
		--with-version-date=${_java_rel_date} \
		--with-version-opt=LTS \
		--with-vendor-name="$VENDOR_NAME" \
		--with-vendor-url="$VENDOR_URL" \
		--with-vendor-bug-url="$VENDOR_BUG_REPORT_URL" \
		--with-vendor-vm-bug-url="$VENDOR_BUG_REPORT_URL" \
		--with-extra-cflags="$_cflags" \
		--with-extra-cxxflags="$_cflags" \
		--with-extra-ldflags=$LDFLAGS \
		--disable-warnings-as-errors \
		--with-zlib=system \
		--with-boot-jdk=$_boot_jdk

	# The output (stdout and stderr) from the latest build is
	# always stored in $BUILD/build.log.  The previous build log
	# is stored as build.log.old.  This means that it is not
	# necessary to redirect the build output yourself if you want
	# to process it.

	# You can increase the verbosity of the log file, by the LOG
	# control variable to make.  If you want to see the command
	# lines used in compilations, use LOG=cmdlines.  To increase
	# the general verbosity, use LOG=info, LOG=debug or LOG=trace.
	# Both of these can be combined with cmdlines, e.g.
	# LOG=info,cmdlines.  The debug log level will show most shell
	# commands executed by make, and trace will show all.  Beware
	# that both these log levels will produce a massive build log!
	local verbose
	#verbose="LOG=cmdlines" # uncomment and change if/as necessary

	MAKEFLAGS='' make $verbose product-bundles static-libs-bundles
}

check() {
	_jdkdir="$builddir"/build/linux-*-release/images/jdk

	$_jdkdir/bin/javac "$startdir"/HelloJava.java -d "$builddir"
	$_jdkdir/bin/java -cp "$builddir" HelloJava
}

package() {
	mkdir -p "$pkgdir/$_java_home"
	tar -C "$pkgdir/$_java_home" -xf build/linux-*-release/bundles/*_bin.tar.gz --no-same-owner --strip-components=1
}

_jre_cds() {
	pkgdesc="$_java_name (JRE Class Data Sharing archives)"
	depends="$pkgname-jre-no-deps=$pkgver-r$pkgrel"
	provides="openjdk17-crac-jre-cds=$pkgver-r$pkgrel"

	# XXX: hack alert!  fakeroot overrides LD_LIBRARY_PATH and
	# puts /usr/lib in the front.  If you have libnet-dev package
	# installed, you will have /usr/lib/libnet.so on your system.
	# Now, java has libnet.so with JNI code in its own lib dir.
	# Since LD_LIBRARY_PATH take precedence over DT_RUNPATH, when
	# java tries to load libnet.so it gets the wrong one, found in
	# /usr/lib.  Force the Java's libdir to be searched first.
	local LD_LIBRARY_PATH="$pkgdir/$_java_home/lib:$LD_LIBRARY_PATH"

	rm -f "$pkgdir/$_java_home/lib/server"/*.jsa
	"$pkgdir/$_java_home/bin/java" -server -XX:+UseCompressedOops -Xshare:dump
	"$pkgdir/$_java_home/bin/java" -server -XX:-UseCompressedOops -Xshare:dump

	mkdir -p "$subpkgdir/$_java_home/lib/server"
	mv "$pkgdir/$_java_home/lib/server"/*.jsa "$subpkgdir/$_java_home/lib/server"
}

_jre_no_deps() {
	pkgdesc="$_java_name (JRE without dependencies)"
	depends="criu-openjdk java-common zlib"
	install="
		$pkgname-jre-no-deps.post-install
		$pkgname-jre-no-deps.pre-deinstall
	"
	provides="
		java-jre-no-deps
		java17-jre-no-deps
		openjdk17-crac-jre-no-deps=$pkgver-r$pkgrel
	"

	mkdir -p "$subpkgdir/$_java_home"
	mv "$pkgdir/$_java_home/lib" "$subpkgdir/$_java_home/"

	mkdir -p "$subpkgdir/$_java_home/bin"
	for f in $_jre_tools; do
		mv "$pkgdir/$_java_home/bin/$f" "$subpkgdir/$_java_home/bin/$f"
	done

	for f in legal conf release; do
		mv "$pkgdir/$_java_home/$f" "$subpkgdir/$_java_home/$f"
	done

	cp "$subpkgdir/$_java_home/legal/java.base/LICENSE" "$subpkgdir/$_java_home/"
	VENDOR_NAME="$VENDOR_NAME" VENDOR_URL="$VENDOR_URL" VENDOR_JAVA_NAME="$VENDOR_JAVA_NAME" \
		envsubst < readme.txt.template > "$subpkgdir/$_java_home/readme.txt"

	ln -sf . "$subpkgdir/$_java_home/jre"
	ln -s $pkgname "$subpkgdir"/usr/lib/jvm/java-17-${pkgname%*17}
}

_jre() {
	pkgdesc="$_java_name (JRE)"
	depends="$pkgname-jre-no-deps=$pkgver-r$pkgrel fontconfig ttf-dejavu-core freetype"
	provides="
		java-jre
		java17-jre
		openjdk17-crac-jre=$pkgver-r$pkgrel
	"

	mkdir -p "$subpkgdir"
}


_jre_doc() {
	pkgdesc="$_java_name (JRE Documentation)"
	depends="$pkgname-jre=$pkgver-r$pkgrel"
	provides="openjdk17-crac-jre-doc=$pkgver-r$pkgrel"

	mkdir -p "$subpkgdir/$_java_home/man/man1"
	for f in $_jre_tools; do
		mv "$pkgdir/$_java_home/man/man1/$f".* "$subpkgdir/$_java_home/man/man1/"
	done
}

_jdk_no_deps() {
	pkgdesc="$_java_name (JDK without dependencies)"
	depends="$pkgname-jre-no-deps=$pkgver-r$pkgrel"
	provides="
		java-jdk-no-deps
		java17-jdk-no-deps
		openjdk17-crac-jdk-no-deps=$pkgver-r$pkgrel
	"

	mkdir -p "$subpkgdir/$_java_home"
	for f in bin include; do
		mv "$pkgdir/$_java_home/$f" "$subpkgdir/$_java_home/"
	done
}

_jdk() {
	pkgdesc="$_java_name (JDK)"
	depends="$pkgname-jre=$pkgver-r$pkgrel $pkgname-jdk-no-deps=$pkgver-r$pkgrel"
	provides="
		java-jdk
		java17-jdk
		openjdk17-crac-jdk=$pkgver-r$pkgrel
	"

	mkdir -p "$subpkgdir"
}

_jmods() {
	pkgdesc="$_java_name (Java Modules)"
	depends="$pkgname-jdk=$pkgver-r$pkgrel"
	provides="openjdk17-crac-jmods=$pkgver-r$pkgrel"

	mkdir -p "$subpkgdir/$_java_home"
	mv "$pkgdir/$_java_home/jmods" "$subpkgdir/$_java_home/"
}

_doc() {
	pkgdesc="$_java_name (Documentation)"
	depends="$pkgname-jre-doc=$pkgver-r$pkgrel"
	provides="openjdk17-crac-doc=$pkgver-r$pkgrel"

	mkdir -p "$subpkgdir/$_java_home"
	mv "$pkgdir/$_java_home/man" "$subpkgdir/$_java_home/"
}

_demos() {
	pkgdesc="$_java_name (Demos)"
	depends="$pkgname-jdk=$pkgver-r$pkgrel"
	provides="openjdk17-crac-demos=$pkgver-r$pkgrel"

	mkdir -p "$subpkgdir/$_java_home"
	tar -C "$subpkgdir/$_java_home" -xf "$builddir"/build/linux-*-release/bundles/*_bin-tests-demos.tar.gz --no-same-owner --strip-components=1
}

_src() {
	pkgdesc="$_java_name (Sources)"
	depends="$pkgname-jdk=$pkgver-r$pkgrel"
	provides="openjdk17-crac-src=$pkgver-r$pkgrel"

	mkdir -p "$subpkgdir/$_java_home/lib"
	mv "$pkgdir/$_java_home/lib/src.zip" "$subpkgdir/$_java_home/lib/"
}

_dbg() {
	pkgdesc="$_java_name (Debug Info)"
	depends="$pkgname-jdk=$pkgver-r$pkgrel"
	provides="openjdk17-crac-dbg=$pkgver-r$pkgrel"

	local debugdir="$subpkgdir/usr/lib/debug"
	mkdir -p "$debugdir/$_java_home"
	tar -C "$debugdir/$_java_home" -xf "$builddir"/build/linux-*-release/bundles/*_bin-symbols.tar.gz --no-same-owner --strip-components=1
}

_libs_static() {
	pkgdesc="$_java_name (Static Libraries)"
	depends="$pkgname-jdk=$pkgver-r$pkgrel"
	provides="openjdk17-crac-libs-static=$pkgver-r$pkgrel"

	mkdir -p "$subpkgdir/$_java_home/lib"
	tar -C "$subpkgdir/$_java_home" -xf "$builddir"/build/linux-*-release/bundles/*_bin-static-libs.tar.gz --no-same-owner --strip-components=1
}

sha512sums="
481ebb7fbb7c15cb913d717ae5decc93009d22b45fe309a028adfabd0c05c4de61370e009fb07661c63ae8a3e66943d7c69a69fb61e37ea01b8cae8a6ea9b543  bellsoft-jdk17.0.13+13-src-crac.tar.gz
508cc8511fecee2288f41dc009834d444785ddd4129acfabefeae03ab75a26088bc7e8a60548dac58c6d18865d994e5ad8fa340cac20ba3cc838434dc7cbbcde  HelloJava.java
38edd959b1e1880c1b2663c27ec31708538a43e75889209530209c0328e52ddc8eeb92ebe03e2b51b5440c41354316e55897d0d21d04ceff0b488a97242de5d4  readme.txt.template
bd0da3e1d79abcb277250426f25ba5c224dd9fc1a36935f9cd7e564118078322ae45fb286fa7451017fa48b5531ead670845a74cdfd39325808efa541ba956ae  dynamically-increase-size-of-cpuset-mask.patch
"
