From c2881a6b71a36d28a89166e82820dc5e711fd775 Mon Sep 17 00:00:00 2001
From: Richard Purdie <richard.purdie@linuxfoundation.org>
Date: Thu, 13 Jan 2022 06:48:14 +0000
Subject: [PATCH] pppd: Drop linux IPX support (#326)

The 5.15 Linux kernel has removed ipx support, along with the userspace
visible header. This support wasn't very well maintained in the kernel
for several years so drop the support from ppp as well since this won't
be usable in future.

Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
---
 configure.ac       |   11 -
 pppd/Makefile.am   |    5 -
 pppd/ipxcp.c       | 1550 --------------------------------------------
 pppd/ipxcp.h       |   93 ---
 pppd/main.c        |    6 -
 pppd/pathnames.h   |    5 -
 pppd/pppd.8        |   97 ---
 pppd/pppd.h        |   10 -
 pppd/pppdconf.h.in |    3 -
 pppd/sys-linux.c   |  121 +---
 sample/options     |    3 -
 11 files changed, 1 insertion(+), 1903 deletions(-)
 delete mode 100644 pppd/ipxcp.c
 delete mode 100644 pppd/ipxcp.h

diff --git a/pppd/main.c b/pppd/main.c
index 5500e283..23294379 100644
--- a/pppd/main.c
+++ b/pppd/main.c
@@ -116,9 +116,6 @@
 #include "cbcp.h"
 #endif
 
-#ifdef IPX_CHANGE
-#include "ipxcp.h"
-#endif /* IPX_CHANGE */
 #ifdef AT_CHANGE
 #include "atcp.h"
 #endif
@@ -279,9 +276,6 @@ struct protent *protocols[] = {
 #endif
     &ccp_protent,
     &ecp_protent,
-#ifdef IPX_CHANGE
-    &ipxcp_protent,
-#endif
 #ifdef AT_CHANGE
     &atcp_protent,
 #endif
diff --git a/pppd/pathnames.h b/pppd/pathnames.h
index e68d91a1..915db67a 100644
--- a/pppd/pathnames.h
+++ b/pppd/pathnames.h
@@ -64,11 +64,6 @@
 #define _PATH_IPV6DOWN   _ROOT_PATH "/etc/ppp/ipv6-down"
 #endif
 
-#ifdef IPX_CHANGE
-#define _PATH_IPXUP	 _ROOT_PATH "/etc/ppp/ipx-up"
-#define _PATH_IPXDOWN	 _ROOT_PATH "/etc/ppp/ipx-down"
-#endif /* IPX_CHANGE */
-
 #ifdef __STDC__
 #define _PATH_PPPDB	_ROOT_PATH _PATH_VARRUN "pppd2.tdb"
 #else /* __STDC__ */
diff --git a/pppd/pppd.8 b/pppd/pppd.8
index 1f2b8598..60932c2f 100644
--- a/pppd/pppd.8
+++ b/pppd/pppd.8
@@ -572,70 +572,6 @@ Set the maximum number of IPv6CP terminate-request transmissions to
 Set the IPv6CP restart interval (retransmission timeout) to \fIn\fR
 seconds (default 3).
 .TP
-.B ipx
-Enable the IPXCP and IPX protocols.  This option is presently only
-supported under Linux, and only if your kernel has been configured to
-include IPX support.
-.TP
-.B ipx\-network \fIn
-Set the IPX network number in the IPXCP configure request frame to
-\fIn\fR, a hexadecimal number (without a leading 0x).  There is no
-valid default.  If this option is not specified, the network number is
-obtained from the peer.  If the peer does not have the network number,
-the IPX protocol will not be started.
-.TP
-.B ipx\-node \fIn\fB:\fIm
-Set the IPX node numbers. The two node numbers are separated from each
-other with a colon character. The first number \fIn\fR is the local
-node number. The second number \fIm\fR is the peer's node number. Each
-node number is a hexadecimal number, at most 10 digits long. The node
-numbers on the ipx\-network must be unique. There is no valid
-default. If this option is not specified then the node numbers are
-obtained from the peer.
-.TP
-.B ipx\-router\-name \fI<string>
-Set the name of the router. This is a string and is sent to the peer
-as information data.
-.TP
-.B ipx\-routing \fIn
-Set the routing protocol to be received by this option. More than one
-instance of \fIipx\-routing\fR may be specified. The '\fInone\fR'
-option (0) may be specified as the only instance of ipx\-routing. The
-values may be \fI0\fR for \fINONE\fR, \fI2\fR for \fIRIP/SAP\fR, and
-\fI4\fR for \fINLSP\fR.
-.TP
-.B ipxcp\-accept\-local
-Accept the peer's NAK for the node number specified in the ipx\-node
-option. If a node number was specified, and non-zero, the default is
-to insist that the value be used. If you include this option then you
-will permit the peer to override the entry of the node number.
-.TP
-.B ipxcp\-accept\-network
-Accept the peer's NAK for the network number specified in the
-ipx\-network option. If a network number was specified, and non-zero, the
-default is to insist that the value be used. If you include this
-option then you will permit the peer to override the entry of the node
-number.
-.TP
-.B ipxcp\-accept\-remote
-Use the peer's network number specified in the configure request
-frame. If a node number was specified for the peer and this option was
-not specified, the peer will be forced to use the value which you have
-specified.
-.TP
-.B ipxcp\-max\-configure \fIn
-Set the maximum number of IPXCP configure request frames which the
-system will send to \fIn\fR. The default is 10.
-.TP
-.B ipxcp\-max\-failure \fIn
-Set the maximum number of IPXCP NAK frames which the local system will
-send before it rejects the options. The default value is 3.
-.TP
-.B ipxcp\-max\-terminate \fIn
-Set the maximum number of IPXCP terminate request frames before the
-local system considers that the peer is not listening to them. The
-default value is 3.
-.TP
 .B kdebug \fIn
 Enable debugging code in the kernel-level PPP driver.  The argument
 values depend on the specific kernel driver, but in general a value of
@@ -894,11 +830,6 @@ hostname.  With this option, the peer will have to supply the local IP
 address during IPCP negotiation (unless it specified explicitly on the
 command line or in an options file).
 .TP
-.B noipx
-Disable the IPXCP and IPX protocols.  This option should only be
-required if the peer is buggy and gets confused by requests from pppd
-for IPXCP negotiation.
-.TP
 .B noktune
 Opposite of the \fIktune\fR option; disables pppd from changing system
 settings.
@@ -1937,34 +1868,6 @@ Similar to /etc/ppp/ip\-down, but it is executed when IPv6 packets can no
 longer be transmitted on the link. It is executed with the same parameters 
 as the ipv6\-up script.
 .TP
-.B /etc/ppp/ipx\-up
-A program or script which is executed when the link is available for
-sending and receiving IPX packets (that is, IPXCP has come up).  It is
-executed with the parameters
-.IP
-\fIinterface\-name tty\-device speed network\-number local\-IPX\-node\-address
-remote\-IPX\-node\-address local\-IPX\-routing\-protocol remote\-IPX\-routing\-protocol
-local\-IPX\-router\-name remote\-IPX\-router\-name ipparam pppd\-pid\fR 
-.IP
-The local\-IPX\-routing\-protocol and remote\-IPX\-routing\-protocol field
-may be one of the following:
-.IP
-NONE      to indicate that there is no routing protocol
-.br
-RIP       to indicate that RIP/SAP should be used
-.br
-NLSP      to indicate that Novell NLSP should be used
-.br
-RIP NLSP  to indicate that both RIP/SAP and NLSP should be used
-.TP
-.B /etc/ppp/ipx\-down
-A program or script which is executed when the link is no longer
-available for sending and receiving IPX packets.  This script can be
-used for undoing the effects of the /etc/ppp/ipx\-up script.  It is
-invoked in the same manner and with the same parameters as the ipx\-up
-script.
-.SH FILES
-.TP
 .B /var/run/ppp\fIn\fB.pid \fR(BSD or Linux), \fB/etc/ppp/ppp\fIn\fB.pid \fR(others)
 Process-ID for pppd process on ppp interface unit \fIn\fR.
 .TP
diff --git a/pppd/pppd.h b/pppd/pppd.h
index a7de3840..e54a526e 100644
--- a/pppd/pppd.h
+++ b/pppd/pppd.h
@@ -727,10 +727,6 @@ int  have_route_to(u_int32_t); /* Check if route to addr exists */
 int  set_filters(struct bpf_program *pass, struct bpf_program *active);
 				/* Set filter programs in kernel */
 #endif
-#ifdef IPX_CHANGE
-int  sipxfaddr(int, unsigned long, unsigned char *);
-int  cipxfaddr(int);
-#endif
 int  get_if_hwaddr(u_char *addr, char *name);
 int  get_first_ether_hwaddr(u_char *addr);
 int get_time(struct timeval *);
@@ -953,12 +949,6 @@ extern void (*snoop_send_hook)(unsigned char *p, int len);
 #define CHAPDEBUG(x)
 #endif
 
-#ifdef DEBUGIPXCP
-#define IPXCPDEBUG(x)	if (debug) dbglog x
-#else
-#define IPXCPDEBUG(x)
-#endif
-
 #ifndef SIGTYPE
 #if defined(sun) || defined(SYSV) || defined(POSIX_SOURCE)
 #define SIGTYPE void
diff --git a/pppd/sys-linux.c b/pppd/sys-linux.c
index 7718151c..0ffc4277 100644
--- a/pppd/sys-linux.c
+++ b/pppd/sys-linux.c
@@ -156,16 +156,6 @@
 #include "fsm.h"
 #include "ipcp.h"
 
-#ifdef IPX_CHANGE
-#include "ipxcp.h"
-#if __GLIBC__ >= 2 && \
-    !(defined(__powerpc__) && __GLIBC__ == 2 && __GLIBC_MINOR__ == 0)
-#include <netipx/ipx.h>
-#else
-#include <linux/ipx.h>
-#endif
-#endif /* IPX_CHANGE */
-
 #ifdef PPP_FILTER
 #include <pcap-bpf.h>
 #include <linux/filter.h>
@@ -3139,7 +3129,7 @@ int cifaddr (int unit, u_int32_t our_adr, u_int32_t his_adr)
 	}
     }
 
-    /* This way it is possible to have an IPX-only or IPv6-only interface */
+    /* This way it is possible to have an IPv6-only interface */
     memset(&ifr, 0, sizeof(ifr));
     SET_SA_FAMILY(ifr.ifr_addr, AF_INET);
     strlcpy(ifr.ifr_name, ifname, sizeof(ifr.ifr_name));
@@ -3570,99 +3560,6 @@ sifnpmode(int u, int proto, enum NPmode mode)
     return 1;
 }
 
-
-/********************************************************************
- *
- * sipxfaddr - Config the interface IPX networknumber
- */
-
-int sipxfaddr (int unit, unsigned long int network, unsigned char * node )
-{
-    int    result = 1;
-
-#ifdef IPX_CHANGE
-    int    skfd;
-    struct ifreq         ifr;
-    struct sockaddr_ipx *sipx = (struct sockaddr_ipx *) &ifr.ifr_addr;
-
-    skfd = socket (AF_IPX, SOCK_DGRAM, 0);
-    if (skfd < 0) {
-	if (! ok_error (errno))
-	    dbglog("socket(AF_IPX): %m (line %d)", __LINE__);
-	result = 0;
-    }
-    else {
-	memset (&ifr, '\0', sizeof (ifr));
-	strlcpy (ifr.ifr_name, ifname, sizeof(ifr.ifr_name));
-
-	memcpy (sipx->sipx_node, node, IPX_NODE_LEN);
-	sipx->sipx_family  = AF_IPX;
-	sipx->sipx_port    = 0;
-	sipx->sipx_network = htonl (network);
-	sipx->sipx_type    = IPX_FRAME_ETHERII;
-	sipx->sipx_action  = IPX_CRTITF;
-/*
- *  Set the IPX device
- */
-	if (ioctl(skfd, SIOCSIFADDR, (caddr_t) &ifr) < 0) {
-	    result = 0;
-	    if (errno != EEXIST) {
-		if (! ok_error (errno))
-		    dbglog("ioctl(SIOCSIFADDR, CRTITF): %m (line %d)", __LINE__);
-	    }
-	    else {
-		warn("ioctl(SIOCSIFADDR, CRTITF): Address already exists");
-	    }
-	}
-	close (skfd);
-    }
-#endif
-    return result;
-}
-
-/********************************************************************
- *
- * cipxfaddr - Clear the information for the IPX network. The IPX routes
- *	       are removed and the device is no longer able to pass IPX
- *	       frames.
- */
-
-int cipxfaddr (int unit)
-{
-    int    result = 1;
-
-#ifdef IPX_CHANGE
-    int    skfd;
-    struct ifreq         ifr;
-    struct sockaddr_ipx *sipx = (struct sockaddr_ipx *) &ifr.ifr_addr;
-
-    skfd = socket (AF_IPX, SOCK_DGRAM, 0);
-    if (skfd < 0) {
-	if (! ok_error (errno))
-	    dbglog("socket(AF_IPX): %m (line %d)", __LINE__);
-	result = 0;
-    }
-    else {
-	memset (&ifr, '\0', sizeof (ifr));
-	strlcpy (ifr.ifr_name, ifname, sizeof(ifr.ifr_name));
-
-	sipx->sipx_type    = IPX_FRAME_ETHERII;
-	sipx->sipx_action  = IPX_DLTITF;
-	sipx->sipx_family  = AF_IPX;
-/*
- *  Set the IPX device
- */
-	if (ioctl(skfd, SIOCSIFADDR, (caddr_t) &ifr) < 0) {
-	    if (! ok_error (errno))
-		info("ioctl(SIOCSIFADDR, IPX_DLTITF): %m (line %d)", __LINE__);
-	    result = 0;
-	}
-	close (skfd);
-    }
-#endif
-    return result;
-}
-
 /*
  * Use the hostname as part of the random number seed.
  */
@@ -3686,22 +3583,6 @@ get_host_seed(void)
 int
 sys_check_options(void)
 {
-#ifdef IPX_CHANGE
-/*
- * Disable the IPX protocol if the support is not present in the kernel.
- */
-    char *path;
-
-    if (ipxcp_protent.enabled_flag) {
-	struct stat stat_buf;
-	if (  ((path = path_to_procfs("/net/ipx/interface")) == NULL
-	    && (path = path_to_procfs("/net/ipx_interface")) == NULL)
-	    || lstat(path, &stat_buf) < 0) {
-	    error("IPX support is not present in the kernel\n");
-	    ipxcp_protent.enabled_flag = 0;
-	}
-    }
-#endif
     if (demand && driver_is_old) {
 	option_error("demand dialling is not supported by kernel driver "
 		     "version %d.%d.%d", driver_version, driver_modification,
 # ---<End of File>---
diff --git a/pppd/Makefile.linux b/pppd/Makefile.linux
index 22837c5..8ddfedd 100644
--- a/pppd/Makefile.linux
+++ b/pppd/Makefile.linux
@@ -16,16 +16,16 @@ INCDIR = $(DESTDIR)/include
 TARGETS = pppd
 
 PPPDSRCS = main.c magic.c fsm.c lcp.c ipcp.c upap.c chap-new.c md5.c ccp.c \
-	   ecp.c ipxcp.c auth.c options.c sys-linux.c md4.c chap_ms.c \
+	   ecp.c auth.c options.c sys-linux.c md4.c chap_ms.c \
 	   demand.c utils.c tty.c eap.c chap-md5.c session.c
 
 HEADERS = ccp.h session.h chap-new.h ecp.h fsm.h ipcp.h \
-	ipxcp.h lcp.h magic.h md5.h patchlevel.h pathnames.h pppd.h \
+	lcp.h magic.h md5.h patchlevel.h pathnames.h pppd.h \
 	upap.h eap.h
 
 MANPAGES = pppd.8
 PPPDOBJS = main.o magic.o fsm.o lcp.o ipcp.o upap.o chap-new.o md5.o ccp.o \
-	   ecp.o auth.o options.o demand.o utils.o sys-linux.o ipxcp.o tty.o \
+	   ecp.o auth.o options.o demand.o utils.o sys-linux.o tty.o \
 	   eap.o chap-md5.o session.o
 
 #
