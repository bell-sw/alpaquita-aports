# Description: Python is a clear and powerful object-oriented programming
# language, comparable to Perl, Ruby, Scheme, or Java.

pkgname=python3
# the python3-tkinter's pkgver needs to be synchronized with this.
pkgver=3.12.5
_basever="${pkgver%.*}"
pkgrel=1
pkgdesc="Python programming language"
url="https://www.python.org/"
arch="all"
license="PSF-2.0"
# pyc0 comes last because the files are named without a unique substring
subpackages="
	$pkgname-dbg
	$pkgname-dev
	$pkgname-doc
	$pkgname-tests::noarch
	$pkgname-pyc:_default_pyc
	$pkgname-pycache-pyc2
	$pkgname-pycache-pyc1
	$pkgname-pycache-pyc0
	$pkgname-gdbm
	pyc:_pyc_meta:noarch
	"
depends="libssl3>=3.3.0"
makedepends="
	!gettext-dev
	bluez-headers
	bzip2-dev
	expat-dev
	gdbm-dev
	libffi-dev
	linux-headers
	mpdecimal-dev
	musl:musl-libintl
	ncurses-dev
	openssl-dev
	readline-dev
	sqlite-dev
	tcl-dev
	xz-dev
	zlib-dev
	"
source="https://www.python.org/ftp/python/$pkgver/Python-$pkgver.tar.xz
	externally-managed
	musl:musl-find_library.patch
	musl:test_posix-nodev-disable.patch
	fix-run_fileexflags-test.patch
	CVE-2024-8088.patch

	0100-test_urllib-skip-test_url_host_with_-test-cases.patch
	0101-Unset-BASH_XTRACEFD-in-tests.patch
	0102-CVE-2023-27043.patch
	"
options="net" # Required for tests
builddir="$srcdir/Python-$pkgver"

# secfixes:
#   3.12.5-r1:
#     - CVE-2024-8088
#   3.11.7-r2:
#     - CVE-2023-27043
#   3.11.5-r0:
#     - CVE-2023-40217
#   3.11.1-r0:
#     - CVE-2022-45061
#   3.10.5-r0:
#     - CVE-2015-20107
#   3.9.5-r0:
#     - CVE-2021-29921
#   3.9.4-r0:
#     - CVE-2021-3426
#   3.8.8-r0:
#     - CVE-2021-23336
#   3.8.7-r2:
#     - CVE-2021-3177
#   3.8.5-r0:
#     - CVE-2019-20907
#   3.8.4-r0:
#     - CVE-2020-14422
#   3.8.2-r0:
#     - CVE-2020-8315
#     - CVE-2020-8492
#   3.7.5-r0:
#     - CVE-2019-16056
#     - CVE-2019-16935
#   3.6.8-r1:
#     - CVE-2019-5010

# was briefly present, and is in 3.16
provides="pythonispython3=$pkgver-r$pkgrel"

prepare() {
	default_prepare

	# force system libs
	rm -r Modules/expat
}

build() {
	# set thread stack size to 2MB so we don't segfault before we hit
	# sys.getrecursionlimit()
	# note: raised from 1 as we ran into some stack limit on x86_64 too
	# sometimes, but not recursion
	local stacksize=0x200000
	local bootstrap_configure=

	# -Os overwrites --enable-optimizations
	export CFLAGS_NODIST="${CFLAGS/-Os/} -DTHREAD_STACK_SIZE=$stacksize"
	export CPPFLAGS_NODIST="${CPPFLAGS/-Os/}"
	export CXXFLAGS_NODIST="${CXXFLAGS/-Os/}"
	export LDFLAGS_NODIST=''

	# we set them via NODIST to not propagate them and duplicate them to modules
	unset LDFLAGS CFLAGS CXXFLAGS CPPFLAGS

	# In case of bootstrapping, we may use glibc that's cross-compiled and
	# therefore doesn't provide any locales.  Lack of locales causes a
	# segfault during readline initialization.
	[ -n "$BOOTSTRAP" ] && [ "$CLIBC" = 'glibc' ] \
		&& bootstrap_configure="--without-readline"

	./configure \
		--build=$CBUILD \
		--host=$CHOST \
		$bootstrap_configure \
		--prefix=/usr \
		--enable-ipv6 \
		--enable-loadable-sqlite-extensions \
		--enable-optimizations \
		--enable-shared \
		--with-lto \
		--with-pymalloc \
		--with-computed-gotos \
		--with-dbmliborder=gdbm:ndbm \
		--with-system-expat \
		--with-system-libmpdec \
		--without-ensurepip

	make
}

check() {
	# test that we reach recursionlimit before we segfault
	cat > test-stacksize.py <<-EOF
	import threading
	import sys

	def fun(i):
	  try:
	    fun(i+1)
	  except:
	    sys.exit(0)

	t = threading.Thread(target=fun, args=[1])
	t.start()
EOF
	LD_LIBRARY_PATH=$PWD ./python test-stacksize.py

	local fail

	case "$CLIBC" in
	musl)
		# musl related
		fail="test__locale"					# various musl locale deficiencies
		fail="$fail test_locale"
		fail="$fail test_re"
		fail="$fail test_c_locale_coercion"
		fail="$fail test_datetime"				# hangs if 'tzdata' installed
		fail="$fail test_os"					# fpathconf, ttyname errno values
		;;
	glibc)
		# glibc related
		fail="$fail test_curses"				# OverflowError: mktime argument out of range
		fail="$fail test_email"					# _curses.error: inswstr() returned ERR
		;;
	esac

	# FIXME: failures needing investigation
	fail="$fail test_ctypes"				# fail on aarch64 (ctypes.test.test_win32.Structures)
	fail="$fail test_httplib"				# sporadically fails with ssl.SSLError

	# kernel related
	fail="$fail test_fcntl"					# wants DNOTIFY, we don't have it

	# test_clock_settime returns Function not implemented instead of the
	# expected permission error in docker (CI). Disable for now.
	#
	# test_threading, test_asyncio hang on aarch64, investigation is needed
	case "$CARCH" in
		ppc64le) fail="$fail test_time";;
		aarch64) fail="$fail test_threading test_asyncio";;
	esac

	make quicktest TESTOPTS="-j${JOBS:-$(nproc)} --exclude $fail"
}

package() {
	make -j1 DESTDIR="$pkgdir" EXTRA_CFLAGS="$CFLAGS" install maninstall
	install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE

	install -Dm644 "$srcdir"/externally-managed \
		"$pkgdir"/usr/lib/python$_basever/EXTERNALLY-MANAGED

	# those are provided by python3-tkinter
	rm -r "$pkgdir"/usr/bin/idle* "$pkgdir"/usr/lib/python*/idlelib \
		"$pkgdir"/usr/lib/python*/tkinter

	ln -s python3 "$pkgdir"/usr/bin/python
	ln -s python3-config "$pkgdir"/usr/bin/python-config
}

dev() {
	default_dev

	# pyconfig.h is needed runtime so we move it back
	mkdir -p "$pkgdir"/usr/include/python$_basever
	mv "$subpkgdir"/usr/include/python$_basever/pyconfig.h \
		"$pkgdir"/usr/include/python$_basever/
}

tests() {
	pkgdesc="The test modules from the main python package"

	amove usr/lib/python$_basever/test
}

gdbm() {
	pkgdesc="Python backend for GNU gdbm"

	amove usr/lib/python3*/lib-dynload/_gdbm.cpython*
}

_pyc_meta() {
	pkgdesc="Meta package for pulling in all -pyc packages"
	depends=""
	mkdir -p "$subpkgdir"
}

# python3-pyc, to install pyc by default
_default_pyc() {
	pkgdesc="$pkgdesc (install .pyc cache files)"
	install_if="$pkgname=$pkgver-r$pkgrel"
	depends="
		$pkgname-pycache-pyc0=$pkgver-r$pkgrel
		pyc
		"

	mkdir -p "$subpkgdir"
}

pyc0() {
	pkgdesc="$pkgdesc (.pyc pycache files)"

	cd "$pkgdir"
	amove $(find usr/lib/python3* -name "*.pyc")
}

pyc1() {
	pkgdesc="$pkgdesc (.opt-1.pyc pycache files)"

	cd "$pkgdir"
	amove $(find usr/lib/python3* -name "*.opt-1.pyc")
}

pyc2() {
	pkgdesc="$pkgdesc (.opt-2.pyc pycache files)"

	cd "$pkgdir"
	amove $(find usr/lib/python3* -name "*.opt-2.pyc")
}

sha512sums="
7a1c30d798434fe24697bc253f6010d75145e7650f66803328425c8525331b9fa6b63d12a652687582db205f8d4c8279c8f73c338168592481517b063351c921  Python-3.12.5.tar.xz
46dd8230ee2ab66e9c4157c10b2bd9c414fd7f30be0bee73e21a9eea88f63fff362d47828e0fc77ddc59df097b414b21505f8b5f98bc866381115c58ae3f4862  externally-managed
ab8eaa2858d5109049b1f9f553198d40e0ef8d78211ad6455f7b491af525bffb16738fed60fc84e960c4889568d25753b9e4a1494834fea48291b33f07000ec2  musl-find_library.patch
606cf7b3df0c81c90571c6bc65e4f07e065867739fa0d36e9c8e1ad2d6bcd64d265f90c4a7881880fc7e0c85eed94d1f72655a5c70d92ca63e5cc4bd3be8f145  test_posix-nodev-disable.patch
0e1155b1976be46d68fe50161b9644ac272d95c51f44ada51a0fd67a0154df89833752e97cfc85e977b384fca82b58907c30405a103f3a33a1483b9f76ce632f  fix-run_fileexflags-test.patch
60a3482b219154312d1ae929ba2b409627c9b08a387e0d7ed4c73e0ff97640a2b8a50eb9d347fb8dda136b7764617464826d14a988af789a1f032ed0badcdaf5  CVE-2024-8088.patch
942f13ecef2efa251b948b5ad4a58cb9b7237e399a05b184ddbfad62419d60f2f810478097d2fb58997543540c55035469b3df394ff0cb87c99da11007454d2e  0100-test_urllib-skip-test_url_host_with_-test-cases.patch
77d3a4cfe57f9ca8cfae748f9164a8977b7c6af4d6de06d2593945716b9c71a7cdc5e4425b4019c8c2c5730bf84f1c207d2d2e8efae8afe9d782920c2275f220  0101-Unset-BASH_XTRACEFD-in-tests.patch
fc767cd3a8a2c7d3658e4f6446849715846f11f02940641a36e2239e0439aab7af04657a88cc2314a051b1e730266496a5b97d317ea4de69ce7d4eda3d55cac7  0102-CVE-2023-27043.patch
"
