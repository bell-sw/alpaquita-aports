From 3f262324f6277b2306da2db8f60c8e152cc2016c Mon Sep 17 00:00:00 2001
From: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
Date: Mon, 16 May 2022 12:27:52 +0300
Subject: [PATCH] apk-search: sorted output

Changes in '-o|--origin' option: it now prints additional information
with the name of the base package in curly braces (similar to apk list):

Before the patch, '-o' replaces matching packages with the base name:

    $ apk search -o dracut
    dracut-055-r17
    dracut-055-r17
    zfs-2.1.2-r0
    dracut-055-r17

After the patch, base name printed in curly braces:

    $ apk search -o dracut
    dracut-055-r17 {dracut}
    dracut-bash-completion-055-r17 {dracut}
    dracut-doc-055-r17 {dracut}
    zfs-dracut-2.1.2-r0 {zfs}

Changes in reverse '-r|--rdepends' option:

* sorting is performed not only for packages, but also for reverse
  dependencies

* fixed duplicated entries

* added indent when printing reverse dependencies if '-q|--quiet' is not
  given

Before the patch:

    $ apk search -r dracut
    dracut-055-r17 is required by:
    syslinux-6.04_pre2_git20190206-r300
    grub-2.06-r302
    linux-lts-5.10.111-r0
    linux-lts-debug-extra-modules-5.10.111-r0
    linux-lts-debug-5.10.111-r0
    linux-lts-extra-modules-5.10.111-r0
    grub-xenhost-2.06-r302
    dracut-doc-055-r17 is required by:
    dracut-055-r17 is required by:
    dracut-055-r17 is required by:
    zfs-dracut-2.1.2-r0 is required by:
    dracut-055-r17 is required by:
    dracut-bash-completion-055-r17 is required by:

After the patch:

    $ apk search -r dracut
    dracut-055-r17 is required by:
      grub-2.06-r302
      grub-xenhost-2.06-r302
      linux-lts-5.10.111-r0
      linux-lts-debug-5.10.111-r0
      linux-lts-debug-extra-modules-5.10.111-r0
      linux-lts-extra-modules-5.10.111-r0
      syslinux-6.04_pre2_git20190206-r300
    dracut-bash-completion-055-r17 is required by:
    dracut-doc-055-r17 is required by:
    zfs-dracut-2.1.2-r0 is required by:
---
 src/app_search.c | 72 ++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 57 insertions(+), 15 deletions(-)

diff --git a/src/app_search.c b/src/app_search.c
index b02eb56..2d9b0cd 100644
--- a/src/app_search.c
+++ b/src/app_search.c
@@ -15,7 +15,7 @@
 #include "apk_database.h"
 
 struct search_ctx {
-	void (*print_result)(struct search_ctx *ctx, struct apk_package *pkg);
+	void (*process_result)(struct search_ctx *ctx, struct apk_package *pkg);
 	void (*print_package)(struct search_ctx *ctx, struct apk_package *pkg);
 
 	int show_all : 1;
@@ -26,42 +26,77 @@ struct search_ctx {
 	unsigned int matches;
 	struct apk_string_array *filter;
 	struct apk_package *prev_match;
+	struct apk_package_array *rdep_pkg_array;
 };
 
-static void print_package_name(struct search_ctx *ctx, struct apk_package *pkg)
+static void print_package_name_common(struct search_ctx *ctx, struct apk_package *pkg)
 {
 	printf("%s", pkg->name->name);
 	if (apk_verbosity > 0)
 		printf("-" BLOB_FMT, BLOB_PRINTF(*pkg->version));
 	if (apk_verbosity > 1)
 		printf(" - %s", pkg->description);
+}
+
+static void print_package_name(struct search_ctx *ctx, struct apk_package *pkg)
+{
+	print_package_name_common(ctx, pkg);
 	printf("\n");
 }
 
 static void print_origin_name(struct search_ctx *ctx, struct apk_package *pkg)
 {
+	print_package_name_common(ctx, pkg);
 	if (pkg->origin != NULL)
-		printf(BLOB_FMT, BLOB_PRINTF(*pkg->origin));
-	else
-		printf("%s", pkg->name->name);
-	if (apk_verbosity > 0)
-		printf("-" BLOB_FMT, BLOB_PRINTF(*pkg->version));
+		printf(" {"BLOB_FMT"}", BLOB_PRINTF(*pkg->origin));
 	printf("\n");
 }
 
-static void print_rdep_pkg(struct apk_package *pkg0, struct apk_dependency *dep0, struct apk_package *pkg, void *pctx)
+static void add_rdep_pkg(struct apk_package *pkg0, struct apk_dependency *dep0, struct apk_package *pkg, void *pctx)
 {
 	struct search_ctx *ctx = (struct search_ctx *) pctx;
-	ctx->print_package(ctx, pkg0);
+
+	*apk_package_array_add(&ctx->rdep_pkg_array) = pkg0;
+}
+
+static int cmp_package(const void *a, const void *b)
+{
+	const struct apk_package * const* pa = a, * const* pb = b;
+	return apk_pkg_cmp_display(*pa, *pb);
 }
 
-static void print_rdepends(struct search_ctx *ctx, struct apk_package *pkg)
+static void print_rdepends(struct search_ctx *ctx)
+{
+	struct apk_package **rdep_pkg, *prev_pkg = NULL;
+
+	qsort(ctx->rdep_pkg_array->item, ctx->rdep_pkg_array->num,
+	      sizeof ctx->rdep_pkg_array->item[0], cmp_package);
+
+	foreach_array_item(rdep_pkg, ctx->rdep_pkg_array) {
+		if (apk_verbosity > 0) printf("  ");
+		if (apk_verbosity <= 0 && prev_pkg != NULL
+		    && prev_pkg->name == (*rdep_pkg)->name)
+			continue;
+		ctx->print_package(ctx, *rdep_pkg);
+		prev_pkg = *rdep_pkg;
+	}
+}
+
+static void process_rdepends(struct search_ctx *ctx, struct apk_package *pkg)
 {
 	if (apk_verbosity > 0) {
 		ctx->matches = apk_foreach_genid() | APK_DEP_SATISFIES;
 		printf(PKG_VER_FMT " is required by:\n", PKG_VER_PRINTF(pkg));
+
+		apk_package_array_init(&ctx->rdep_pkg_array);
+	}
+
+	apk_pkg_foreach_reverse_dependency(pkg, ctx->matches, add_rdep_pkg, ctx);
+
+	if (apk_verbosity > 0) {
+		print_rdepends(ctx);
+		apk_package_array_free(&ctx->rdep_pkg_array);
 	}
-	apk_pkg_foreach_reverse_dependency(pkg, ctx->matches, print_rdep_pkg, ctx);
 }
 
 #define SEARCH_OPTIONS(OPT) \
@@ -93,7 +128,7 @@ static int option_parse_applet(void *ctx, struct apk_db_options *dbopts, int opt
 		ictx->print_package = print_origin_name;
 		break;
 	case OPT_SEARCH_rdepends:
-		ictx->print_result = print_rdepends;
+		ictx->process_result = process_rdepends;
 		break;
 	case OPT_SEARCH_has_origin:
 		ictx->search_origin = 1;
@@ -132,7 +167,7 @@ static void print_result_pkg(struct search_ctx *ctx, struct apk_package *pkg)
 		return;
 	}
 match:
-	ctx->print_result(ctx, pkg);
+	ctx->process_result(ctx, pkg);
 }
 
 static int print_result(struct apk_database *db, const char *match, struct apk_package *pkg, void *pctx)
@@ -169,8 +204,10 @@ static int search_main(void *pctx, struct apk_database *db, struct apk_string_ar
 	ctx->matches = apk_foreach_genid() | APK_DEP_SATISFIES;
 	if (ctx->print_package == NULL)
 		ctx->print_package = print_package_name;
-	if (ctx->print_result == NULL)
-		ctx->print_result = ctx->print_package;
+	if (ctx->process_result == NULL)
+		ctx->process_result = ctx->print_package;
+	if (ctx->process_result == process_rdepends && apk_verbosity <= 0)
+		apk_package_array_init(&ctx->rdep_pkg_array);
 
 	if (ctx->search_description || ctx->search_origin) {
 		// Just enumerate all names in sorted order, and do the
@@ -188,6 +225,11 @@ static int search_main(void *pctx, struct apk_database *db, struct apk_string_ar
 	apk_db_foreach_sorted_providers(db, args, print_result, ctx);
 	if (ctx->prev_match) print_result_pkg(ctx, ctx->prev_match);
 
+	if (ctx->process_result == process_rdepends && apk_verbosity <= 0) {
+		print_rdepends(ctx);
+		apk_package_array_free(&ctx->rdep_pkg_array);
+	}
+
 	return 0;
 }
 
-- 
2.43.0

