From d8a042db3c161fc9b0b5e18f4160d2d6285e8e42 Mon Sep 17 00:00:00 2001
From: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
Date: Wed, 15 Dec 2021 14:25:53 +0300
Subject: [PATCH] lua: Keep minimum size when shrinking a stack

Backport upstream commit 6298903e3521 ("Keep minimum size when shrinking a stack")
Fixes CVE-2020-15888
---
 com32/lua/src/ldo.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/com32/lua/src/ldo.c b/com32/lua/src/ldo.c
index e9dd5fa9..e5f862db 100644
--- a/com32/lua/src/ldo.c
+++ b/com32/lua/src/ldo.c
@@ -204,13 +204,12 @@ static int stackinuse (lua_State *L) {
 
 void luaD_shrinkstack (lua_State *L) {
   int inuse = stackinuse(L);
-  int goodsize = inuse + (inuse / 8) + 2*EXTRA_STACK;
+  int goodsize = inuse + BASIC_STACK_SIZE;
   if (goodsize > LUAI_MAXSTACK) goodsize = LUAI_MAXSTACK;
-  if (inuse > LUAI_MAXSTACK ||  /* handling stack overflow? */
-      goodsize >= L->stacksize)  /* would grow instead of shrink? */
-    condmovestack(L);  /* don't change stack (change only for debugging) */
-  else
+  if (inuse <= (LUAI_MAXSTACK - EXTRA_STACK) && goodsize < L->stacksize)
     luaD_reallocstack(L, goodsize);  /* shrink it */
+  else
+    condmovestack(L);  /* don't change stack (change only for debugging) */
 }
 
 
-- 
2.25.1

