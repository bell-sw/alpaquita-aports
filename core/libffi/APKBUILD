# Description: libffi package enables the creation of a bridge between
# interpreter and natively compiled code by means of using a calling convention.

pkgname=libffi
pkgver=3.4.4
pkgrel=0
pkgdesc="A Portable Foreign Function Interface Library"
url="https://sourceware.org/libffi/"
arch="all"
license="MIT"
depends_dev="linux-headers"
makedepends_build="texinfo automake autoconf libtool"
# on mips* ffitarget.h wants <asm/sgidefs.h>
makedepends_host="linux-headers"
checkdepends="dejagnu"
subpackages="$pkgname-dbg $pkgname-dev $pkgname-doc"
source="$pkgname-$pkgver.tar.gz::https://github.com/libffi/libffi/archive/refs/tags/v$pkgver.tar.gz"

[ "$CARCH" = "ppc64le" ] && options="$options !check" # test fails

prepare() {
	default_prepare
	update_config_sub
	./autogen.sh
}

build() {
	./configure \
		--build=$CBUILD \
		--host=$CHOST \
		--prefix=/usr \
		--enable-pax_emutramp \
		--enable-portable-binary \
		--disable-exec-static-tramp
	make
}

check() {
	make check
}

package() {
	make DESTDIR="$pkgdir" install
}

sha512sums="
e3b261a7900cec61225c768ebd443884465669e0904db3f523aaaeeed74b4c03dbe23d74ff8bb69554791a798e25894a5fcbe2b13b883d3ee38aeff4c1e16a49  libffi-3.4.4.tar.gz
"
