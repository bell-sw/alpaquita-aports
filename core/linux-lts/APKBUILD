_flavor=lts
pkgname=linux-${_flavor}
pkgver=6.1.44
pkgrel=0
_kernver=${pkgver%.*}
pkgdesc="$VENDOR_DISTRO_NAME Linux lts kernel"
url="https://www.kernel.org"
depends="dracut"
_depends_dev="perl gmp-dev elfutils-dev bash flex bison"
makedepends="$_depends_dev sed installkernel bc linux-headers openssl-dev
	diffutils findutils xz sbsigntool"
options="!strip !annobin"
_config=${config:-config-lts.${CARCH}}
source="https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/linux-$_kernver.tar.xz
	config-lts.x86_64
	config-lts-debug.x86_64
	extramods
	x509.genkey
	../shim/bellsoft-uefi-ca.pem

	0100-efi-Add-an-EFI_SECURE_BOOT-flag-to-indicate-secure-b.patch
	0101-efi-Lock-down-the-kernel-if-booted-in-secure-boot-mo.patch
	0102-mtd-phram-slram-Disable-when-the-kernel-is-locked-do.patch
	0103-arm64-add-kernel-config-option-to-lock-down-when-in-.patch
	0105-kallsyms-Reduce-the-memory-occupied-by-kallsyms_seqs.patch
	0106-kallsyms-Add-helper-kallsyms_on_each_match_symbol.patch
	0107-livepatch-Use-kallsyms_on_each_match_symbol-to-impro.patch
	0108-livepatch-Call-klp_match_callback-in-klp_find_callba.patch
	0109-kernel-params.c-defer-most-of-param_sysfs_init-to-la.patch
	0110-pci-pme-wakeups.patch
	0111-ksm-wakeups.patch
	0112-intel_idle-tweak-cpuidle-cstates.patch
	0113-smpboot-reuse-timer-calibration.patch
	0114-initialize-ata-before-graphics.patch
	0115-ata-libahci-ignore-staggered-spin-up.patch
	0116-net-skb-disable-a-single-page-frag-cache.patch
	"
subpackages="$pkgname-dev:_dev:$CBUILD_ARCH"
subpackages="$subpackages $pkgname-extra-modules:_extramods:$CBUILD_ARCH"

_flavors=
for _i in $source; do
	case $_i in
	config-*.$CARCH)
		_f=${_i%.$CARCH}
		_f=${_f#config-}
		_flavors="$_flavors ${_f}"

		[ "linux-$_f" = "$pkgname" ] && continue

		_fn="$(echo $_f | tr - _)"
		subpackages="$subpackages linux-${_f}:_${_fn}:$CBUILD_ARCH \
			linux-${_f}-dev:_dev:$CBUILD_ARCH \
			linux-${_f}-extra-modules:_extramods:$CBUILD_ARCH"
		;;
	esac
done

if [ "${pkgver%.0}" = "$pkgver" ]; then
	source="$source
	https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/patch-$pkgver.xz"
fi
arch="all"
license="GPL-2.0"

_carch=${CARCH}
case "$_carch" in
aarch64*) _carch="arm64" ;;
arm*) _carch="arm" ;;
mips*) _carch="mips" ;;
ppc*) _carch="powerpc" ;;
s390*) _carch="s390" ;;
esac

prepare_patches() {
	local _ret=0

	cd "$srcdir"/linux-$_kernver
	if [ "$_kernver" != "$pkgver" ]; then
		msg "Applying patch-$pkgver.xz"
		unxz -c < "$srcdir"/patch-$pkgver.xz | patch -p1 -N
	fi

	for i in $source; do
		case $i in
		*.patch)
			msg "Applying $i..."
			if ! patch -s -p1 -N -i "$srcdir"/$i; then
				error "Patch failed to apply"
				_ret=1
			fi
			;;
		esac
	done
	return $_ret
}

prepare_config()
{
	local _flavor=$i
	local _config=config-$_flavor.${CARCH}
	local _builddir="$srcdir"/build-$_flavor.$CARCH
	local _cfg_file="$_builddir"/.config

	mkdir -p "$_builddir"
	echo "-$pkgrel-$_flavor" > "$_builddir"/localversion-$VENDOR_DISTRO

	cp "$srcdir"/$_config "$_cfg_file"

	make -C "$srcdir"/linux-$_kernver \
		O="$_builddir" \
		ARCH="$_carch" \
		listnewconfig oldconfig

	mkdir -p "$_builddir"/certs
	cp "$srcdir"/x509.genkey "$_builddir"/certs/

	if [ "$KERNEL_SIGNKEY_X509" ]; then
		cp $KERNEL_SIGNKEY_X509 "$_builddir"/certs/bellsoft_signkey.pem
		scripts/config --file "$_cfg_file" --set-str system_trusted_keys "certs/bellsoft_signkey.pem"
		msg "Using trusted keys: '$KERNEL_SIGNKEY_X509'"
	fi

	if [ "$KERNEL_DEV_BUILD" ]; then
		# increase build speed for development kernels
		scripts/config --file "$_cfg_file" --disable x86_decoder_selftest
	fi
}

prepare() {
	prepare_patches

	for i in $_flavors; do
		prepare_config $i
	done
}

build() {
	unset LDFLAGS
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	for i in $_flavors; do
		cd "$srcdir"/build-$i.$CARCH
		make ARCH="$_carch" CC="${CC:-gcc}" \
			KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-$VENDOR_DISTRO_NAME"
	done
}

_move_extra_modules() {
	local _outdir="$1"
	local _abi_release="$2"
	local _buildflavor="$3"
	local _extra_path="${srcdir}/extra_modules_${_buildflavor}"
	local _mods_path="$_outdir/lib/modules/${_abi_release}/kernel"
	local _extramods="$(cat "$srcdir"/extramods)"
	local _dir_name _mod_path _m _c _src _dst
	local err=0

	for _m in $_extramods; do
		_c="${_m:0:1}"

		case "$_c" in
			#) continue;;
			-) _m="${_m:1}";;
		esac

		_dir_name="$(dirname $_m)"
		[ "${_m: -3}" = ".ko" ] && _m="$_m.xz"

		if [ "$_c" = "-" ]; then
			_src="$_extra_path/$_m"
			_dst="$_mods_path/$_dir_name"
		else
			_src="$_mods_path/$_m"
			_dst="$_extra_path/$_dir_name"
		fi

		mkdir -p "$_dst"
		mv -f "$_src" "$_dst"
	done
}

_package() {
	local _buildflavor="$1" _outdir="$2"
	local _abi_release=${pkgver}-${pkgrel}-${_buildflavor}
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	sign_list="boot/vmlinuz-${_abi_release}"
	sign_verify="bellsoft-uefi-ca.pem"

	cd "$srcdir"/build-$_buildflavor.$CARCH
	mkdir -p "$_outdir"/boot "$_outdir"/lib/modules

	local _install
	case "$CARCH" in
		arm*|aarch64) _install="zinstall dtbs_install";;
		*) _install=install;;
	esac

	make -j1 modules_install $_install \
		ARCH="$_carch" \
		INSTALL_MOD_PATH="$_outdir" \
		INSTALL_PATH="$_outdir"/boot \
		INSTALL_DTBS_PATH="$_outdir/boot/dtbs-$_buildflavor"

	_move_extra_modules $_outdir $_abi_release $_buildflavor

	rm -f "$_outdir"/lib/modules/${_abi_release}/build \
		"$_outdir"/lib/modules/${_abi_release}/source
	rm -rf "$_outdir"/lib/firmware

	install -D -m644 include/config/kernel.release \
		"$_outdir"/usr/share/kernel/$_buildflavor/kernel.release
}

package() {
	install="$pkgname.pre-upgrade $pkgname.post-deinstall $pkgname.post-install $pkgname.post-upgrade"
	_package lts "$pkgdir"

	msg "Checking modules dependencies"
	local _abi_release=${pkgver}-${pkgrel}-lts

	cd "$pkgdir"/lib/modules/${_abi_release}

	local _mods="$(find kernel -name *.ko.xz)"
	local _d _m _deps _failed=0

	for _m in $_mods; do
		_deps="$(grep "^$_m:" modules.dep | cut -f2 -d: | xargs)"
		for _d in $_deps; do
			if ! echo "$_mods" | grep -q "$_d"; then
				msg "moddep error: $_m -> $_d"
				_failed=1
			fi
		done
	done

	return $_failed
}

_lts_debug() {
	install="$subpkgname.post-deinstall $subpkgname.post-install $subpkgname.post-upgrade"
	_package lts-debug "$subpkgdir"
}

_extramods() {
	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-extra-modules$)//g')
	local _abi_release=${pkgver}-${pkgrel}-${_flavor}
	local _dir="$subpkgdir"/lib/modules/${_abi_release}/kernel

	depends="$depends linux-${_flavor}=$pkgver-r$pkgrel linux-firmware-extra-modules-any"
	pkgdesc="Additional modules for $VENDOR_DISTRO_NAME Linux $_flavor kernel"

	mkdir -p "$_dir"
	cp -r "$srcdir"/extra_modules_${_flavor}/* "$_dir"/
}

_dev() {
	pkgdesc="Headers and scripts for third-party modules for $VENDOR_DISTRO_NAME Linux $_flavor kernel"
	depends="$_depends_dev"

	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-dev$)//g')
	local _abi_release=${pkgver}-${pkgrel}-$_flavor
	local _dir="$subpkgdir"/usr/src/linux-headers-${_abi_release}

	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	mkdir -p "$_dir"

	cp "$srcdir"/config-$_flavor.${CARCH} "$_dir"/.config
	echo "-$pkgrel-$_flavor" > "$_dir"/localversion-$VENDOR_DISTRO

	make -j1 -C "$srcdir"/linux-$_kernver \
		O="$_dir" \
		ARCH="$_carch" \
		syncconfig prepare modules_prepare scripts

	# remove the stuff that points to real sources. we want 3rd party
	# modules to believe this is the sources
	rm "$_dir"/Makefile "$_dir"/source

	# copy the needed stuff from real sources
	#
	# this is taken from ubuntu kernel build script
	# http://kernel.ubuntu.com/git/ubuntu/ubuntu-zesty.git/tree/debian/rules.d/3-binary-indep.mk
	cd "$srcdir"/linux-$_kernver
	find .  -path './include/*' -prune \
		-o -path './scripts/*' -prune -o -type f \
		\( -name 'Makefile*' -o -name 'Kconfig*' -o -name 'Kbuild*' -o \
		   -name '*.sh' -o -name '*.pl' -o -name '*.lds' -o -name 'Platform' \) \
		-print | cpio -pdm "$_dir"

	cp -a scripts include "$_dir"

	find $(find arch -name include -type d -print) -type f \
		| cpio -pdm "$_dir"

	install -Dm644 "$srcdir"/build-$_flavor.$CARCH/Module.symvers \
		"$_dir"/Module.symvers

	mkdir -p "$subpkgdir"/lib/modules/${_abi_release}
	ln -sf /usr/src/linux-headers-${_abi_release} \
		"$subpkgdir"/lib/modules/${_abi_release}/build
}

sha512sums="
6ed2a73c2699d0810e54753715635736fc370288ad5ce95c594f2379959b0e418665cd71bc512a0273fe226fe90074d8b10d14c209080a6466498417a4fdda68  linux-6.1.tar.xz
39cef89847a81e572572da718d840f8333aa35a55218d573812bdc2000a9bd80b00dd5cbdc2227520a196abfbba8f9fc2fccfa4200e4d51da0c9a3cdb70454a4  patch-6.1.44.xz
d749ac89304be9759168824d8e768c94b58885638e6fef0b81577dc6bbb5536520d42e0e1c1b45d638a35fe55f9c41e8fd317f87d38a60b8afb95ed36f1c1b40  config-lts.x86_64
d179575a8f8abaf140420f164d828f2e86a367d1f421e596ceb5c3e354e9eedc0dc40eb42adf7254ade3ffe04b324c83fab5b9664379781cd88f80c63a8a46f4  config-lts-debug.x86_64
04b4bb43c1fc71136e335cedb9b2e8b69d3ac4f67a5112d267689d3faa37479df662a2310800fe642e6489c3c617442a264ca765b105df6c9db2328b78a59cb5  extramods
8ab1221f07d35b710da7e27d6e443ca303e03b69f29a21d2a8fef236a48e0b95b5521cd1e4adb1046d048a37a9d52989e5a5c55647da6f57f1ba7bb69230ce4f  x509.genkey
304d6a2d2c25af142b2cf2222079ebf59b8174f0825840dfc88e60016e5fcfe12973e0a250b4172ff7ea77cdb014cb5fec1a474965fee97478a6dcd0cbe6bdd3  bellsoft-uefi-ca.pem
add14619ed3cb4daddd586fe0bb432cb4a2f9ee79ca01c3d37bfa65ea0c830607a31a42e18e97120c330580749483d5b4b4508b69441ac068379654bb267015a  0100-efi-Add-an-EFI_SECURE_BOOT-flag-to-indicate-secure-b.patch
caf3449ae079cccd2ab675642a5133394c95673e46825ae18dc4b6ad969e8c5cab00497d973e1d2fabe48631256e9dee75a0eb17c15c507b530518f240d4c974  0101-efi-Lock-down-the-kernel-if-booted-in-secure-boot-mo.patch
a29fed7a7ae878fbb0f72aef44299dca118c73f3f7cd687b8d3e7a3d35b8b26c0c43895506ea3dee4b97ad03d24159476e50fb0847707ef5d8481737c6c78713  0102-mtd-phram-slram-Disable-when-the-kernel-is-locked-do.patch
38ccc1c5f39df1ae56215d011adbefec5a6bb642e2d42fb9050f48a3708cf1c09dcb714e538d28f213a47f791f1384c309b0912043c2721d652eddb91bb1b59c  0103-arm64-add-kernel-config-option-to-lock-down-when-in-.patch
2d0e14f4b083073e7f4ab788b67da29b4e6901c9fa55e2234b6e7666f3b06ef464b4537b6abfd2442a50a5bfafb47671dfc06455011358a66636589e84306158  0105-kallsyms-Reduce-the-memory-occupied-by-kallsyms_seqs.patch
8b8303d9023f622be2371f5ce22944e9090ea768f72280958839595d02d06f9596e0d18c0bbc7afb6286a87bcc88a3c5934aaec998ebe8c217e337e598336922  0106-kallsyms-Add-helper-kallsyms_on_each_match_symbol.patch
9469c4a15f713e1a09b60ffd7c8afe6aa8467e34d638d84108e2edc2fa68e8566ba0bb224a216193db27b4af184d679dec58cda7dd0625a535443824af849f38  0107-livepatch-Use-kallsyms_on_each_match_symbol-to-impro.patch
edd4af891cbd26e62273c68f1adf82d13abcfdd03dc977c85cccadd09dd749a6c580da7c8486e1fbd60cb611062147a918a825ccc9612e7f67574fb4b06e5eda  0108-livepatch-Call-klp_match_callback-in-klp_find_callba.patch
dc198be1500372ce683982d08c5a3aafc769dfe9558e8429f20b82cda5e62aef34253b5f6b7ccd7566367ae6e3d85a1e0db8be1db65f693ff52ed61bdc9c3031  0109-kernel-params.c-defer-most-of-param_sysfs_init-to-la.patch
58828819b385da5031097c20cecdf5f33bc49a2b80c054470653c023ab0d7e779aea5a7fe34c64c0bc5b16743b7c6fb8b7fdc73f126864989efde28698151c6f  0110-pci-pme-wakeups.patch
57c5f72324ae4526926de5ed7ecf5280f48d34a3290a6e29f999a87c75b99529b22bb91fbb1bfb8c7d03adf61ceb7a0c8442c6d8bebc6c99eebe1752a11249aa  0111-ksm-wakeups.patch
bfcc59f79a53a946e9b4eb2d026b277bbc3aaf03f8bd06a56100e014eaba0890175e16b470dd4ecfc7a5ee8f31b01230505ef9e1a49266a25e5e2b5c00a59927  0112-intel_idle-tweak-cpuidle-cstates.patch
7febde42580163c4f601eced7539b1fa909bb0e35efd3c1b95e9720ddde4de1cbd27977e47a460c14cb9d5c9e5ed6f517364c0844c6d13626073d2951aa7bd5c  0113-smpboot-reuse-timer-calibration.patch
708df84421804d5fe236bc8c6c4e2dde3e2ed1705a7a6738a5fa7a70659c32ac60e8c19fce1cc340f9deebe1a63a611c56a68d080f01a46b622ed3e12602e4e0  0114-initialize-ata-before-graphics.patch
66428cbb1c17fe96822527bef0b765756cd097e60e0512df0f6ef2dee4d5b6167624ff3c68c8dc8cc538e455f9d49b41d3e46605493ddf8c703e4910863c73e4  0115-ata-libahci-ignore-staggered-spin-up.patch
c8fc2cbb774a17c6830360f8a53b4ebf71fe369986eb8e550356ed8890e1b832d213c782572a3079c4453972e32bc95ac264a794409d81db4c48cec6ce2d4448  0116-net-skb-disable-a-single-page-frag-cache.patch
"
