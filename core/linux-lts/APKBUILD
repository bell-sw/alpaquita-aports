_flavor=lts
pkgname=linux-${_flavor}
pkgver=5.10.161
pkgrel=0
_kernver=${pkgver%.*}
pkgdesc="Alpaquita Linux lts kernel"
url="https://www.kernel.org"
depends="dracut"
_depends_dev="perl gmp-dev elfutils-dev bash flex bison"
makedepends="$_depends_dev sed installkernel bc linux-headers openssl-dev
	diffutils findutils xz sbsigntool"
options="!strip !annobin"
_config=${config:-config-lts.${CARCH}}
source="https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/linux-$_kernver.tar.xz
	config-lts.x86_64
	config-lts-debug.x86_64
	extramods
	x509.genkey

	0001-efi-add-an-efi_secure_boot-flag-to-indicate-secure-b.patch
	0002-efi-lock-down-the-kernel-if-booted-in-secure-boot-mo.patch
	0003-mtd-disable-slram-and-phram-when-locked-down.patch
	0004-arm64-add-kernel-config-option-to-lock-down-when.patch
	0005-KEYS-Make-use-of-platform-keyring-for-module-signatu.patch
	0006-kallsyms-Improve-the-performance-of-kallsyms_lookup_.patch
	0007-kallsyms-Reduce-the-memory-occupied-by-kallsyms_seqs.patch
	0008-kallsyms-Add-helper-kallsyms_on_each_match_symbol.patch
	0009-livepatch-Use-kallsyms_on_each_match_symbol-to-impro.patch
	0010-livepatch-Call-klp_match_callback-in-klp_find_callba.patch
	0011-kernel-params.c-defer-most-of-param_sysfs_init-to-la.patch
	0012-ntp-Make-the-RTC-synchronization-more-reliable.patch
	0013-ntp-Fix-RTC-synchronization-on-32-bit-platforms.patch
	0014-pci-pme-wakeups.patch
	0015-ksm-wakeups.patch
	0016-intel_idle-tweak-cpuidle-cstates.patch
	0017-smpboot-reuse-timer-calibration.patch
	0018-initialize-ata-before-graphics.patch
	0019-ata-libahci-ignore-staggered-spin-up.patch
	"
subpackages="$pkgname-dev:_dev:$CBUILD_ARCH"
subpackages="$subpackages $pkgname-extra-modules:_extramods:$CBUILD_ARCH"

_flavors=
for _i in $source; do
	case $_i in
	config-*.$CARCH)
		_f=${_i%.$CARCH}
		_f=${_f#config-}
		_flavors="$_flavors ${_f}"

		[ "linux-$_f" = "$pkgname" ] && continue

		_fn="$(echo $_f | tr - _)"
		subpackages="$subpackages linux-${_f}:_${_fn}:$CBUILD_ARCH \
			linux-${_f}-dev:_dev:$CBUILD_ARCH \
			linux-${_f}-extra-modules:_extramods:$CBUILD_ARCH"
		;;
	esac
done

if [ "${pkgver%.0}" = "$pkgver" ]; then
	source="$source
	https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/patch-$pkgver.xz"
fi
arch="all"
license="GPL-2.0"

_carch=${CARCH}
case "$_carch" in
aarch64*) _carch="arm64" ;;
arm*) _carch="arm" ;;
mips*) _carch="mips" ;;
ppc*) _carch="powerpc" ;;
s390*) _carch="s390" ;;
esac

prepare_patches() {
	local _ret=0

	cd "$srcdir"/linux-$_kernver
	if [ "$_kernver" != "$pkgver" ]; then
		msg "Applying patch-$pkgver.xz"
		unxz -c < "$srcdir"/patch-$pkgver.xz | patch -p1 -N
	fi

	for i in $source; do
		case $i in
		*.patch)
			msg "Applying $i..."
			if ! patch -s -p1 -N -i "$srcdir"/$i; then
				error "Patch failed to apply"
				_ret=1
			fi
			;;
		esac
	done
	return $_ret
}

prepare_config()
{
	local _flavor=$i
	local _config=config-$_flavor.${CARCH}
	local _builddir="$srcdir"/build-$_flavor.$CARCH
	local _cfg_file="$_builddir"/.config

	mkdir -p "$_builddir"
	echo "-$pkgrel-$_flavor" > "$_builddir"/localversion-alpaquita

	cp "$srcdir"/$_config "$_cfg_file"

	make -C "$srcdir"/linux-$_kernver \
		O="$_builddir" \
		ARCH="$_carch" \
		listnewconfig oldconfig

	mkdir -p "$_builddir"/certs
	cp "$srcdir"/x509.genkey "$_builddir"/certs/

	if [ "$KERNEL_SIGNKEY_X509" ]; then
		cp $KERNEL_SIGNKEY_X509 "$_builddir"/certs/bellsoft_signkey.pem
		scripts/config --file "$_cfg_file" --set-str system_trusted_keys "certs/bellsoft_signkey.pem"
		msg "Using trusted keys: '$KERNEL_SIGNKEY_X509'"
	fi

	if [ "$KERNEL_DEV_BUILD" ]; then
		# increase build speed for development kernels
		scripts/config --file "$_cfg_file" --disable x86_decoder_selftest
	fi
}

prepare() {
	prepare_patches

	for i in $_flavors; do
		prepare_config $i
	done
}

build() {
	unset LDFLAGS
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	for i in $_flavors; do
		cd "$srcdir"/build-$i.$CARCH
		make ARCH="$_carch" CC="${CC:-gcc}" \
			KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-Alpaquita"
	done
}

_move_extra_modules() {
	local _outdir="$1"
	local _abi_release="$2"
	local _buildflavor="$3"
	local _extra_path="${srcdir}/extra_modules_${_buildflavor}"
	local _mods_path="$_outdir/lib/modules/${_abi_release}/kernel"
	local _extramods="$(cat "$srcdir"/extramods)"
	local _dir_name _mod_path _m _c _src _dst

	for _m in $_extramods; do
		_c="${_m:0:1}"

		case "$_c" in
			#) continue;;
			-) _m="${_m:1}";;
		esac

		_dir_name="$(dirname $_m)"
		[ "${_m: -3}" = ".ko" ] && _m="$_m.xz"

		if [ "$_c" = "-" ]; then
			_src="$_extra_path/$_m"
			_dst="$_mods_path/$_dir_name"
		else
			_src="$_mods_path/$_m"
			_dst="$_extra_path/$_dir_name"
		fi

		mkdir -p "$_dst"
		mv -f "$_src" "$_dst"
	done
}

_package() {
	local _buildflavor="$1" _outdir="$2"
	local _abi_release=${pkgver}-${pkgrel}-${_buildflavor}
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	sign_list="boot/vmlinuz-${_abi_release}"

	cd "$srcdir"/build-$_buildflavor.$CARCH
	mkdir -p "$_outdir"/boot "$_outdir"/lib/modules

	local _install
	case "$CARCH" in
		arm*|aarch64) _install="zinstall dtbs_install";;
		*) _install=install;;
	esac

	make -j1 modules_install $_install \
		ARCH="$_carch" \
		INSTALL_MOD_PATH="$_outdir" \
		INSTALL_PATH="$_outdir"/boot \
		INSTALL_DTBS_PATH="$_outdir/boot/dtbs-$_buildflavor"

	_move_extra_modules $_outdir $_abi_release $_buildflavor

	rm -f "$_outdir"/lib/modules/${_abi_release}/build \
		"$_outdir"/lib/modules/${_abi_release}/source
	rm -rf "$_outdir"/lib/firmware

	install -D -m644 include/config/kernel.release \
		"$_outdir"/usr/share/kernel/$_buildflavor/kernel.release
}

package() {
	install="$pkgname.pre-upgrade $pkgname.post-deinstall $pkgname.post-install $pkgname.post-upgrade"
	_package lts "$pkgdir"

	msg "Checking modules dependencies"
	local _abi_release=${pkgver}-${pkgrel}-lts

	cd "$pkgdir"/lib/modules/${_abi_release}

	local _mods="$(find kernel -name *.ko.xz)"
	local _d _m _deps _failed=0

	for _m in $_mods; do
		_deps="$(grep "^$_m:" modules.dep | cut -f2 -d: | xargs)"
		for _d in $_deps; do
			if ! echo "$_mods" | grep -q "$_d"; then
				msg "moddep error: $_m -> $_d"
				_failed=1
			fi
		done
	done

	return $_failed
}

_lts_debug() {
	install="$subpkgname.post-deinstall $subpkgname.post-install $subpkgname.post-upgrade"
	_package lts-debug "$subpkgdir"
}

_extramods() {
	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-extra-modules$)//g')
	local _abi_release=${pkgver}-${pkgrel}-${_flavor}
	local _dir="$subpkgdir"/lib/modules/${_abi_release}/kernel

	depends="$depends linux-${_flavor} linux-firmware-extra-modules-any"
	pkgdesc="Additional modules for Alpaquita Linux $_flavor kernel"

	mkdir -p "$_dir"
	cp -r "$srcdir"/extra_modules_${_flavor}/* "$_dir"/
}

_dev() {
	pkgdesc="Headers and scripts for third-party modules for Alpaquita Linux $_flavor kernel"
	depends="$_depends_dev"

	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-dev$)//g')
	local _abi_release=${pkgver}-${pkgrel}-$_flavor
	local _dir="$subpkgdir"/usr/src/linux-headers-${_abi_release}

	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	mkdir -p "$_dir"

	cp "$srcdir"/config-$_flavor.${CARCH} "$_dir"/.config
	echo "-$pkgrel-$_flavor" > "$_dir"/localversion-alpaquita

	make -j1 -C "$srcdir"/linux-$_kernver \
		O="$_dir" \
		ARCH="$_carch" \
		syncconfig prepare modules_prepare scripts

	# remove the stuff that points to real sources. we want 3rd party
	# modules to believe this is the sources
	rm "$_dir"/Makefile "$_dir"/source

	# copy the needed stuff from real sources
	#
	# this is taken from ubuntu kernel build script
	# http://kernel.ubuntu.com/git/ubuntu/ubuntu-zesty.git/tree/debian/rules.d/3-binary-indep.mk
	cd "$srcdir"/linux-$_kernver
	find .  -path './include/*' -prune \
		-o -path './scripts/*' -prune -o -type f \
		\( -name 'Makefile*' -o -name 'Kconfig*' -o -name 'Kbuild*' -o \
		   -name '*.sh' -o -name '*.pl' -o -name '*.lds' -o -name 'Platform' \) \
		-print | cpio -pdm "$_dir"

	cp -a scripts include "$_dir"

	find $(find arch -name include -type d -print) -type f \
		| cpio -pdm "$_dir"

	install -Dm644 "$srcdir"/build-$_flavor.$CARCH/Module.symvers \
		"$_dir"/Module.symvers

	mkdir -p "$subpkgdir"/lib/modules/${_abi_release}
	ln -sf /usr/src/linux-headers-${_abi_release} \
		"$subpkgdir"/lib/modules/${_abi_release}/build
}

sha512sums="
95bc137d0cf9148da6a9d1f1a878698dc27b40f68e22c597544010a6c591ce1b256f083489d3ff45ff77753289b535135590194d88ef9f007d0ddab3d74de70e  linux-5.10.tar.xz
79d6a70c28246a22454cd5898bd3f35789373c05a746027a22336bfdac71b53b9611016f264cc08ecbb0e71eacc21d4abb55bf52ac26cbc8f86c42d472aa876d  patch-5.10.161.xz
21be1bc50fd002419bb882b08886544150b2d4aeefafde58eadbe2a8b90c9681078285e37d72407e36545c9e026a9f7452aea8e2f2dbc794b164df170251df0e  config-lts.x86_64
903c8a078a177d2377ceed53bebe72a4f55536e6b920eca4d4855af1df5f9f290147469cd629cb35dbb1f80d4386c2f9ff4a7d105aa4e52a5f5711eeaa8b5b97  config-lts-debug.x86_64
c981febc0ede922c83f72d2b0df43fc379ce416432b0307eb9a137e07fd1601b56c555182969d1a9eb2aedb0bdf33c1f68d2a83f481cdd4edea7b2722d47b281  extramods
8ab1221f07d35b710da7e27d6e443ca303e03b69f29a21d2a8fef236a48e0b95b5521cd1e4adb1046d048a37a9d52989e5a5c55647da6f57f1ba7bb69230ce4f  x509.genkey
a013c63b95d23d0de3be9ea15442b2c932fd91b58671a16fa5324965cdc45d0df79113c5f66a1e87dff2502a9b1feb304d192e02fcbbb308278ab634a41daa00  0001-efi-add-an-efi_secure_boot-flag-to-indicate-secure-b.patch
528d440ce67ee4ab17f8ba831ac31d86f58097004adfd30494640cff88db87a257413181e34dfdf6b35a4af9abdbdef1bb55384097c76499f3b3da8cfb462d94  0002-efi-lock-down-the-kernel-if-booted-in-secure-boot-mo.patch
b719b82c12aefded1922b20c5cc76b284ad34ba90206c80991e69d52a930d5e687cfff45ef9038d5b6de9ec46a69d0e3b62fcba93591b2d75fb19cc84c41db29  0003-mtd-disable-slram-and-phram-when-locked-down.patch
8a7cbed6f445e2e00486440668d573c8737bde502d4c7e2bd8c57a978c7ea1bc6ee1f1dcbabaac0123a9e2705aa6a802d11f227e9a0ee744c91ae2075b4fe99f  0004-arm64-add-kernel-config-option-to-lock-down-when.patch
b1c73dcb13aa100bac25bc73e9bf740c902fcf1157eb8a3dabd7169921f96bb18121c82e2f569d1623366ef9f296628c53ad80e3f89c03df8fa9b934c4ba6c85  0005-KEYS-Make-use-of-platform-keyring-for-module-signatu.patch
b9f530f50af9111c3efaedca374bee33296d02db686b8129ed8df841dd68121c8e5a369fac243e3606d0f4a659f02da5f3a180e7ba72de80ec9775d93c2501d4  0006-kallsyms-Improve-the-performance-of-kallsyms_lookup_.patch
f61935a98f489e86a78e05ee7a853a843e7fe7977e7e4a517567b300e7c613f9b4edbc33e841312b43a3bfed4e6220486a3be1bcc225100ded89307d98dfc1e9  0007-kallsyms-Reduce-the-memory-occupied-by-kallsyms_seqs.patch
481d6a96052ffb1a8a26bc436f4cf93fea4e1fa5e6373d09746e4b7d244a15a01246668dca90067a3b87b80d2e166e803e97a22ef354e0ddaa5722ab24c731e3  0008-kallsyms-Add-helper-kallsyms_on_each_match_symbol.patch
3cd716d3c5e927ba176ce9f469d7f2ab86f6966d02dd188e6ab2b5c13c9c7cf10aa7df5d43fcc8ee622ff92d71c78eb2c40ab6de311cca797f339eb97edc6db4  0009-livepatch-Use-kallsyms_on_each_match_symbol-to-impro.patch
c0d86ee7eb105cf67cb77959cc44a1a2099e52cda9cff750a93f26ef6ff83340b8a25ce6417643bfeab72d6d4c2d25c4d9f65fe4a4eefdfdaed90c8cb371c974  0010-livepatch-Call-klp_match_callback-in-klp_find_callba.patch
f61962a5475142c5da9ac5df7180138073a48bc6fb0deb6da72a94e375a44fc3d9be8b29a6756c46aa0d30f1083da71b4568d82d4cbf12a9d27ca1916f28af5d  0011-kernel-params.c-defer-most-of-param_sysfs_init-to-la.patch
80a0375a4ebd6ddc6931370b7fcbbf72df096d2ba7d8bddb602a08542c805b6fd0d54049de9dbc0562e18b05812699dc530d7be7aa880db35caf32394a9069dc  0012-ntp-Make-the-RTC-synchronization-more-reliable.patch
aaf26b0ccb28a3680e9901e8394eb89ef271b67d2bbf83df923aa4a7d44c3508cb042169b32471d8c3a2d2a2d73db7d1d5ba040a8516f0ae66a5b598ffc879e1  0013-ntp-Fix-RTC-synchronization-on-32-bit-platforms.patch
bcadfbfd9a039df353d10dd820e927bbeb74ebc7d4664bf49f17d6f5410021e3cf20be866539c28a0f902860e1fe83c33d608eabb7385b0d98a248a8ddb46412  0014-pci-pme-wakeups.patch
e18bc9da8fdd674e7fcd6c829ce7855101dd4742e04e8d58a480bff51d8de6597550ee9385cd963e7404329342538303bb0011efea47081f80885dfd647fe083  0015-ksm-wakeups.patch
acc590b57067327fc94a317f3d874de2a7fc896ac4984ad49e7fa2e0fce3d81e9aa749864ed5a892601b6423dbe5832bfaa4dbe3a63dcf5d348bc20b693e35ff  0016-intel_idle-tweak-cpuidle-cstates.patch
01632ff143ec4077b8ad63d0151d157d83c70496de9da7e394d76b884beacdb8913e1c43336815d882d28b87b0a828c9961c60c582f90ccd0f7e171662d1152d  0017-smpboot-reuse-timer-calibration.patch
6acbccee6a92c525644ecefbd77bbca8a0669578a356742b5e39a5e73471233f9c3daaef3e1f53b8d89a75635711d834f6c0cea2bc12aa61e071030898dfd567  0018-initialize-ata-before-graphics.patch
9752e4467e4abc524265443efbc11c0884675f4fbd7da2284bf0c28aeb594c098d7031572e33eaa0c456ab56cbd6a6f92471938d6fed3bed824602d3d1625361  0019-ata-libahci-ignore-staggered-spin-up.patch
"
