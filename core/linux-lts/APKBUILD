# Description:

# secfixes:
#   6.1.60-r0:
#     - CVE-2020-26555
#   6.1.57-r0:
#     - CVE-2023-34324
_flavor=lts
pkgname=linux-${_flavor}
pkgver=6.1.60
pkgrel=0
_kernver=${pkgver%.*}
pkgdesc="$VENDOR_DISTRO_NAME Linux lts kernel"
url="https://www.kernel.org"
depends="dracut"
_depends_dev="perl gmp-dev elfutils-dev bash flex bison"
makedepends="$_depends_dev sed installkernel bc linux-headers openssl-dev
	diffutils findutils xz sbsigntool"
options="!strip !annobin"
_config=${config:-config-lts.${CARCH}}
source="https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/linux-$_kernver.tar.xz
	config-lts.x86_64
	config-lts-debug.x86_64
	extramods
	x509.genkey
	../shim/bellsoft-uefi-ca.pem

	0100-efi-Add-an-EFI_SECURE_BOOT-flag-to-indicate-secure-b.patch
	0101-efi-Lock-down-the-kernel-if-booted-in-secure-boot-mo.patch
	0102-mtd-phram-slram-Disable-when-the-kernel-is-locked-do.patch
	0103-arm64-add-kernel-config-option-to-lock-down-when-in-.patch
	0104-kallsyms-Reduce-the-memory-occupied-by-kallsyms_seqs.patch
	0105-kallsyms-Add-helper-kallsyms_on_each_match_symbol.patch
	0106-livepatch-Use-kallsyms_on_each_match_symbol-to-impro.patch
	0107-livepatch-Call-klp_match_callback-in-klp_find_callba.patch
	0108-kernel-params.c-defer-most-of-param_sysfs_init-to-la.patch
	0109-pci-pme-wakeups.patch
	0110-ksm-wakeups.patch
	0111-intel_idle-tweak-cpuidle-cstates.patch
	0112-smpboot-reuse-timer-calibration.patch
	0113-initialize-ata-before-graphics.patch
	0114-ata-libahci-ignore-staggered-spin-up.patch
	0115-net-skb-disable-a-single-page-frag-cache.patch
	"
subpackages="$pkgname-dev:_dev:$CBUILD_ARCH"
subpackages="$subpackages $pkgname-extra-modules:_extramods:$CBUILD_ARCH"

_flavors=
for _i in $source; do
	case $_i in
	config-*.$CARCH)
		_f=${_i%.$CARCH}
		_f=${_f#config-}
		_flavors="$_flavors ${_f}"

		[ "linux-$_f" = "$pkgname" ] && continue

		_fn="$(echo $_f | tr - _)"
		subpackages="$subpackages linux-${_f}:_${_fn}:$CBUILD_ARCH \
			linux-${_f}-dev:_dev:$CBUILD_ARCH \
			linux-${_f}-extra-modules:_extramods:$CBUILD_ARCH"
		;;
	esac
done

if [ "${pkgver%.0}" = "$pkgver" ]; then
	source="$source
	https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/patch-$pkgver.xz"
fi
arch="all"
license="GPL-2.0"

_carch=${CARCH}
case "$_carch" in
aarch64*) _carch="arm64" ;;
arm*) _carch="arm" ;;
mips*) _carch="mips" ;;
ppc*) _carch="powerpc" ;;
s390*) _carch="s390" ;;
esac

prepare_patches() {
	local _ret=0

	cd "$srcdir"/linux-$_kernver
	if [ "$_kernver" != "$pkgver" ]; then
		msg "Applying patch-$pkgver.xz"
		unxz -c < "$srcdir"/patch-$pkgver.xz | patch -p1 -N
	fi

	for i in $source; do
		case $i in
		*.patch)
			msg "Applying $i..."
			if ! patch -s -p1 -N -i "$srcdir"/$i; then
				error "Patch failed to apply"
				_ret=1
			fi
			;;
		esac
	done
	return $_ret
}

prepare_config()
{
	local _flavor=$i
	local _config=config-$_flavor.${CARCH}
	local _builddir="$srcdir"/build-$_flavor.$CARCH
	local _cfg_file="$_builddir"/.config

	mkdir -p "$_builddir"
	echo "-$pkgrel-$_flavor" > "$_builddir"/localversion-$VENDOR_DISTRO

	cp "$srcdir"/$_config "$_cfg_file"

	make -C "$srcdir"/linux-$_kernver \
		O="$_builddir" \
		ARCH="$_carch" \
		listnewconfig oldconfig

	mkdir -p "$_builddir"/certs
	cp "$srcdir"/x509.genkey "$_builddir"/certs/

	if [ "$KERNEL_SIGNKEY_X509" ]; then
		cp $KERNEL_SIGNKEY_X509 "$_builddir"/certs/bellsoft_signkey.pem
		scripts/config --file "$_cfg_file" --set-str system_trusted_keys "certs/bellsoft_signkey.pem"
		msg "Using trusted keys: '$KERNEL_SIGNKEY_X509'"
	fi

	if [ "$KERNEL_DEV_BUILD" ]; then
		# increase build speed for development kernels
		scripts/config --file "$_cfg_file" --disable x86_decoder_selftest
	fi
}

prepare() {
	prepare_patches

	for i in $_flavors; do
		prepare_config $i
	done
}

build() {
	unset LDFLAGS
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	for i in $_flavors; do
		cd "$srcdir"/build-$i.$CARCH
		make ARCH="$_carch" CC="${CC:-gcc}" \
			KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-$VENDOR_DISTRO_NAME"
	done
}

_move_extra_modules() {
	local _outdir="$1"
	local _abi_release="$2"
	local _buildflavor="$3"
	local _extra_path="${srcdir}/extra_modules_${_buildflavor}"
	local _mods_path="$_outdir/lib/modules/${_abi_release}/kernel"
	local _extramods="$(cat "$srcdir"/extramods)"
	local _dir_name _mod_path _m _c _src _dst
	local err=0

	for _m in $_extramods; do
		_c="${_m:0:1}"

		case "$_c" in
			#) continue;;
			-) _m="${_m:1}";;
		esac

		_dir_name="$(dirname $_m)"
		[ "${_m: -3}" = ".ko" ] && _m="$_m.xz"

		if [ "$_c" = "-" ]; then
			_src="$_extra_path/$_m"
			_dst="$_mods_path/$_dir_name"
		else
			_src="$_mods_path/$_m"
			_dst="$_extra_path/$_dir_name"
		fi

		mkdir -p "$_dst"
		mv -f "$_src" "$_dst"
	done
}

_package() {
	local _buildflavor="$1" _outdir="$2"
	local _abi_release=${pkgver}-${pkgrel}-${_buildflavor}
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	sign_list="boot/vmlinuz-${_abi_release}"
	sign_verify="bellsoft-uefi-ca.pem"

	cd "$srcdir"/build-$_buildflavor.$CARCH
	mkdir -p "$_outdir"/boot "$_outdir"/lib/modules

	local _install
	case "$CARCH" in
		arm*|aarch64) _install="zinstall dtbs_install";;
		*) _install=install;;
	esac

	make -j1 modules_install $_install \
		ARCH="$_carch" \
		INSTALL_MOD_PATH="$_outdir" \
		INSTALL_PATH="$_outdir"/boot \
		INSTALL_DTBS_PATH="$_outdir/boot/dtbs-$_buildflavor"

	_move_extra_modules $_outdir $_abi_release $_buildflavor

	rm -f "$_outdir"/lib/modules/${_abi_release}/build \
		"$_outdir"/lib/modules/${_abi_release}/source
	rm -rf "$_outdir"/lib/firmware

	install -D -m644 include/config/kernel.release \
		"$_outdir"/usr/share/kernel/$_buildflavor/kernel.release
}

package() {
	install="$pkgname.pre-upgrade $pkgname.post-deinstall $pkgname.post-install $pkgname.post-upgrade"
	_package lts "$pkgdir"

	msg "Checking modules dependencies"
	local _abi_release=${pkgver}-${pkgrel}-lts

	cd "$pkgdir"/lib/modules/${_abi_release}

	local _mods="$(find kernel -name *.ko.xz)"
	local _d _m _deps _failed=0

	for _m in $_mods; do
		_deps="$(grep "^$_m:" modules.dep | cut -f2 -d: | xargs)"
		for _d in $_deps; do
			if ! echo "$_mods" | grep -q "$_d"; then
				msg "moddep error: $_m -> $_d"
				_failed=1
			fi
		done
	done

	return $_failed
}

_lts_debug() {
	install="$subpkgname.post-deinstall $subpkgname.post-install $subpkgname.post-upgrade"
	_package lts-debug "$subpkgdir"
}

_extramods() {
	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-extra-modules$)//g')
	local _abi_release=${pkgver}-${pkgrel}-${_flavor}
	local _dir="$subpkgdir"/lib/modules/${_abi_release}/kernel

	depends="$depends linux-${_flavor}=$pkgver-r$pkgrel linux-firmware-extra-modules-any"
	pkgdesc="Additional modules for $VENDOR_DISTRO_NAME Linux $_flavor kernel"

	mkdir -p "$_dir"
	cp -r "$srcdir"/extra_modules_${_flavor}/* "$_dir"/
}

_dev() {
	pkgdesc="Headers and scripts for third-party modules for $VENDOR_DISTRO_NAME Linux $_flavor kernel"
	depends="$_depends_dev"

	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-dev$)//g')
	local _abi_release=${pkgver}-${pkgrel}-$_flavor
	local _dir="$subpkgdir"/usr/src/linux-headers-${_abi_release}

	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	mkdir -p "$_dir"

	cp "$srcdir"/config-$_flavor.${CARCH} "$_dir"/.config
	echo "-$pkgrel-$_flavor" > "$_dir"/localversion-$VENDOR_DISTRO

	make -j1 -C "$srcdir"/linux-$_kernver \
		O="$_dir" \
		ARCH="$_carch" \
		syncconfig prepare modules_prepare scripts

	# remove the stuff that points to real sources. we want 3rd party
	# modules to believe this is the sources
	rm "$_dir"/Makefile "$_dir"/source

	# copy the needed stuff from real sources
	#
	# this is taken from ubuntu kernel build script
	# http://kernel.ubuntu.com/git/ubuntu/ubuntu-zesty.git/tree/debian/rules.d/3-binary-indep.mk
	cd "$srcdir"/linux-$_kernver
	find .  -path './include/*' -prune \
		-o -path './scripts/*' -prune -o -type f \
		\( -name 'Makefile*' -o -name 'Kconfig*' -o -name 'Kbuild*' -o \
		   -name '*.sh' -o -name '*.pl' -o -name '*.lds' -o -name 'Platform' \) \
		-print | cpio -pdm "$_dir"

	cp -a scripts include "$_dir"

	find $(find arch -name include -type d -print) -type f \
		| cpio -pdm "$_dir"

	install -Dm644 "$srcdir"/build-$_flavor.$CARCH/Module.symvers \
		"$_dir"/Module.symvers

	mkdir -p "$subpkgdir"/lib/modules/${_abi_release}
	ln -sf /usr/src/linux-headers-${_abi_release} \
		"$subpkgdir"/lib/modules/${_abi_release}/build
}

sha512sums="
6ed2a73c2699d0810e54753715635736fc370288ad5ce95c594f2379959b0e418665cd71bc512a0273fe226fe90074d8b10d14c209080a6466498417a4fdda68  linux-6.1.tar.xz
6d5b98b1a03cafd712e18e277c2755cfd93c699c7ee34c3ce222a949da15774cb9d5d2cee47189a4bbf34067baa6c098752abb8e4b7a150f8c89d2658bb5dae8  patch-6.1.60.xz
19cd1ce4ec420b7c860e39e68e66aeedd7761b3514b0ae2fc1292dd6e0567a54ca9011049e10b6d5bf34ea8aeaf11b1accf731199cfffc0b470dece780c50e08  config-lts.x86_64
626826c06eb0310eb1130e6ae578777aa4b200140f71192830f1d06d49a2de825f8430db4500d1b8621a3e0701d8efec179fd7786d7cfbfb1f8c73146fadd1f3  config-lts-debug.x86_64
04b4bb43c1fc71136e335cedb9b2e8b69d3ac4f67a5112d267689d3faa37479df662a2310800fe642e6489c3c617442a264ca765b105df6c9db2328b78a59cb5  extramods
8ab1221f07d35b710da7e27d6e443ca303e03b69f29a21d2a8fef236a48e0b95b5521cd1e4adb1046d048a37a9d52989e5a5c55647da6f57f1ba7bb69230ce4f  x509.genkey
304d6a2d2c25af142b2cf2222079ebf59b8174f0825840dfc88e60016e5fcfe12973e0a250b4172ff7ea77cdb014cb5fec1a474965fee97478a6dcd0cbe6bdd3  bellsoft-uefi-ca.pem
5879170de943eabd7c82481cfa41da745d1056c4b72886c499ce7ef7fd19f89ae13663183b12890b6592c4875ce4051a798ff0a8a75cee5399d13ab4e7638436  0100-efi-Add-an-EFI_SECURE_BOOT-flag-to-indicate-secure-b.patch
7199ff3510fe5e7c147e95322e93eaadb6b51d119492b01e45bbb10f74329a77f1333175e775121722e55cb800ccbd23eded954bb71610c8bda0fd94c63acf27  0101-efi-Lock-down-the-kernel-if-booted-in-secure-boot-mo.patch
78156052730644de65e8e3b32e2cb5f08f9fa5d4ef559eac5b07971dfa2b791f7836ffb977e4419f942bd0ec0e8222bb5e5ae85fe9b84d64fd14da53ccea65ca  0102-mtd-phram-slram-Disable-when-the-kernel-is-locked-do.patch
6e88a9236e41703ba465c95d7356542e6e90abbe52e912de58d8bd6274765343572afd874f58352dc3e1ac3a93949bbbb13f830e673a29348413dd33f413c3ce  0103-arm64-add-kernel-config-option-to-lock-down-when-in-.patch
8460ad9af8eb70312f9bd3147ae29ba6a85012bf0b3bff367d1254d863f1854ee5b7081c6098ee58f05bae930a1affe04c09be4acbc285b44590506a134d8010  0104-kallsyms-Reduce-the-memory-occupied-by-kallsyms_seqs.patch
4b43f4faa46d392fecc47c07cd3418ee704f3fbddab6e8930d74710a68942c19b963b2b906297b66540435edfac303f6c13a02383c1a689fb65101611e2896d1  0105-kallsyms-Add-helper-kallsyms_on_each_match_symbol.patch
449b8d6b81d22de1d5f9aba9f0d63af809e4b69764841de8b480e803eadaa293c7dd9dcdbc8e480dc36223d673111b6084e4069d88cb41a6b4a13f809bafd90b  0106-livepatch-Use-kallsyms_on_each_match_symbol-to-impro.patch
0f1d7e838dc59005da7adc3758acba014b93f0964f9f4c16228d0d099a80b6b327cb6efe573100a72a9812000178ffcfa3edd21b373e606eafe3944f331fe064  0107-livepatch-Call-klp_match_callback-in-klp_find_callba.patch
8bd8eb71aa07d9efccbf4fefa46bfb3211dea2c8929826cb0bcdefe00940c17b33068ec3393b7849986f6e92a7f95f3eab89976a56d4adb4817ffb436dd94824  0108-kernel-params.c-defer-most-of-param_sysfs_init-to-la.patch
87f5b43e85e52accdac532fcac89995d931cb653ab33a43724ec73658aec9d37a8d9fdf1870b2755df200fa62502e3c54df8876cca7625b21f124adb485782ec  0109-pci-pme-wakeups.patch
589005b5a523aa64f511de6cb892e8df2631f7c03856d55810097a57d3994c687ff45289201effe29fb6c7c03271844ab509ff27e36b40a8e8fb263815696033  0110-ksm-wakeups.patch
9cfb769759d4cd6449f06a923375fc650dbd82d1d0fe4d8d0662c0614e25cf5039a48d4ce8a3d987b799e60228c021ce3af84a589857e384a8912f9e47d71bcf  0111-intel_idle-tweak-cpuidle-cstates.patch
b13f79504fb169cc256111413a21f77ea3ed548efa08894f3b924f00689edb8825c4892f6881a71a68b8553050c51d8a0a0ef2f92cb85e0ef8a099689c277f24  0112-smpboot-reuse-timer-calibration.patch
39a293015db0f2a1c70eabf63ed2da099ea5543943f074f8890b4a28f702b8217746aaec6de01489c59519ab195ff5e7dea2efa185a004738f5ac24e225dbb3f  0113-initialize-ata-before-graphics.patch
b89feddca2bb23cafb0b395b3dd189f930f1b057c916149ab0ad468d13c949e0326ae259961e42e8061a0e3d8590d55a56679041b7931ccfd5c39d6098cab808  0114-ata-libahci-ignore-staggered-spin-up.patch
c7d4ea3bdf62dabd3acf77cae5f74934434fa8fd440265efe755caeb7dd5196cf4fbc2597c3bb99f3733cdab68f30a59be0f3ab4d54926903688f6e0beecac71  0115-net-skb-disable-a-single-page-frag-cache.patch
"
